{"version":3,"sources":["src/app/components/landing-page/landing-page.component.ts","src/app/components/landing-page/landing-page.component.html","src/app/components/login/login.component.ts","src/app/components/login/login.component.html","src/app/components/signup/signup.component.ts","src/app/components/signup/signup.component.html","node_modules/@angular/material/fesm2022/sidenav.mjs","node_modules/@angular/material/fesm2022/toolbar.mjs","src/app/components/job-seeker-components/dashboard/dashboard.component.ts","node_modules/@angular/material/fesm2022/progress-bar.mjs","src/app/services/profile.service.ts","src/app/services/skill.service.ts","src/app/services/cv.service.ts","src/app/services/career-path.service.ts","src/app/services/experience.service.ts","src/app/services/education.service.ts","src/app/components/job-seeker-components/profile/profile.component.ts","src/app/components/job-seeker-components/profile-update/profile-update.component.ts","node_modules/@angular/cdk/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/module-VHqoK2sq.mjs","src/app/components/job-seeker-components/application-form/application-form.component.ts","src/app/components/job-seeker-components/job-matching/job-matching.component.ts","node_modules/@angular/material/fesm2022/slider.mjs","src/app/components/job-seeker-components/job-search/job-search.component.ts","node_modules/@angular/cdk/fesm2022/stepper.mjs","node_modules/@angular/material/fesm2022/stepper.mjs","src/app/components/job-seeker-components/career-path/career-path.component.ts","src/app/components/job-seeker-components/cv-generator/cv-generator.component.ts","src/app/components/job-seeker-components/my-applications/my-applications.component.ts","src/app/components/job-seeker-components/interviews/interviews.component.ts","src/app/components/job-seeker-components/chatbot/chatbot.component.ts","src/app/components/job-seeker-components/experience/experience.component.ts","src/app/components/job-seeker-components/education/education.component.ts","src/app/components/job-seeker-components/job-seeker.routes.ts","src/app/guards/auth.guard.ts","src/app/components/employer-components/dashboard/dashboard.component.ts","src/app/components/employer-components/employer.routes.ts","src/app/app.routes.ts","src/app/interceptors/auth.interceptor.ts","src/app/app.config.ts","src/app/app.component.ts","src/main.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    imports: [CommonModule],\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\nexport class LandingPageComponent {\r\n  features = [\r\n    {\r\n      icon: 'fa-solid fa-robot',\r\n      title: 'AI-Powered Matching',\r\n      description: 'Our advanced AI algorithm matches candidates with the perfect job opportunities based on skills and experience.'\r\n    },\r\n    {\r\n      icon: 'fa-solid fa-chart-line',\r\n      title: 'Smart Analytics',\r\n      description: 'Get detailed insights into your application status, match scores, and career growth opportunities.'\r\n    },\r\n    {\r\n      icon: 'fa-solid fa-comments',\r\n      title: 'Real-time Chatbot',\r\n      description: 'Chat with our AI chatbot to get help with your job search.'\r\n    },\r\n    {\r\n      icon: 'fa-solid fa-file-circle-check',\r\n      title: 'Automated CV Analysis',\r\n      description: 'Upload your CV and let our AI extract skills and experience automatically.'\r\n    }\r\n  ];\r\n\r\n  testimonials = [\r\n    {\r\n      name: 'Sarah Johnson',\r\n      role: 'Software Developer',\r\n      rating: 5,\r\n      comment: 'EmployBridge helped me find my dream job! The AI matching system is incredibly accurate.',\r\n      image: 'assets/images/testimonial1.jpg'\r\n    },\r\n    {\r\n      name: 'Michael Chen',\r\n      role: 'HR Manager',\r\n      rating: 5,\r\n      comment: 'As an employer, the platform has streamlined our hiring process significantly.',\r\n      image: 'assets/images/testimonial2.jpg'\r\n    },\r\n    {\r\n      name: 'Emily Rodriguez',\r\n      role: 'Marketing Specialist',\r\n      rating: 5,\r\n      comment: 'The AI chatbot was a game-changer for me. It answered all my questions and helped me find the perfect job.',\r\n      image: 'assets/images/testimonial3.jpg'\r\n    }\r\n  ];\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  scrollToSection(sectionId: string): void {\r\n    const element = document.getElementById(sectionId);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }\r\n\r\n  navigateToLogin(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  navigateToSignup(): void {\r\n    this.router.navigate(['/signup']);\r\n  }\r\n} ","<!-- Header Section -->\r\n<header class=\"header\">\r\n  <div class=\"logo\" (click)=\"scrollToSection('home')\">\r\n    <i class=\"fa-solid fa-bridge\"></i>\r\n    <span>EmployBridge</span>\r\n  </div>\r\n  <nav class=\"nav-links\">\r\n    <a (click)=\"scrollToSection('home')\">Home</a>\r\n    <a (click)=\"scrollToSection('about')\">About</a>\r\n    <a (click)=\"scrollToSection('testimonials')\">Testimonials</a>\r\n    <a (click)=\"scrollToSection('contact')\">Contact</a>\r\n  </nav>\r\n  <div class=\"auth-buttons\">\r\n    <button class=\"login-btn\" (click)=\"navigateToLogin()\">Login</button>\r\n    <button class=\"signup-btn\" (click)=\"navigateToSignup()\">Sign Up</button>\r\n  </div>\r\n</header>\r\n\r\n<!-- Home Section -->\r\n<section id=\"home\" class=\"home-section\">\r\n  <div class=\"hero-content\">\r\n    <h1>Find Your Dream Job with AI</h1>\r\n    <p>Experience the future of job hunting with our AI-powered platform</p>\r\n    <button class=\"cta-button\" (click)=\"navigateToSignup()\">Get Started</button>\r\n  </div>\r\n</section>\r\n\r\n<!-- About Section -->\r\n<section id=\"about\" class=\"about-section\">\r\n  <h2>Why Choose EmployBridge?</h2>\r\n  <div class=\"features-grid\">\r\n    <div class=\"feature-card\" *ngFor=\"let feature of features\">\r\n      <i [class]=\"feature.icon\"></i>\r\n      <h3>{{feature.title}}</h3>\r\n      <p>{{feature.description}}</p>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<!-- Testimonials Section -->\r\n<section id=\"testimonials\" class=\"testimonials-section\">\r\n  <h2>What Our Users Say</h2>\r\n  <div class=\"testimonials-grid\">\r\n    <div class=\"testimonial-card\" *ngFor=\"let testimonial of testimonials\">\r\n      <div class=\"testimonial-header\">\r\n        <img [src]=\"testimonial.image\" [alt]=\"testimonial.name\">\r\n        <div class=\"testimonial-info\">\r\n          <h3>{{testimonial.name}}</h3>\r\n          <p>{{testimonial.role}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"rating\">\r\n        <i class=\"fa-solid fa-star\" *ngFor=\"let star of [].constructor(testimonial.rating)\"></i>\r\n      </div>\r\n      <p class=\"testimonial-comment\">{{testimonial.comment}}</p>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<!-- Contact Section -->\r\n<section id=\"contact\" class=\"contact-section\">\r\n  <h2>Get in Touch</h2>\r\n  <div class=\"contact-container\">\r\n    <form class=\"contact-form\">\r\n      <div class=\"form-group\">\r\n        <input type=\"email\" placeholder=\"Your Email\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <textarea placeholder=\"Your Message\" required></textarea>\r\n      </div>\r\n      <button type=\"submit\" class=\"send-button\">\r\n        <i class=\"fa-solid fa-paper-plane\"></i>\r\n        Send Message\r\n      </button>\r\n    </form>\r\n  </div>\r\n</section>\r\n\r\n<!-- Footer Section -->\r\n<footer class=\"footer\">\r\n  <div class=\"footer-content\">\r\n    <div class=\"footer-section\">\r\n      <h3>EmployBridge</h3>\r\n      <p>Revolutionizing the job search experience with AI</p>\r\n    </div>\r\n    <div class=\"footer-section\">\r\n      <h4>Quick Links</h4>\r\n      <a (click)=\"scrollToSection('home')\">Home</a>\r\n      <a (click)=\"scrollToSection('about')\">About</a>\r\n      <a (click)=\"scrollToSection('testimonials')\">Testimonials</a>\r\n      <a (click)=\"scrollToSection('contact')\">Contact</a>\r\n    </div>\r\n    <div class=\"footer-section\">\r\n      <h4>Connect With Us</h4>\r\n      <div class=\"social-links\">\r\n        <a href=\"#\"><i class=\"fa-brands fa-twitter\"></i></a>\r\n        <a href=\"#\"><i class=\"fa-brands fa-facebook\"></i></a>\r\n        <a href=\"#\"><i class=\"fa-brands fa-instagram\"></i></a>\r\n        <a href=\"#\"><i class=\"fa-brands fa-linkedin\"></i></a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-bottom\">\r\n    <p>&copy; 2024 EmployBridge. All rights reserved.</p>\r\n  </div>\r\n</footer> ","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\ntype UserType = 'job_seeker' | 'admin' | 'employer';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule]\r\n})\r\nexport class LoginComponent {\r\n  userType: UserType = 'job_seeker';\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      userType: ['job_seeker']\r\n    });\r\n  }\r\n\r\n  toggleUserType(type: UserType): void {\r\n    this.userType = type;\r\n    this.loginForm.patchValue({ userType: type });\r\n    this.error = null;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      this.authService.login(this.loginForm.value).subscribe({\r\n        next: (response) => {\r\n          this.loading = false;\r\n          // Navigate based on user role\r\n          if (response.user.role === 'job_seeker') {\r\n            this.router.navigate(['/job-seeker']);\r\n          } else if (response.user.role === 'employer') {\r\n            this.router.navigate(['/employer']);\r\n          } else if (response.user.role === 'admin') {\r\n            this.router.navigate(['/admin/dashboard']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          this.error = error.error.message || 'Invalid credentials';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.loginForm.get(fieldName);\r\n    return field ? field.invalid && (field.dirty || field.touched) : false;\r\n  }\r\n\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.loginForm.get(fieldName);\r\n    if (!field) return '';\r\n\r\n    if (field.hasError('required')) {\r\n      return 'This field is required';\r\n    }\r\n    if (field.hasError('email')) {\r\n      return 'Please enter a valid email address';\r\n    }\r\n    if (field.hasError('minlength')) {\r\n      return `Minimum length is ${field.errors?.['minlength'].requiredLength} characters`;\r\n    }\r\n    return '';\r\n  }\r\n} ","<div class=\"login-container\" [ngClass]=\"userType\">\r\n  <div class=\"login-card\">\r\n    <div class=\"toggle-container\">\r\n      <button \r\n        class=\"toggle-btn\" \r\n        [class.active]=\"userType === 'job_seeker'\"\r\n        (click)=\"toggleUserType('job_seeker')\">\r\n        Job Seeker\r\n      </button>\r\n      <button \r\n        class=\"toggle-btn\" \r\n        [class.active]=\"userType === 'admin'\"\r\n        (click)=\"toggleUserType('admin')\">\r\n        Admin\r\n      </button>\r\n      <button \r\n        class=\"toggle-btn\" \r\n        [class.active]=\"userType === 'employer'\"\r\n        (click)=\"toggleUserType('employer')\">\r\n        Employer\r\n      </button>\r\n    </div>\r\n\r\n    <h2>{{ userType === 'job_seeker' ? 'Job Seeker Login' : \r\n          userType === 'admin' ? 'Admin Login' : 'Employer Login' }}</h2>\r\n\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\r\n      <div class=\"form-group\">\r\n        <input \r\n          type=\"email\" \r\n          formControlName=\"email\" \r\n          id=\"email\"\r\n          [class.invalid]=\"isFieldInvalid('email')\"\r\n          required>\r\n        <label for=\"email\">Email Address</label>\r\n        <div class=\"error-message\" *ngIf=\"isFieldInvalid('email')\">\r\n          {{ getErrorMessage('email') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input \r\n          type=\"password\" \r\n          formControlName=\"password\" \r\n          id=\"password\"\r\n          [class.invalid]=\"isFieldInvalid('password')\"\r\n          required>\r\n        <label for=\"password\">Password</label>\r\n        <div class=\"error-message\" *ngIf=\"isFieldInvalid('password')\">\r\n          {{ getErrorMessage('password') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"error-message\" *ngIf=\"error\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <button \r\n        type=\"submit\" \r\n        class=\"submit-btn\" \r\n        [disabled]=\"loginForm.invalid || loading\">\r\n        <span *ngIf=\"!loading\">Login</span>\r\n        <i class=\"fa-solid fa-spinner fa-spin\" *ngIf=\"loading\"></i>\r\n      </button>\r\n\r\n      <p class=\"signup-link\">\r\n        Don't have an account? \r\n        <a routerLink=\"/signup\">Sign up here</a>\r\n      </p>\r\n    </form>\r\n  </div>\r\n</div> ","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css'],\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterModule ]\r\n})\r\nexport class SignupComponent {\r\n  isJobSeeker = true;\r\n  signupForm: FormGroup;\r\n  loading = false;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.signupForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(2)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', [Validators.required]],\r\n      role: ['job_seeker'],\r\n      // Job Seeker specific fields\r\n      skills: [''],\r\n      experience: [''],\r\n      education: [''],\r\n      // Employer specific fields\r\n      company: [''],\r\n      position: [''],\r\n      industry: ['']\r\n    }, {\r\n      validators: this.passwordMatchValidator\r\n    });\r\n  }\r\n\r\n  toggleForm(): void {\r\n    this.isJobSeeker = !this.isJobSeeker;\r\n    this.signupForm.patchValue({\r\n      role: this.isJobSeeker ? 'job_seeker' : 'employer'\r\n    });\r\n    this.error = null;\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('password')?.value;\r\n    const confirmPassword = form.get('confirmPassword')?.value;\r\n    return password === confirmPassword ? null : { passwordMismatch: true };\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.signupForm.valid) {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      const formData = {\r\n        ...this.signupForm.value,\r\n        role: this.isJobSeeker ? 'job_seeker' : 'employer',\r\n        // Remove confirmPassword before sending to server\r\n        confirmPassword: undefined\r\n      };\r\n\r\n      this.authService.register(formData).subscribe({\r\n        next: (response) => {\r\n          this.loading = false;\r\n          // Navigate based on user role\r\n          if (response.user.role === 'job_seeker') {\r\n            this.router.navigate(['/job-seeker']);\r\n          } else if (response.user.role === 'employer') {\r\n            this.router.navigate(['/employer']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.loading = false;\r\n          this.error = error.error.message || 'An error occurred during signup';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Helper method to check if a field is invalid\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.signupForm.get(fieldName);\r\n    return field ? field.invalid && (field.dirty || field.touched) : false;\r\n  }\r\n\r\n  // Helper method to get error message for a field\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.signupForm.get(fieldName);\r\n    if (!field) return '';\r\n\r\n    if (field.hasError('required')) {\r\n      return 'This field is required';\r\n    }\r\n    if (field.hasError('email')) {\r\n      return 'Please enter a valid email address';\r\n    }\r\n    if (field.hasError('minlength')) {\r\n      return `Minimum length is ${field.errors?.['minlength'].requiredLength} characters`;\r\n    }\r\n    if (fieldName === 'confirmPassword' && this.signupForm.hasError('passwordMismatch')) {\r\n      return 'Passwords do not match';\r\n    }\r\n    return '';\r\n  }\r\n} ","<div class=\"signup-container\" [ngClass]=\"{'job-seeker': isJobSeeker, 'employer': !isJobSeeker}\">\r\n  <div class=\"signup-card\">\r\n    <div class=\"toggle-container\">\r\n      <button \r\n        class=\"toggle-btn\" \r\n        [class.active]=\"isJobSeeker\"\r\n        (click)=\"toggleForm()\">\r\n        Job Seeker\r\n      </button>\r\n      <button \r\n        class=\"toggle-btn\" \r\n        [class.active]=\"!isJobSeeker\"\r\n        (click)=\"toggleForm()\">\r\n        Employer\r\n      </button>\r\n    </div>\r\n\r\n    <h2>{{ isJobSeeker ? 'Job Seeker Signup' : 'Employer Signup' }}</h2>\r\n\r\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" class=\"signup-form\">\r\n      <!-- Common Fields -->\r\n      <div class=\"form-group\">\r\n        <input \r\n          type=\"text\" \r\n          formControlName=\"name\" \r\n          id=\"name\"\r\n          [class.invalid]=\"isFieldInvalid('name')\"\r\n          required>\r\n        <label for=\"name\">Full Name</label>\r\n        <div class=\"error-message\" *ngIf=\"isFieldInvalid('name')\">\r\n          {{ getErrorMessage('name') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input \r\n          type=\"email\" \r\n          formControlName=\"email\" \r\n          id=\"email\"\r\n          [class.invalid]=\"isFieldInvalid('email')\"\r\n          required>\r\n        <label for=\"email\">Email Address</label>\r\n        <div class=\"error-message\" *ngIf=\"isFieldInvalid('email')\">\r\n          {{ getErrorMessage('email') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input \r\n          type=\"password\" \r\n          formControlName=\"password\" \r\n          id=\"password\"\r\n          [class.invalid]=\"isFieldInvalid('password')\"\r\n          required>\r\n        <label for=\"password\">Password</label>\r\n        <div class=\"error-message\" *ngIf=\"isFieldInvalid('password')\">\r\n          {{ getErrorMessage('password') }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <input \r\n          type=\"password\" \r\n          formControlName=\"confirmPassword\" \r\n          id=\"confirmPassword\"\r\n          [class.invalid]=\"isFieldInvalid('confirmPassword')\"\r\n          required>\r\n        <label for=\"confirmPassword\">Confirm Password</label>\r\n        <div class=\"error-message\" *ngIf=\"isFieldInvalid('confirmPassword')\">\r\n          {{ getErrorMessage('confirmPassword') }}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Job Seeker Specific Fields -->\r\n      <ng-container *ngIf=\"isJobSeeker\">\r\n        <div class=\"form-group\">\r\n          <input \r\n            type=\"text\" \r\n            formControlName=\"skills\" \r\n            id=\"skills\">\r\n          <label for=\"skills\">Skills (comma separated)</label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input \r\n            type=\"text\" \r\n            formControlName=\"experience\" \r\n            id=\"experience\">\r\n          <label for=\"experience\">Years of Experience</label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input \r\n            type=\"text\" \r\n            formControlName=\"education\" \r\n            id=\"education\">\r\n          <label for=\"education\">Highest Education</label>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <!-- Employer Specific Fields -->\r\n      <ng-container *ngIf=\"!isJobSeeker\">\r\n        <div class=\"form-group\">\r\n          <input \r\n            type=\"text\" \r\n            formControlName=\"company\" \r\n            id=\"company\"\r\n            required>\r\n          <label for=\"company\">Company Name</label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input \r\n            type=\"text\" \r\n            formControlName=\"position\" \r\n            id=\"position\"\r\n            required>\r\n          <label for=\"position\">Your Position</label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <input \r\n            type=\"text\" \r\n            formControlName=\"industry\" \r\n            id=\"industry\"\r\n            required>\r\n          <label for=\"industry\">Industry</label>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div class=\"error-message\" *ngIf=\"error\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <button \r\n        type=\"submit\" \r\n        class=\"submit-btn\" \r\n        [disabled]=\"signupForm.invalid || loading\">\r\n        <span *ngIf=\"!loading\">Sign Up</span>\r\n        <i class=\"fa-solid fa-spinner fa-spin\" *ngIf=\"loading\"></i>\r\n      </button>\r\n\r\n      <p class=\"login-link\">\r\n        Already have an account? \r\n        <a routerLink=\"/login\">Login here</a>\r\n      </p>\r\n    </form>\r\n  </div>\r\n</div> ","import { FocusTrapFactory, FocusMonitor, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, EventEmitter, Injector, afterNextRender, Input, Output, ViewChild, ANIMATION_MODULE_TYPE, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, take, startWith, debounceTime } from 'rxjs/operators';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\";\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  _platform = inject(Platform);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _container = inject(MatDrawerContainer);\n  constructor() {\n    const elementRef = inject(ElementRef);\n    const scrollDispatcher = inject(ScrollDispatcher);\n    const ngZone = inject(NgZone);\n    super(elementRef, scrollDispatcher, ngZone);\n  }\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Determines whether the content element should be hidden from the user. */\n  _shouldBeHidden() {\n    // In some modes the content is pushed based on the width of the opened sidenavs, however on\n    // the server we can't measure the sidenav so the margin is always zero. This can cause the\n    // content to jump around when it's rendered on the server and hydrated on the client. We\n    // avoid it by hiding the content on the initial render and then showing it once the sidenav\n    // has been measured on the client.\n    if (this._platform.isBrowser) {\n      return false;\n    }\n    const {\n      start,\n      end\n    } = this._container;\n    return start != null && start.mode !== 'over' && start.opened || end != null && end.mode !== 'over' && end.opened;\n  }\n  static ɵfac = function MatDrawerContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawerContent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContent,\n    selectors: [[\"mat-drawer-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\"],\n    hostVars: 6,\n    hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-content-hidden\", ctx._shouldBeHidden());\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatDrawerContent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatDrawerContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right',\n        '[class.mat-drawer-content-hidden]': '_shouldBeHidden()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }]\n    }]\n  }], () => [], null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  _elementRef = inject(ElementRef);\n  _focusTrapFactory = inject(FocusTrapFactory);\n  _focusMonitor = inject(FocusMonitor);\n  _platform = inject(Platform);\n  _ngZone = inject(NgZone);\n  _renderer = inject(Renderer2);\n  _interactivityChecker = inject(InteractivityChecker);\n  _doc = inject(DOCUMENT, {\n    optional: true\n  });\n  _container = inject(MAT_DRAWER_CONTAINER, {\n    optional: true\n  });\n  _focusTrap = null;\n  _elementFocusedBeforeDrawerWasOpened = null;\n  _eventCleanups;\n  /** Whether the view of the component has been attached. */\n  _isAttached;\n  /** Anchor node used to restore the drawer to its initial position. */\n  _anchor;\n  /** The side that the drawer is attached to. */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value !== this._position) {\n      // Static inputs in Ivy are set before the element is in the DOM.\n      if (this._isAttached) {\n        this._updatePositionInParent(value);\n      }\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  _position = 'start';\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  _mode = 'over';\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  get disableClose() {\n    return this._disableClose;\n  }\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  _disableClose = false;\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n   * instead.\n   */\n  get autoFocus() {\n    const value = this._autoFocus;\n    // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n    // because we don't know how the sidenav is being used, but in some cases it still makes\n    // sense to do it. The consumer can explicitly set `autoFocus`.\n    if (value == null) {\n      if (this.mode === 'side') {\n        return 'dialog';\n      } else {\n        return 'first-tabbable';\n      }\n    }\n    return value;\n  }\n  set autoFocus(value) {\n    if (value === 'true' || value === 'false' || value == null) {\n      value = coerceBooleanProperty(value);\n    }\n    this._autoFocus = value;\n  }\n  _autoFocus;\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  _opened = false;\n  /** How the sidenav was opened (keypress, mouse click etc.) */\n  _openedVia;\n  /** Emits whenever the drawer has started animating. */\n  _animationStarted = new Subject();\n  /** Emits whenever the drawer is done animating. */\n  _animationEnd = new Subject();\n  /** Event emitted when the drawer open state is changed. */\n  openedChange =\n  // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n  new EventEmitter(/* isAsync */true);\n  /** Event emitted when the drawer has been opened. */\n  _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n  /** Event emitted when the drawer has started opening. */\n  openedStart = this._animationStarted.pipe(filter(() => this.opened), mapTo(undefined));\n  /** Event emitted when the drawer has been closed. */\n  _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n  /** Event emitted when the drawer has started closing. */\n  closedStart = this._animationStarted.pipe(filter(() => !this.opened), mapTo(undefined));\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Event emitted when the drawer's position changes. */\n  // tslint:disable-next-line:no-output-on-prefix\n  onPositionChanged = new EventEmitter();\n  /** Reference to the inner element that contains all the content. */\n  _content;\n  /**\n   * An observable that emits when the drawer mode changes. This is used by the drawer container to\n   * to know when to when the mode changes so it can adapt the margins on the content.\n   */\n  _modeChanged = new Subject();\n  _injector = inject(Injector);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  constructor() {\n    this.openedChange.pipe(takeUntil(this._destroyed)).subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus(this._openedVia || 'program');\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._elementRef.nativeElement;\n      fromEvent(element, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n      this._eventCleanups = [this._renderer.listen(element, 'transitionrun', this._handleTransitionEvent), this._renderer.listen(element, 'transitionend', this._handleTransitionEvent), this._renderer.listen(element, 'transitioncancel', this._handleTransitionEvent)];\n    });\n    this._animationEnd.subscribe(() => {\n      this.openedChange.emit(this._opened);\n    });\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          cleanupBlur();\n          cleanupMousedown();\n          element.removeAttribute('tabindex');\n        };\n        const cleanupBlur = this._renderer.listen(element, 'blur', callback);\n        const cleanupMousedown = this._renderer.listen(element, 'mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  _takeFocus() {\n    if (!this._focusTrap) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    // When autoFocus is not on the sidenav, if the element cannot be focused or does\n    // not exist, focus the sidenav itself so the keyboard navigation still works.\n    // We need to check that `focus` is a function due to Universal.\n    switch (this.autoFocus) {\n      case false:\n      case 'dialog':\n        return;\n      case true:\n      case 'first-tabbable':\n        afterNextRender(() => {\n          const hasMovedFocus = this._focusTrap.focusInitialElement();\n          if (!hasMovedFocus && typeof element.focus === 'function') {\n            element.focus();\n          }\n        }, {\n          injector: this._injector\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this.autoFocus);\n        break;\n    }\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  _restoreFocus(focusOrigin) {\n    if (this.autoFocus === 'dialog') {\n      return;\n    }\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n  /** Whether focus is currently within the drawer. */\n  _isFocusWithinDrawer() {\n    const activeEl = this._doc.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n  ngAfterViewInit() {\n    this._isAttached = true;\n    // Only update the DOM position when the sidenav is positioned at\n    // the end since we project the sidenav before the content by default.\n    if (this._position === 'end') {\n      this._updatePositionInParent('end');\n    }\n    // Needs to happen after the position is updated\n    // so the focus trap anchors are in the right place.\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._updateFocusTrapState();\n    }\n  }\n  ngOnDestroy() {\n    this._eventCleanups.forEach(cleanup => cleanup());\n    this._focusTrap?.destroy();\n    this._anchor?.remove();\n    this._anchor = null;\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurs the active element.\n    return this._setOpen(/* isOpen */false, /* restoreFocus */true, 'mouse');\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    if (isOpen && openedVia) {\n      this._openedVia = openedVia;\n    }\n    const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n    if (!isOpen) {\n      this._openedVia = null;\n    }\n    return result;\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param focusOrigin Origin to use when restoring focus.\n   */\n  _setOpen(isOpen, restoreFocus, focusOrigin) {\n    if (isOpen === this._opened) {\n      return Promise.resolve(isOpen ? 'open' : 'close');\n    }\n    this._opened = isOpen;\n    if (this._container?._transitionsEnabled) {\n      // Note: it's importatnt to set this as early as possible,\n      // otherwise the animation can look glitchy in some cases.\n      this._setIsAnimating(true);\n    } else {\n      // Simulate the animation events if animations are disabled.\n      setTimeout(() => {\n        this._animationStarted.next();\n        this._animationEnd.next();\n      });\n    }\n    this._elementRef.nativeElement.classList.toggle('mat-drawer-opened', isOpen);\n    if (!isOpen && restoreFocus) {\n      this._restoreFocus(focusOrigin);\n    }\n    // Needed to ensure that the closing sequence fires off correctly.\n    this._changeDetectorRef.markForCheck();\n    this._updateFocusTrapState();\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  /** Toggles whether the drawer is currently animating. */\n  _setIsAnimating(isAnimating) {\n    this._elementRef.nativeElement.classList.toggle('mat-drawer-animating', isAnimating);\n  }\n  _getWidth() {\n    return this._elementRef.nativeElement.offsetWidth || 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n      // sidenav content.\n      this._focusTrap.enabled = !!this._container?.hasBackdrop && this.opened;\n    }\n  }\n  /**\n   * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n   * when it's in the `end` position so that it comes after the content and the visual order\n   * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n   * started off as `end` and was changed to `start`.\n   */\n  _updatePositionInParent(newPosition) {\n    // Don't move the DOM node around on the server, because it can throw off hydration.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    const parent = element.parentNode;\n    if (newPosition === 'end') {\n      if (!this._anchor) {\n        this._anchor = this._doc.createComment('mat-drawer-anchor');\n        parent.insertBefore(this._anchor, element);\n      }\n      parent.appendChild(element);\n    } else if (this._anchor) {\n      this._anchor.parentNode.insertBefore(element, this._anchor);\n    }\n  }\n  /** Event handler for animation events. */\n  _handleTransitionEvent = event => {\n    const element = this._elementRef.nativeElement;\n    if (event.target === element) {\n      this._ngZone.run(() => {\n        if (event.type === 'transitionrun') {\n          this._animationStarted.next(event);\n        } else {\n          // Don't toggle the animating state on `transitioncancel` since another animation should\n          // start afterwards. This prevents the drawer from blinking if an animation is interrupted.\n          if (event.type === 'transitionend') {\n            this._setIsAnimating(false);\n          }\n          this._animationEnd.next(event);\n        }\n      });\n    }\n  };\n  static ɵfac = function MatDrawer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawer,\n    selectors: [[\"mat-drawer\"]],\n    viewQuery: function MatDrawer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      }\n    },\n    hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n    hostVars: 11,\n    hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"align\", null);\n        i0.ɵɵstyleProp(\"visibility\", !ctx._container && !ctx.opened ? \"hidden\" : null);\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n      }\n    },\n    inputs: {\n      position: \"position\",\n      mode: \"mode\",\n      disableClose: \"disableClose\",\n      autoFocus: \"autoFocus\",\n      opened: \"opened\"\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      _openedStream: \"opened\",\n      openedStart: \"openedStart\",\n      _closedStream: \"closed\",\n      closedStart: \"closedStart\",\n      onPositionChanged: \"positionChanged\"\n    },\n    exportAs: [\"matDrawer\"],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatDrawer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        // The styles that render the sidenav off-screen come from the drawer container. Prior to #30235\n        // this was also done by the animations module which some internal tests seem to depend on.\n        // Simulate it by toggling the `hidden` attribute instead.\n        '[style.visibility]': '(!_container && !opened) ? \"hidden\" : null',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], () => [], {\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    _content: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _element = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _transitionsEnabled = false;\n  /** All drawers in the container. Includes drawers from inside nested containers. */\n  _allDrawers;\n  /** Drawers that belong to this container. */\n  _drawers = new QueryList();\n  _content;\n  _userContent;\n  /** The drawer child with the `start` position. */\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  _autosize = inject(MAT_DRAWER_DEFAULT_AUTOSIZE);\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  get hasBackdrop() {\n    return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n  }\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  _backdropOverride;\n  /** Event emitted when the drawer backdrop is clicked. */\n  backdropClick = new EventEmitter();\n  /** The drawer at the start/end position, independent of direction. */\n  _start;\n  _end;\n  /**\n   * The drawer at the left/right. When direction changes, these will change as well.\n   * They're used as aliases for the above to set the left/right style properly.\n   * In LTR, _left == _start and _right == _end.\n   * In RTL, _left == _end and _right == _start.\n   */\n  _left;\n  _right;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Emits on every ngDoCheck. Used for debouncing reflows. */\n  _doCheckSubject = new Subject();\n  /**\n   * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n   * drawer is open. We use margin rather than transform even for push mode because transform breaks\n   * fixed position elements inside of the transformed element.\n   */\n  _contentMargins = {\n    left: null,\n    right: null\n  };\n  _contentMarginChanges = new Subject();\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  _injector = inject(Injector);\n  constructor() {\n    const platform = inject(Platform);\n    const viewportRuler = inject(ViewportRuler);\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._validateDrawers();\n      this.updateContentMargins();\n    });\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    if (this._animationMode !== 'NoopAnimations' && platform.isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        // Enable the animations after a delay in order to skip\n        // the initial transition if a drawer is open by default.\n        setTimeout(() => {\n          this._element.nativeElement.classList.add('mat-drawer-transition');\n          this._transitionsEnabled = true;\n        }, 200);\n      });\n    }\n  }\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n      this._drawers.notifyOnChanges();\n    });\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10),\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  _watchDrawerPosition(drawer) {\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      afterNextRender({\n        read: () => this._validateDrawers()\n      }, {\n        injector: this._injector\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  _watchDrawerMode(drawer) {\n    drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n  }\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n  // Whether argument drawer should have a backdrop when it opens\n  _drawerHasBackdrop(drawer) {\n    if (this._backdropOverride == null) {\n      return !!drawer && drawer.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  static ɵfac = function MatDrawerContainer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDrawerContainer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContainer,\n    selectors: [[\"mat-drawer-container\"]],\n    contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatDrawerContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\"],\n    hostVars: 2,\n    hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    inputs: {\n      autosize: \"autosize\",\n      hasBackdrop: \"hasBackdrop\"\n    },\n    outputs: {\n      backdropClick: \"backdropClick\"\n    },\n    exportAs: [\"matDrawerContainer\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatDrawerContainer\n    }])],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatDrawerContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵtemplate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵtemplate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(!ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatDrawerContent],\n    styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      imports: [MatDrawerContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], () => [], {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    backdropClick: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSidenavContent extends MatDrawerContent {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContent_BaseFactory;\n    return function MatSidenavContent_Factory(__ngFactoryType__) {\n      return (ɵMatSidenavContent_BaseFactory || (ɵMatSidenavContent_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContent)))(__ngFactoryType__ || MatSidenavContent);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContent,\n    selectors: [[\"mat-sidenav-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatSidenavContent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatSidenavContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }]\n    }]\n  }], null, null);\n})();\nclass MatSidenav extends MatDrawer {\n  /** Whether the sidenav is fixed in the viewport. */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  _fixedInViewport = false;\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  _fixedTopGap = 0;\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n  _fixedBottomGap = 0;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenav_BaseFactory;\n    return function MatSidenav_Factory(__ngFactoryType__) {\n      return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(__ngFactoryType__ || MatSidenav);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenav,\n    selectors: [[\"mat-sidenav\"]],\n    hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n    hostVars: 15,\n    hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"align\", null);\n        i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n      }\n    },\n    inputs: {\n      fixedInViewport: \"fixedInViewport\",\n      fixedTopGap: \"fixedTopGap\",\n      fixedBottomGap: \"fixedBottomGap\"\n    },\n    exportAs: [\"matSidenav\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatDrawer,\n      useExisting: MatSidenav\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatSidenav_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkScrollable],\n      providers: [{\n        provide: MatDrawer,\n        useExisting: MatSidenav\n      }],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {\n  _allDrawers = undefined;\n  // We need an initializer here to avoid a TS error.\n  _content = undefined;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContainer_BaseFactory;\n    return function MatSidenavContainer_Factory(__ngFactoryType__) {\n      return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(__ngFactoryType__ || MatSidenavContainer);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContainer,\n    selectors: [[\"mat-sidenav-container\"]],\n    contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n    hostVars: 2,\n    hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    exportAs: [\"matSidenavContainer\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatSidenavContainer\n    }, {\n      provide: MatDrawerContainer,\n      useExisting: MatSidenavContainer\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatSidenavContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵtemplate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵtemplate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(!ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatSidenavContent],\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }, {\n        provide: MatDrawerContainer,\n        useExisting: MatSidenavContainer\n      }],\n      imports: [MatSidenavContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\\n\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\nclass MatSidenavModule {\n  static ɵfac = function MatSidenavModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSidenavModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSidenavModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkScrollableModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDrawerAnimations = {\n  // Represents\n  // trigger('transform', [\n  //   // We remove the `transform` here completely, rather than setting it to zero, because:\n  //   // 1. Having a transform can cause elements with ripples or an animated\n  //   //    transform to shift around in Chrome with an RTL layout (see #10023).\n  //   // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  //   state(\n  //     'open, open-instant',\n  //     style({\n  //       'transform': 'none',\n  //       'visibility': 'visible',\n  //     }),\n  //   ),\n  //   state(\n  //     'void',\n  //     style({\n  //       // Avoids the shadow showing up when closed in SSR.\n  //       'box-shadow': 'none',\n  //       'visibility': 'hidden',\n  //     }),\n  //   ),\n  //   transition('void => open-instant', animate('0ms')),\n  //   transition(\n  //     'void <=> open, open-instant => void',\n  //     animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n  //   ),\n  // ])\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: {\n    type: 7,\n    name: 'transform',\n    definitions: [{\n      type: 0,\n      name: 'open, open-instant',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          'box-shadow': 'none',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => open-instant',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '0ms'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void <=> open, open-instant => void',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)'\n      },\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, inject, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, NgModule } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarRow {\n  static ɵfac = function MatToolbarRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbarRow)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatToolbarRow,\n    selectors: [[\"mat-toolbar-row\"]],\n    hostAttrs: [1, \"mat-toolbar-row\"],\n    exportAs: [\"matToolbarRow\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      }\n    }]\n  }], null, null);\n})();\nclass MatToolbar {\n  _elementRef = inject(ElementRef);\n  _platform = inject(Platform);\n  _document = inject(DOCUMENT);\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the toolbar. This API is supported in M2 themes only, it has\n   * no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/toolbar/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Reference to all toolbar row elements that have been projected. */\n  _toolbarRows;\n  constructor() {}\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._checkToolbarMixedModes();\n      this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n  }\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  _checkToolbarMixedModes() {\n    if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      // Check if there are any other DOM nodes that can display content but aren't inside of\n      // a <mat-toolbar-row> element.\n      const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }\n  static ɵfac = function MatToolbar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbar)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatToolbar,\n    selectors: [[\"mat-toolbar\"]],\n    contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-toolbar\"],\n    hostVars: 6,\n    hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n        i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n      }\n    },\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matToolbar\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatToolbar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      host: {\n        'class': 'mat-toolbar',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nclass MatToolbarModule {\n  static ɵfac = function MatToolbarModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbarModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatToolbarModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { \r\n  faBars, \r\n  faUser, \r\n  faEdit, \r\n  faSearch, \r\n  faHandshake, \r\n  faRobot, \r\n  faFileAlt, \r\n  faCalendarAlt, \r\n  faFileContract, \r\n  faComments,\r\n  faRoute,\r\n  faBriefcase,\r\n  faGraduationCap,\r\n  faSignOutAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-job-seeker-dashboard',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"dashboard-container\">\r\n      <!-- Header -->\r\n      <mat-toolbar color=\"primary\" class=\"dashboard-header\">\r\n        <button mat-icon-button (click)=\"toggleSidenav()\">\r\n          <fa-icon [icon]=\"faBars\"></fa-icon>\r\n        </button>\r\n        <span class=\"brand-name\">EmployBridge</span>\r\n        <span class=\"spacer\"></span>\r\n        <div class=\"user-info\">\r\n          <span class=\"user-name\">{{userName}}</span>\r\n          <span class=\"user-role\">Job Seeker</span>\r\n        </div>\r\n        <button mat-icon-button class=\"logout-button\" (click)=\"logout()\" matTooltip=\"Logout\" title=\"Logout\">\r\n          <fa-icon [icon]=\"faSignOutAlt\"></fa-icon>\r\n        </button>\r\n      </mat-toolbar>\r\n\r\n      <!-- Side Navigation -->\r\n      <mat-sidenav-container class=\"sidenav-container\">\r\n        <mat-sidenav #sidenav mode=\"side\" opened class=\"sidenav\">\r\n          <mat-nav-list>\r\n            <!-- Profile Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Profile</h3>\r\n              <a mat-list-item routerLink=\"profile\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faUser\" class=\"nav-icon\"></fa-icon>\r\n                <span>My Profile</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"profile-update\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faEdit\" class=\"nav-icon\"></fa-icon>\r\n                <span>Update Profile</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"experience\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faBriefcase\" class=\"nav-icon\"></fa-icon>\r\n                <span>Experience</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"education\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faGraduationCap\" class=\"nav-icon\"></fa-icon>\r\n                <span>Education</span>\r\n              </a>\r\n            </div>\r\n\r\n            <!-- Job Search Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Job Search</h3>\r\n              <a mat-list-item routerLink=\"job-search\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faSearch\" class=\"nav-icon\"></fa-icon>\r\n                <span>Search Jobs</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"job-matching\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faHandshake\" class=\"nav-icon\"></fa-icon>\r\n                <span>Job Matching</span>\r\n              </a>\r\n            </div>\r\n\r\n            <!-- Applications Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Applications</h3>\r\n              <a mat-list-item routerLink=\"applications\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faFileAlt\" class=\"nav-icon\"></fa-icon>\r\n                <span>My Applications</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"interviews\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faCalendarAlt\" class=\"nav-icon\"></fa-icon>\r\n                <span>Interviews</span>\r\n              </a>\r\n            </div>\r\n\r\n            <!-- Tools Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Tools</h3>\r\n              <a mat-list-item routerLink=\"career-path\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faRoute\" class=\"nav-icon\"></fa-icon>\r\n                <span>Career Path Generator</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"cv-generator\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faFileContract\" class=\"nav-icon\"></fa-icon>\r\n                <span>CV Generator</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"chatbot\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faComments\" class=\"nav-icon\"></fa-icon>\r\n                <span>AI Assistant</span>\r\n              </a>\r\n            </div>\r\n          </mat-nav-list>\r\n        </mat-sidenav>\r\n\r\n        <!-- Main Content -->\r\n        <mat-sidenav-content class=\"main-content\">\r\n          <router-outlet></router-outlet>\r\n        </mat-sidenav-content>\r\n      </mat-sidenav-container>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .dashboard-container {\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    }\r\n\r\n    .dashboard-header {\r\n      background: linear-gradient(135deg, #3498db, #2980b9);\r\n      color: white;\r\n      padding: 0 16px;\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    }\r\n\r\n    .brand-name {\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      margin-left: 16px;\r\n      letter-spacing: -0.5px;\r\n    }\r\n\r\n    .spacer {\r\n      flex: 1 1 auto;\r\n    }\r\n\r\n    .user-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      margin-right: 16px;\r\n    }\r\n\r\n    .user-name {\r\n      font-weight: 500;\r\n      letter-spacing: -0.2px;\r\n    }\r\n\r\n    .user-role {\r\n      font-size: 0.9rem;\r\n      opacity: 0.8;\r\n      font-weight: 400;\r\n    }\r\n\r\n    .logout-button {\r\n      color: white;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    .logout-button:hover {\r\n      background-color: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .sidenav-container {\r\n      flex: 1;\r\n      background: #f5f6fa;\r\n    }\r\n\r\n    .sidenav {\r\n      width: 280px;\r\n      background: white;\r\n      border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n    }\r\n\r\n    .nav-section {\r\n      padding: 16px 0;\r\n    }\r\n\r\n    .nav-section-title {\r\n      padding: 0 16px;\r\n      margin: 0;\r\n      font-size: 0.9rem;\r\n      font-weight: 600;\r\n      color: #666;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.5px;\r\n    }\r\n\r\n    .mat-nav-list {\r\n      padding-top: 8px;\r\n    }\r\n\r\n    .mat-list-item {\r\n      height: 48px;\r\n      margin: 4px 8px;\r\n      border-radius: 8px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .mat-list-item.active {\r\n      background: rgba(52, 152, 219, 0.1);\r\n      color: #3498db;\r\n    }\r\n\r\n    .nav-icon {\r\n      margin-right: 16px;\r\n      color: #666;\r\n      width: 20px;\r\n      text-align: center;\r\n    }\r\n\r\n    .mat-list-item.active .nav-icon {\r\n      color: #3498db;\r\n    }\r\n\r\n    .main-content {\r\n      padding: 24px;\r\n      background: #f5f6fa;\r\n    }\r\n  `]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faBars = faBars;\r\n  faUser = faUser;\r\n  faEdit = faEdit;\r\n  faSearch = faSearch;\r\n  faHandshake = faHandshake;\r\n  faRobot = faRobot;\r\n  faFileAlt = faFileAlt;\r\n  faCalendarAlt = faCalendarAlt;\r\n  faFileContract = faFileContract;\r\n  faComments = faComments;\r\n  faRoute = faRoute;\r\n  faBriefcase = faBriefcase;\r\n  faGraduationCap = faGraduationCap;\r\n  faSignOutAlt = faSignOutAlt;\r\n\r\n  userName: string = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    const currentUser = this.authService.getCurrentUser();\r\n    if (currentUser) {\r\n      this.userName = currentUser.name;\r\n    }\r\n  }\r\n\r\n  toggleSidenav(): void {\r\n    // Implement sidenav toggle logic\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout().subscribe({\r\n      next: () => {\r\n        // The AuthService will handle navigation to login page\r\n      },\r\n      error: (error) => {\r\n        console.error('Error during logout:', error);\r\n        // Even if there's an error, we should still clear the session\r\n        this.authService.handleUnauthorized();\r\n      }\r\n    });\r\n  }\r\n} ","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, ChangeDetectorRef, Renderer2, ANIMATION_MODULE_TYPE, EventEmitter, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-progress-bar`. */\nfunction MatProgressBar_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS = new InjectionToken('MAT_PROGRESS_BAR_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? _location.pathname + _location.search : ''\n  };\n}\nclass MatProgressBar {\n  _elementRef = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _renderer = inject(Renderer2);\n  _cleanupTransitionEnd;\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  constructor() {\n    const defaults = inject(MAT_PROGRESS_BAR_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._isNoopAnimation = this._animationMode === 'NoopAnimations';\n    if (defaults) {\n      if (defaults.color) {\n        this.color = this._defaultColor = defaults.color;\n      }\n      this.mode = defaults.mode || this.mode;\n    }\n  }\n  /** Flag that indicates whether NoopAnimations mode is set to true. */\n  _isNoopAnimation = false;\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the progress bar. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/progress-bar/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  get color() {\n    return this._color || this._defaultColor;\n  }\n  set color(value) {\n    this._color = value;\n  }\n  _color;\n  _defaultColor = 'primary';\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  get value() {\n    return this._value;\n  }\n  set value(v) {\n    this._value = clamp(v || 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  _value = 0;\n  /** Buffer value of the progress bar. Defaults to zero. */\n  get bufferValue() {\n    return this._bufferValue || 0;\n  }\n  set bufferValue(v) {\n    this._bufferValue = clamp(v || 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  _bufferValue = 0;\n  /**\n   * Event emitted when animation of the primary progress bar completes. This event will not\n   * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n   * animations (indeterminate and query).\n   */\n  animationEnd = new EventEmitter();\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    // Note that we don't technically need a getter and a setter here,\n    // but we use it to match the behavior of the existing mat-progress-bar.\n    this._mode = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  _mode = 'determinate';\n  ngAfterViewInit() {\n    // Run outside angular so change detection didn't get triggered on every transition end\n    // instead only on the animation that we care about (primary value bar's transitionend)\n    this._ngZone.runOutsideAngular(() => {\n      this._cleanupTransitionEnd = this._renderer.listen(this._elementRef.nativeElement, 'transitionend', this._transitionendHandler);\n    });\n  }\n  ngOnDestroy() {\n    this._cleanupTransitionEnd?.();\n  }\n  /** Gets the transform style that should be applied to the primary bar. */\n  _getPrimaryBarTransform() {\n    return `scaleX(${this._isIndeterminate() ? 1 : this.value / 100})`;\n  }\n  /** Gets the `flex-basis` value that should be applied to the buffer bar. */\n  _getBufferBarFlexBasis() {\n    return `${this.mode === 'buffer' ? this.bufferValue : 100}%`;\n  }\n  /** Returns whether the progress bar is indeterminate. */\n  _isIndeterminate() {\n    return this.mode === 'indeterminate' || this.mode === 'query';\n  }\n  /** Event handler for `transitionend` events. */\n  _transitionendHandler = event => {\n    if (this.animationEnd.observers.length === 0 || !event.target || !event.target.classList.contains('mdc-linear-progress__primary-bar')) {\n      return;\n    }\n    if (this.mode === 'determinate' || this.mode === 'buffer') {\n      this._ngZone.run(() => this.animationEnd.next({\n        value: this.value\n      }));\n    }\n  };\n  static ɵfac = function MatProgressBar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatProgressBar)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatProgressBar,\n    selectors: [[\"mat-progress-bar\"]],\n    hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-mdc-progress-bar\", \"mdc-linear-progress\"],\n    hostVars: 10,\n    hostBindings: function MatProgressBar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuenow\", ctx._isIndeterminate() ? null : ctx.value)(\"mode\", ctx.mode);\n        i0.ɵɵclassMap(\"mat-\" + ctx.color);\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation)(\"mdc-linear-progress--animation-ready\", !ctx._isNoopAnimation)(\"mdc-linear-progress--indeterminate\", ctx._isIndeterminate());\n      }\n    },\n    inputs: {\n      color: \"color\",\n      value: [2, \"value\", \"value\", numberAttribute],\n      bufferValue: [2, \"bufferValue\", \"bufferValue\", numberAttribute],\n      mode: \"mode\"\n    },\n    outputs: {\n      animationEnd: \"animationEnd\"\n    },\n    exportAs: [\"matProgressBar\"],\n    decls: 7,\n    vars: 5,\n    consts: [[\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__buffer\"], [1, \"mdc-linear-progress__buffer-bar\"], [1, \"mdc-linear-progress__buffer-dots\"], [\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__bar\", \"mdc-linear-progress__primary-bar\"], [1, \"mdc-linear-progress__bar-inner\"], [\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__bar\", \"mdc-linear-progress__secondary-bar\"]],\n    template: function MatProgressBar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MatProgressBar_Conditional_2_Template, 1, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelement(6, \"span\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"flex-basis\", ctx._getBufferBarFlexBasis());\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.mode === \"buffer\" ? 2 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"transform\", ctx._getPrimaryBarTransform());\n      }\n    },\n    styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height, 4px),var(--mdc-linear-progress-active-indicator-height, 4px))}@media(forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height, 4px)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height, 4px)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height, 4px);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-sys-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-sys-surface-variant))}@media(forced-colors: active){.mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-sys-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height, 4px) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressBar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-progress-bar',\n      exportAs: 'matProgressBar',\n      host: {\n        'role': 'progressbar',\n        'aria-valuemin': '0',\n        'aria-valuemax': '100',\n        // set tab index to -1 so screen readers will read the aria-label\n        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n        'tabindex': '-1',\n        '[attr.aria-valuenow]': '_isIndeterminate() ? null : value',\n        '[attr.mode]': 'mode',\n        'class': 'mat-mdc-progress-bar mdc-linear-progress',\n        '[class]': '\"mat-\" + color',\n        '[class._mat-animation-noopable]': '_isNoopAnimation',\n        '[class.mdc-linear-progress--animation-ready]': '!_isNoopAnimation',\n        '[class.mdc-linear-progress--indeterminate]': '_isIndeterminate()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-linear-progress__buffer\\\" aria-hidden=\\\"true\\\">\\n  <div\\n    class=\\\"mdc-linear-progress__buffer-bar\\\"\\n    [style.flex-basis]=\\\"_getBufferBarFlexBasis()\\\"></div>\\n  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->\\n  @if (mode === 'buffer') {\\n    <div class=\\\"mdc-linear-progress__buffer-dots\\\"></div>\\n  }\\n</div>\\n<div\\n  class=\\\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\\\"\\n  aria-hidden=\\\"true\\\"\\n  [style.transform]=\\\"_getPrimaryBarTransform()\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n<div class=\\\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\\\" aria-hidden=\\\"true\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n\",\n      styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height, 4px),var(--mdc-linear-progress-active-indicator-height, 4px))}@media(forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height, 4px)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height, 4px)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height, 4px);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-sys-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-sys-surface-variant))}@media(forced-colors: active){.mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-sys-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height, 4px) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\\n\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    bufferValue: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    animationEnd: [{\n      type: Output\n    }],\n    mode: [{\n      type: Input\n    }]\n  });\n})();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\nclass MatProgressBarModule {\n  static ɵfac = function MatProgressBarModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatProgressBarModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatProgressBarModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressBarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatProgressBar],\n      exports: [MatProgressBar, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_PROGRESS_BAR_DEFAULT_OPTIONS, MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './auth.service';\r\n\r\nexport interface UpdateProfileData {\r\n  name?: string;\r\n  email?: string;\r\n  position?: string;\r\n}\r\n\r\nexport interface UpdatePasswordData {\r\n  currentPassword: string;\r\n  newPassword: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private apiUrl = 'http://localhost:3000/api/users';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get user profile\r\n  getProfile(): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/profile`);\r\n  }\r\n\r\n  // Update user profile\r\n  updateProfile(data: UpdateProfileData): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/profile`, data);\r\n  }\r\n\r\n  // Update user password\r\n  updatePassword(data: UpdatePasswordData): Observable<{ message: string }> {\r\n    return this.http.put<{ message: string }>(`${this.apiUrl}/profile/password`, data);\r\n  }\r\n\r\n  // Delete user account\r\n  deleteAccount(): Observable<{ message: string }> {\r\n    return this.http.delete<{ message: string }>(`${this.apiUrl}/profile`);\r\n  }\r\n\r\n  // Admin: Get all users\r\n  getAllUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.apiUrl);\r\n  }\r\n\r\n  // Admin: Get user by ID\r\n  getUserById(id: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Admin: Update user role\r\n  updateUserRole(userId: string, role: 'user' | 'employer' | 'admin'): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/profile/role`, { userId, role });\r\n  }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Skill {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  description?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillService {\r\n  private apiUrl = 'http://localhost:3000/api/skills'; // Adjust port if different\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Get all skills\r\n  getAllSkills(): Observable<Skill[]> {\r\n    return this.http.get<Skill[]>(this.apiUrl);\r\n  }\r\n\r\n  // Get skill by ID\r\n  getSkillById(id: string): Observable<Skill> {\r\n    return this.http.get<Skill>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Create new skill\r\n  createSkill(skill: Partial<Skill>): Observable<Skill> {\r\n    return this.http.post<Skill>(this.apiUrl, skill);\r\n  }\r\n\r\n  // Update skill\r\n  updateSkill(id: string, skill: Partial<Skill>): Observable<Skill> {\r\n    return this.http.put<Skill>(`${this.apiUrl}/${id}`, skill);\r\n  }\r\n\r\n  // Delete skill\r\n  deleteSkill(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Get user skills\r\n  getUserSkills(userId: string): Observable<Skill[]> {\r\n    return this.http.get<Skill[]>(`${this.apiUrl}/user/${userId}`);\r\n  }\r\n\r\n  // Add skill to user\r\n  addUserSkill(userId: string, skillId: string): Observable<Skill[]> {\r\n    return this.http.post<Skill[]>(`${this.apiUrl}/user/${userId}`, { skillId });\r\n  }\r\n\r\n  // Remove skill from user\r\n  removeUserSkill(userId: string, skillId: string): Observable<Skill[]> {\r\n    return this.http.delete<Skill[]>(`${this.apiUrl}/user/${userId}/${skillId}`);\r\n  }\r\n\r\n  // Generate skills based on job title and description\r\n  generateSkills(jobTitle: string, jobDescription?: string): Observable<{\r\n    message: string;\r\n    skills: Skill[];\r\n    isNew: boolean;\r\n  }> {\r\n    return this.http.post<{\r\n      message: string;\r\n      skills: Skill[];\r\n      isNew: boolean;\r\n    }>(`${this.apiUrl}/generate`, { jobTitle, jobDescription });\r\n  }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { Observable, map, catchError, of } from 'rxjs';\r\n\r\nexport interface CV {\r\n  id: string;\r\n  fileName: string;\r\n  filePath: string;\r\n  extractedSkills: string[];\r\n  userId: string;\r\n  content?: string;\r\n  downloadUrl?: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface CVUploadResponse {\r\n  id: string;\r\n  fileName: string;\r\n  filePath: string;\r\n  extractedSkills: string[];\r\n  userId: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface SkillExtractionResponse {\r\n  skills: string[];\r\n}\r\n\r\nexport interface AICVGenerationResponse {\r\n  message: string;\r\n  cv: {\r\n    id: string;\r\n    fileName: string;\r\n    downloadUrl: string;\r\n    content: string;\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CVService {\r\n  private apiUrl = 'http://localhost:3000/api/cvs';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Upload CV file\r\n  uploadCV(file: File): Observable<HttpEvent<CVUploadResponse>> {\r\n    const formData = new FormData();\r\n    formData.append('cv', file);\r\n\r\n    return this.http.post<CVUploadResponse>(`${this.apiUrl}/upload`, formData, {\r\n      reportProgress: true,\r\n      observe: 'events'\r\n    });\r\n  }\r\n\r\n  // Get CV by user ID\r\n  getCV(userId: string): Observable<CV | null> {\r\n    return this.http.get<CV>(`${this.apiUrl}/${userId}`).pipe(\r\n      catchError(error => {\r\n        if (error.status === 404) {\r\n          // Return null when CV is not found\r\n          return of(null);\r\n        }\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Delete CV\r\n  deleteCV(): Observable<{ message: string }> {\r\n    return this.http.delete<{ message: string }>(this.apiUrl);\r\n  }\r\n\r\n  // Extract skills from CV file\r\n  extractSkillsFromCV(file: File): Observable<SkillExtractionResponse> {\r\n    const formData = new FormData();\r\n    formData.append('cv', file);\r\n\r\n    return this.http.post<SkillExtractionResponse>(`${this.apiUrl}/extract-skills`, formData);\r\n  }\r\n\r\n  // Generate CV using AI\r\n  generateAICV(): Observable<AICVGenerationResponse> {\r\n    return this.http.post<AICVGenerationResponse>(`${this.apiUrl}/generate`, {});\r\n  }\r\n\r\n  // Download CV file\r\n  downloadCV(id: string): Observable<Blob> {\r\n    return this.http.get(`${this.apiUrl}/download/${id}`, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n  // Helper method to calculate upload progress\r\n  getUploadProgress(event: HttpEvent<any>): number {\r\n    if (event.type === HttpEventType.UploadProgress) {\r\n      const progress = Math.round(100 * event.loaded / (event.total || event.loaded));\r\n      return progress;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // Helper method to save downloaded file\r\n  saveFile(blob: Blob, fileName: string): void {\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = fileName;\r\n    link.click();\r\n    window.URL.revokeObjectURL(link.href);\r\n  }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface CareerPath {\r\n  id: string;\r\n  targetRole: string;\r\n  currentRole: string;\r\n  yearsOfExperience: number;\r\n  timeline: {\r\n    phase: string;\r\n    duration: string;\r\n    activities: string[];\r\n    milestones: string[];\r\n  }[];\r\n  education: {\r\n    level: string;\r\n    field: string;\r\n    duration: string;\r\n    requirements: string[];\r\n  }[];\r\n  requiredSkills: {\r\n    current: Array<{ id: string; name: string }>;\r\n    missing: Array<{ id: string; name: string }>;\r\n    development: {\r\n      skill: { id: string; name: string };\r\n      resources: string[];\r\n      timeline: string;\r\n    }[];\r\n  };\r\n  alternativePaths: {\r\n    role: string;\r\n    description: string;\r\n    requiredSkills: Array<{ id: string; name: string }>;\r\n    matchScore: number;\r\n  }[];\r\n  isCompleted: boolean;\r\n  progress: number;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface GenerateCareerPathData {\r\n  targetRole: string;\r\n  currentRole: string;\r\n  yearsOfExperience: number;\r\n}\r\n\r\nexport interface UpdateProgressData {\r\n  progress: number;\r\n  isCompleted: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CareerPathService {\r\n  private apiUrl = `${environment.apiUrl}/career-paths`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    const token = localStorage.getItem('token');\r\n    return new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n  }\r\n\r\n  generateCareerPath(data: GenerateCareerPathData): Observable<CareerPath> {\r\n    return this.http.post<CareerPath>(this.apiUrl, data, { headers: this.getHeaders() });\r\n  }\r\n\r\n  getUserCareerPaths(): Observable<CareerPath[]> {\r\n    return this.http.get<CareerPath[]>(this.apiUrl, { headers: this.getHeaders() });\r\n  }\r\n\r\n  getCareerPath(id: string): Observable<CareerPath> {\r\n    return this.http.get<CareerPath>(`${this.apiUrl}/${id}`, { headers: this.getHeaders() });\r\n  }\r\n\r\n\r\n  updateProgress(id: string, data: UpdateProgressData): Observable<CareerPath> {\r\n    return this.http.patch<CareerPath>(`${this.apiUrl}/${id}/progress`, data, { headers: this.getHeaders() });\r\n  }\r\n\r\n  deleteCareerPath(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`, { headers: this.getHeaders() });\r\n  }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Experience {\r\n  id: string;\r\n  title: string;\r\n  company: string;\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  current: boolean;\r\n  description: string;\r\n  userId: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface CreateExperienceData {\r\n  title: string;\r\n  company: string;\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  current: boolean;\r\n  description: string;\r\n}\r\n\r\nexport interface UpdateExperienceData {\r\n  title?: string;\r\n  company?: string;\r\n  startDate?: Date;\r\n  endDate?: Date;\r\n  current?: boolean;\r\n  description?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExperienceService {\r\n  private apiUrl = 'http://localhost:3000/api/experiences';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Create new experience\r\n  createExperience(data: CreateExperienceData): Observable<Experience> {\r\n    const formattedData = this.formatDates(data);\r\n    return this.http.post<Experience>(this.apiUrl, formattedData);\r\n  }\r\n\r\n  // Get all experiences for a user\r\n  getExperiences(userId: string): Observable<Experience[]> {\r\n    return this.http.get<Experience[]>(`${this.apiUrl}/${userId}`);\r\n  }\r\n\r\n  // Update experience\r\n  updateExperience(id: string, data: UpdateExperienceData): Observable<Experience> {\r\n    const formattedData = this.formatDates(data);\r\n    return this.http.put<Experience>(`${this.apiUrl}/${id}`, formattedData);\r\n  }\r\n\r\n  // Delete experience\r\n  deleteExperience(id: string): Observable<{ message: string }> {\r\n    return this.http.delete<{ message: string }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Helper method to format dates for API\r\n  private formatDates(data: any): any {\r\n    const formattedData = { ...data };\r\n    \r\n    if (data.startDate) {\r\n      formattedData.startDate = this.formatDate(data.startDate);\r\n    }\r\n    \r\n    if (data.endDate) {\r\n      formattedData.endDate = this.formatDate(data.endDate);\r\n    }\r\n\r\n    return formattedData;\r\n  }\r\n\r\n  private formatDate(date: Date): string {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Education {\r\n  id: string;\r\n  institution: string;\r\n  degree: string;\r\n  fieldOfStudy: string;\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  current: boolean;\r\n  description?: string;\r\n  userId: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface CreateEducationData {\r\n  institution: string;\r\n  degree: string;\r\n  fieldOfStudy: string;\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  current: boolean;\r\n  description?: string;\r\n}\r\n\r\nexport interface UpdateEducationData {\r\n  institution?: string;\r\n  degree?: string;\r\n  fieldOfStudy?: string;\r\n  startDate?: Date;\r\n  endDate?: Date;\r\n  current?: boolean;\r\n  description?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EducationService {\r\n  private apiUrl = 'http://localhost:3000/api/educations';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Create new education\r\n  createEducation(data: CreateEducationData): Observable<Education> {\r\n    const formattedData = this.formatDates(data);\r\n    return this.http.post<Education>(this.apiUrl, formattedData);\r\n  }\r\n\r\n  // Get all educations for a user\r\n  getEducations(userId: string): Observable<Education[]> {\r\n    return this.http.get<Education[]>(`${this.apiUrl}/${userId}`);\r\n  }\r\n\r\n  // Update education\r\n  updateEducation(id: string, data: UpdateEducationData): Observable<Education> {\r\n    const formattedData = this.formatDates(data);\r\n    return this.http.put<Education>(`${this.apiUrl}/${id}`, formattedData);\r\n  }\r\n\r\n  // Delete education\r\n  deleteEducation(id: string): Observable<{ message: string }> {\r\n    return this.http.delete<{ message: string }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Helper method to format dates for API\r\n  private formatDates(data: any): any {\r\n    const formattedData = { ...data };\r\n    \r\n    if (data.startDate) {\r\n      formattedData.startDate = this.formatDate(data.startDate);\r\n    }\r\n    \r\n    if (data.endDate) {\r\n      formattedData.endDate = this.formatDate(data.endDate);\r\n    }\r\n\r\n    return formattedData;\r\n  }\r\n\r\n  private formatDate(date: Date): string {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { \r\n  faUser, \r\n  faBriefcase, \r\n  faFileAlt, \r\n  faDownload, \r\n  faCheck, \r\n  faTimes, \r\n  faClock, \r\n  faRoute,\r\n  faGraduationCap,\r\n  faBuilding\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ProfileService } from '../../../services/profile.service';\r\nimport { SkillService } from '../../../services/skill.service';\r\nimport { ApplicationService } from '../../../services/application.service';\r\nimport { AuthService, User } from '../../../services/auth.service';\r\nimport { CVService } from '../../../services/cv.service';\r\nimport { CareerPathService, CareerPath } from '../../../services/career-path.service';\r\nimport { ExperienceService, Experience } from '../../../services/experience.service';\r\nimport { EducationService, Education } from '../../../services/education.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"profile-container\">\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Loading profile data...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"retryLoading()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- Profile Content -->\r\n      <ng-container *ngIf=\"!isLoading && !error\">\r\n        <!-- Profile Header -->\r\n        <mat-card class=\"profile-header\">\r\n          <div class=\"profile-cover\"></div>\r\n          <div class=\"profile-info\">\r\n            <div class=\"profile-avatar\">\r\n              <fa-icon [icon]=\"faUser\" size=\"3x\"></fa-icon>\r\n            </div>\r\n            <div class=\"profile-details\">\r\n              <h1>{{user?.name || 'Loading...'}}</h1>\r\n              <p class=\"profile-title\">\r\n                <fa-icon [icon]=\"faBriefcase\" class=\"icon\"></fa-icon>\r\n                {{user?.position || 'Job Seeker'}}\r\n              </p>\r\n              <div class=\"profile-stats\">\r\n                <div class=\"stat\">\r\n                  <span class=\"stat-value\">{{profileCompletion}}%</span>\r\n                  <span class=\"stat-label\">Profile Completion</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <!-- Profile Content -->\r\n        <div class=\"profile-content\">\r\n          <!-- Experience Section -->\r\n          <mat-card class=\"profile-section\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faBuilding\" class=\"icon\"></fa-icon>\r\n                Work Experience\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div class=\"experience-list\">\r\n                <div class=\"experience-item\" *ngFor=\"let exp of experiences\">\r\n                  <div class=\"experience-header\">\r\n                    <h3>{{exp.title}}</h3>\r\n                    <span class=\"company\">{{exp.company}}</span>\r\n                  </div>\r\n                  <div class=\"experience-dates\">\r\n                    <span>{{exp.startDate | date:'MMM yyyy'}} - {{exp.current ? 'Present' : (exp.endDate | date:'MMM yyyy')}}</span>\r\n                  </div>\r\n                  <p class=\"experience-description\">{{exp.description}}</p>\r\n                </div>\r\n                <div *ngIf=\"experiences.length === 0\" class=\"no-data\">\r\n                  No work experience added yet\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <!-- Education Section -->\r\n          <mat-card class=\"profile-section\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faGraduationCap\" class=\"icon\"></fa-icon>\r\n                Education\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div class=\"education-list\">\r\n                <div class=\"education-item\" *ngFor=\"let edu of educations\">\r\n                  <div class=\"education-header\">\r\n                    <h3>{{edu.degree}}</h3>\r\n                    <span class=\"institution\">{{edu.institution}}</span>\r\n                  </div>\r\n                  <div class=\"education-details\">\r\n                    <span class=\"field-of-study\">{{edu.fieldOfStudy}}</span>\r\n                    <span class=\"education-dates\">\r\n                      {{edu.startDate | date:'MMM yyyy'}} - {{edu.current ? 'Present' : (edu.endDate | date:'MMM yyyy')}}\r\n                    </span>\r\n                  </div>\r\n                  <p class=\"education-description\" *ngIf=\"edu.description\">{{edu.description}}</p>\r\n                </div>\r\n                <div *ngIf=\"educations.length === 0\" class=\"no-data\">\r\n                  No education history added yet\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <!-- Career Path Section -->\r\n          <mat-card class=\"profile-section\" *ngIf=\"careerPath\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faRoute\" class=\"icon\"></fa-icon>\r\n                Career Path\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div class=\"career-path-info\">\r\n                <div class=\"career-path-header\">\r\n                  <div class=\"path-progress\">\r\n                    <div class=\"progress-bar\">\r\n                      <div class=\"progress\" [style.width.%]=\"careerPath.progress\"></div>\r\n                    </div>\r\n                    <span class=\"progress-text\">{{careerPath.progress}}% Complete</span>\r\n                  </div>\r\n                  <div class=\"path-details\">\r\n                    <p><strong>Current Role:</strong> {{careerPath.currentRole}}</p>\r\n                    <p><strong>Target Role:</strong> {{careerPath.targetRole}}</p>\r\n                    <p><strong>Experience:</strong> {{careerPath.yearsOfExperience}} years</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"timeline-section\" *ngIf=\"careerPath.timeline.length > 0\">\r\n                  <h3>Timeline</h3>\r\n                  <div class=\"timeline\">\r\n                    <div class=\"timeline-item\" *ngFor=\"let phase of careerPath.timeline\">\r\n                      <div class=\"phase-header\">\r\n                        <h4>{{phase.phase}}</h4>\r\n                        <span class=\"duration\">{{phase.duration}}</span>\r\n                      </div>\r\n                      <div class=\"phase-content\">\r\n                        <div class=\"activities\" *ngIf=\"phase.activities.length > 0\">\r\n                          <h5>Activities:</h5>\r\n                          <ul>\r\n                            <li *ngFor=\"let activity of phase.activities\">{{activity}}</li>\r\n                          </ul>\r\n                        </div>\r\n                        <div class=\"milestones\" *ngIf=\"phase.milestones.length > 0\">\r\n                          <h5>Milestones:</h5>\r\n                          <ul>\r\n                            <li *ngFor=\"let milestone of phase.milestones\">{{milestone}}</li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"skills-section\" *ngIf=\"careerPath.requiredSkills\">\r\n                  <h3>Required Skills</h3>\r\n                  <div class=\"skills-grid\">\r\n                    <div class=\"skill-category\">\r\n                      <h4>Current Skills</h4>\r\n                      <div class=\"skill-tags\">\r\n                        <span class=\"skill-tag\" *ngFor=\"let skill of careerPath.requiredSkills.current\">\r\n                          {{skill.name}}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"skill-category\">\r\n                      <h4>Skills to Develop</h4>\r\n                      <div class=\"skill-tags\">\r\n                        <span class=\"skill-tag missing\" *ngFor=\"let skill of careerPath.requiredSkills.missing\">\r\n                          {{skill.name}}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <!-- Skills Section -->\r\n          <mat-card class=\"profile-section\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faBriefcase\" class=\"icon\"></fa-icon>\r\n                Skills\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div class=\"skills-container\">\r\n                <div class=\"skill-tag\" *ngFor=\"let skill of skills\">\r\n                  {{skill.name}}\r\n                </div>\r\n                <div *ngIf=\"skills.length === 0\" class=\"no-data\">\r\n                  No skills added yet\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <!-- CV Section -->\r\n          <mat-card class=\"profile-section\" *ngIf=\"cv\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faFileAlt\" class=\"icon\"></fa-icon>\r\n                CV\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div class=\"cv-info\">\r\n                <p>File: {{cv.fileName}}</p>\r\n                <p>Last Updated: {{cv.updatedAt | date}}</p>\r\n                <button mat-button color=\"primary\" (click)=\"downloadCV()\">\r\n                  <fa-icon [icon]=\"faDownload\" class=\"icon\"></fa-icon>\r\n                  Download CV\r\n                </button>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n\r\n          <!-- Applications Section -->\r\n          <mat-card class=\"profile-section\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faBriefcase\" class=\"icon\"></fa-icon>\r\n                Recent Applications\r\n              </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div class=\"application-item\" *ngFor=\"let app of applications\">\r\n                <div class=\"application-info\">\r\n                  <h3>{{app.job.title}}</h3>\r\n                  <p class=\"company\">{{app.job.employer.company}}</p>\r\n                  <p class=\"status\" [class]=\"app.status.toLowerCase()\">\r\n                    <fa-icon [icon]=\"getStatusIcon(app.status)\" class=\"icon\"></fa-icon>\r\n                    {{app.status}}\r\n                  </p>\r\n                </div>\r\n                <div class=\"application-date\">\r\n                  <fa-icon [icon]=\"faClock\" class=\"icon\"></fa-icon>\r\n                  {{app.appliedAt | date}}\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"applications.length === 0\" class=\"no-data\">\r\n                No applications yet\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .profile-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .no-data {\r\n      color: #666;\r\n      text-align: center;\r\n      padding: 16px;\r\n      font-style: italic;\r\n    }\r\n\r\n    .profile-header {\r\n      position: relative;\r\n      margin-bottom: 24px;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .profile-cover {\r\n      height: 200px;\r\n      background: linear-gradient(135deg, #3498db, #2980b9);\r\n    }\r\n\r\n    .profile-info {\r\n      padding: 24px;\r\n      display: flex;\r\n      align-items: flex-end;\r\n      margin-top: -60px;\r\n    }\r\n\r\n    .profile-avatar {\r\n      width: 120px;\r\n      height: 120px;\r\n      border-radius: 50%;\r\n      border: 4px solid white;\r\n      overflow: hidden;\r\n      margin-right: 24px;\r\n      background: #f5f5f5;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: #666;\r\n    }\r\n\r\n    .profile-details {\r\n      flex: 1;\r\n    }\r\n\r\n    .profile-details h1 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .profile-title {\r\n      color: #666;\r\n      margin: 8px 0;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .profile-stats {\r\n      display: flex;\r\n      gap: 24px;\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .stat {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    .stat-value {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n      color: #3498db;\r\n    }\r\n\r\n    .stat-label {\r\n      font-size: 0.9rem;\r\n      color: #666;\r\n    }\r\n\r\n    .profile-content {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n      gap: 24px;\r\n    }\r\n\r\n    .profile-section {\r\n      height: 100%;\r\n    }\r\n\r\n    .experience-list, .education-list {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 24px;\r\n    }\r\n\r\n    .experience-item, .education-item {\r\n      padding: 16px;\r\n      border-left: 3px solid #3498db;\r\n      background: #f8f9fa;\r\n      border-radius: 0 8px 8px 0;\r\n    }\r\n\r\n    .experience-header, .education-header {\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .experience-header h3, .education-header h3 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .company, .institution {\r\n      color: #666;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .experience-dates, .education-dates {\r\n      color: #666;\r\n      font-size: 0.9rem;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .field-of-study {\r\n      display: block;\r\n      color: #666;\r\n      font-size: 0.9rem;\r\n      margin-bottom: 4px;\r\n    }\r\n\r\n    .experience-description, .education-description {\r\n      color: #666;\r\n      margin: 8px 0 0;\r\n      font-size: 0.9rem;\r\n      line-height: 1.5;\r\n    }\r\n\r\n    .skills-container {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n    }\r\n\r\n    .skill-tag {\r\n      background: rgba(52, 152, 219, 0.1);\r\n      color: #3498db;\r\n      padding: 6px 12px;\r\n      border-radius: 16px;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .application-item {\r\n      padding: 16px 0;\r\n      border-bottom: 1px solid #eee;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    .application-item:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    .company {\r\n      color: #666;\r\n      margin: 4px 0;\r\n    }\r\n\r\n    .status {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n      padding: 4px 8px;\r\n      border-radius: 4px;\r\n      font-size: 0.9rem;\r\n      margin-top: 4px;\r\n    }\r\n\r\n    .status.pending {\r\n      background: #fff3cd;\r\n      color: #856404;\r\n    }\r\n\r\n    .status.accepted {\r\n      background: #d4edda;\r\n      color: #155724;\r\n    }\r\n\r\n    .status.rejected {\r\n      background: #f8d7da;\r\n      color: #721c24;\r\n    }\r\n\r\n    .cv-info {\r\n      padding: 16px 0;\r\n    }\r\n\r\n    .cv-info p {\r\n      margin: 8px 0;\r\n      color: #666;\r\n    }\r\n\r\n    .icon {\r\n      margin-right: 4px;\r\n    }\r\n\r\n    mat-card-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .career-path-info {\r\n      padding: 16px 0;\r\n    }\r\n\r\n    .career-path-header {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    .path-progress {\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .progress-bar {\r\n      height: 8px;\r\n      background: #f0f0f0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .progress {\r\n      height: 100%;\r\n      background: #3498db;\r\n      transition: width 0.3s ease;\r\n    }\r\n\r\n    .progress-text {\r\n      font-size: 0.9rem;\r\n      color: #666;\r\n    }\r\n\r\n    .path-details {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n      gap: 16px;\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .path-details p {\r\n      margin: 0;\r\n      color: #666;\r\n    }\r\n\r\n    .timeline-section {\r\n      margin-top: 24px;\r\n    }\r\n\r\n    .timeline {\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .timeline-item {\r\n      padding: 16px;\r\n      border-left: 2px solid #3498db;\r\n      margin-left: 16px;\r\n      position: relative;\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    .timeline-item::before {\r\n      content: '';\r\n      position: absolute;\r\n      left: -8px;\r\n      top: 20px;\r\n      width: 14px;\r\n      height: 14px;\r\n      border-radius: 50%;\r\n      background: #3498db;\r\n    }\r\n\r\n    .phase-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 12px;\r\n    }\r\n\r\n    .phase-header h4 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .duration {\r\n      font-size: 0.9rem;\r\n      color: #666;\r\n      background: #f8f9fa;\r\n      padding: 4px 8px;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .phase-content {\r\n      color: #666;\r\n    }\r\n\r\n    .phase-content h5 {\r\n      margin: 12px 0 8px;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .phase-content ul {\r\n      margin: 0;\r\n      padding-left: 20px;\r\n    }\r\n\r\n    .phase-content li {\r\n      margin-bottom: 4px;\r\n    }\r\n\r\n    .skills-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n      gap: 24px;\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .skill-category h4 {\r\n      margin: 0 0 12px;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .skill-tags {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n    }\r\n\r\n    .skill-tag {\r\n      background: rgba(52, 152, 219, 0.1);\r\n      color: #3498db;\r\n      padding: 6px 12px;\r\n      border-radius: 16px;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .skill-tag.missing {\r\n      background: rgba(220, 53, 69, 0.1);\r\n      color: #dc3545;\r\n    }\r\n  `]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faUser = faUser;\r\n  faBriefcase = faBriefcase;\r\n  faFileAlt = faFileAlt;\r\n  faDownload = faDownload;\r\n  faCheck = faCheck;\r\n  faTimes = faTimes;\r\n  faClock = faClock;\r\n  faRoute = faRoute;\r\n  faGraduationCap = faGraduationCap;\r\n  faBuilding = faBuilding;\r\n\r\n  user: User | null = null;\r\n  skills: any[] = [];\r\n  applications: any[] = [];\r\n  cv: any = null;\r\n  careerPath: CareerPath | null = null;\r\n  experiences: Experience[] = [];\r\n  educations: Education[] = [];\r\n  profileCompletion = 0;\r\n  isLoading = true;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private skillService: SkillService,\r\n    private applicationService: ApplicationService,\r\n    private authService: AuthService,\r\n    private cvService: CVService,\r\n    private careerPathService: CareerPathService,\r\n    private experienceService: ExperienceService,\r\n    private educationService: EducationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadAllData();\r\n  }\r\n\r\n  retryLoading(): void {\r\n    this.error = null;\r\n    this.loadAllData();\r\n  }\r\n\r\n  private loadAllData(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    // First check if we have a logged-in user\r\n    const currentUser = this.authService.getCurrentUser();\r\n    if (!currentUser) {\r\n      this.error = 'No user is currently logged in';\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    // Load profile data\r\n    this.profileService.getProfile().subscribe({\r\n      next: (profile) => {\r\n        this.user = profile;\r\n        this.calculateProfileCompletion();\r\n        this.loadUserSkills();\r\n        this.loadUserApplications();\r\n        this.loadUserCV();\r\n        this.loadCareerPath();\r\n        this.loadUserExperiences();\r\n        this.loadUserEducations();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading profile:', error);\r\n        this.error = 'Failed to load profile data. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadUserExperiences(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.experienceService.getExperiences(user.id).subscribe({\r\n        next: (experiences) => {\r\n          this.experiences = experiences;\r\n          this.calculateProfileCompletion();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading experiences:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUserEducations(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.educationService.getEducations(user.id).subscribe({\r\n        next: (educations) => {\r\n          this.educations = educations;\r\n          this.calculateProfileCompletion();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading educations:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUserSkills(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.skillService.getUserSkills(user.id).subscribe({\r\n        next: (skills) => {\r\n          this.skills = skills;\r\n          this.calculateProfileCompletion();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading skills:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUserApplications(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.applicationService.getUserApplications(user.id).subscribe({\r\n        next: (applications) => {\r\n          this.applications = applications;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading applications:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUserCV(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.cvService.getCV(user.id).subscribe({\r\n        next: (cv) => {\r\n          this.cv = cv;\r\n          this.calculateProfileCompletion();\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading CV:', error);\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private loadCareerPath(): void {\r\n    this.careerPathService.getUserCareerPaths().subscribe({\r\n      next: (careerPaths) => {\r\n        if (careerPaths.length > 0) {\r\n          this.careerPath = careerPaths[0];\r\n          this.calculateProfileCompletion();\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading career path:', error);\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getStatusIcon(status: string) {\r\n    switch (status.toLowerCase()) {\r\n      case 'accepted':\r\n        return this.faCheck;\r\n      case 'rejected':\r\n        return this.faTimes;\r\n      default:\r\n        return this.faClock;\r\n    }\r\n  }\r\n\r\n  private calculateProfileCompletion(): void {\r\n    let completion = 0;\r\n    const totalFields = 7; // name, skills, cv, position, career path, experiences, education\r\n\r\n    if (this.user?.name) completion++;\r\n    if (this.skills.length > 0) completion++;\r\n    if (this.cv) completion++;\r\n    if (this.user?.position) completion++;\r\n    if (this.careerPath) completion++;\r\n    if (this.experiences.length > 0) completion++;\r\n    if (this.educations.length > 0) completion++;\r\n\r\n    this.profileCompletion = Math.round((completion / totalFields) * 100);\r\n  }\r\n\r\n  downloadCV(): void {\r\n    if (this.cv) {\r\n      this.cvService.downloadCV(this.cv.id).subscribe({\r\n        next: (blob) => {\r\n          this.cvService.saveFile(blob, this.cv.fileName);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error downloading CV:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormControl } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faUser, faBriefcase, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProfileService, UpdateProfileData } from '../../../services/profile.service';\r\nimport { SkillService, Skill } from '../../../services/skill.service';\r\nimport { AuthService, User } from '../../../services/auth.service';\r\nimport { Observable, map, startWith, firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-profile-update',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"profile-update-container\">\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Loading profile data...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"retryLoading()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- Profile Update Form -->\r\n      <form *ngIf=\"!isLoading && !error\" [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\" class=\"profile-form\">\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <fa-icon [icon]=\"faUser\" class=\"icon\"></fa-icon>\r\n              Update Profile\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <!-- Basic Information -->\r\n            <div class=\"form-section\">\r\n              <h2>Basic Information</h2>\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput formControlName=\"name\" placeholder=\"Your full name\">\r\n                <mat-error *ngIf=\"profileForm.get('name')?.hasError('required')\">\r\n                  Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Position</mat-label>\r\n                <input matInput formControlName=\"position\" placeholder=\"Your current position\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Skills Section -->\r\n            <div class=\"form-section\">\r\n              <h2>Skills</h2>\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Add Skills</mat-label>\r\n                <mat-chip-grid #chipGrid>\r\n                  <mat-chip-row *ngFor=\"let skill of selectedSkills\" (removed)=\"removeSkill(skill)\">\r\n                    {{skill.name}}\r\n                    <button matChipRemove>\r\n                      <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n                    </button>\r\n                  </mat-chip-row>\r\n                </mat-chip-grid>\r\n                <input placeholder=\"Type to search or add new skill...\"\r\n                       [matChipInputFor]=\"chipGrid\"\r\n                       [matAutocomplete]=\"auto\"\r\n                       [formControl]=\"skillInput\"\r\n                       (matChipInputTokenEnd)=\"addSkill($event)\">\r\n                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectedSkill($event)\">\r\n                  <mat-option *ngFor=\"let skill of filteredSkills | async\" [value]=\"skill\">\r\n                    {{skill.name}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n              </mat-form-field>\r\n            </div>\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n            <button mat-button type=\"button\" (click)=\"goBack()\">Cancel</button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"profileForm.invalid || isSubmitting\">\r\n              <mat-spinner diameter=\"20\" *ngIf=\"isSubmitting\"></mat-spinner>\r\n              <span *ngIf=\"!isSubmitting\">Save Changes</span>\r\n            </button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .profile-update-container {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n      font-family: 'Poppins', sans-serif;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .profile-form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 24px;\r\n    }\r\n\r\n    .form-section {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n\r\n    .form-section h2 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n    }\r\n\r\n    mat-card-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 16px;\r\n      padding: 16px;\r\n    }\r\n\r\n    .icon {\r\n      margin-right: 8px;\r\n    }\r\n\r\n    mat-card-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class ProfileUpdateComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faUser = faUser;\r\n  faBriefcase = faBriefcase;\r\n  faPlus = faPlus;\r\n  faTimes = faTimes;\r\n\r\n  profileForm: FormGroup;\r\n  skillInput: FormControl;\r\n  selectedSkills: Skill[] = [];\r\n  availableSkills: Skill[] = [];\r\n  filteredSkills: Observable<Skill[]>;\r\n  isLoading = true;\r\n  isSubmitting = false;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private profileService: ProfileService,\r\n    private skillService: SkillService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.profileForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      position: ['']\r\n    });\r\n\r\n    this.skillInput = this.fb.control('');\r\n    this.filteredSkills = this.skillInput.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSkills(value || ''))\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadProfileData();\r\n    this.loadAvailableSkills();\r\n  }\r\n\r\n  private loadProfileData(): void {\r\n    const currentUser = this.authService.getCurrentUser();\r\n    if (!currentUser) {\r\n      this.error = 'No user is currently logged in';\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.profileService.getProfile().subscribe({\r\n      next: (profile) => {\r\n        this.profileForm.patchValue({\r\n          name: profile.name,\r\n          position: profile.position || ''\r\n        });\r\n        this.loadUserSkills();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading profile:', error);\r\n        this.error = 'Failed to load profile data. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadUserSkills(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.skillService.getUserSkills(user.id).subscribe({\r\n        next: (skills) => {\r\n          this.selectedSkills = skills;\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading skills:', error);\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadAvailableSkills(): void {\r\n    this.skillService.getAllSkills().subscribe({\r\n      next: (skills) => {\r\n        this.availableSkills = skills;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading available skills:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _filterSkills(value: string | Skill): Skill[] {\r\n    const filterValue = typeof value === 'string' ? value.toLowerCase() : value.name.toLowerCase();\r\n    return this.availableSkills.filter(skill => \r\n      skill.name.toLowerCase().includes(filterValue) &&\r\n      !this.selectedSkills.some(selected => selected.id === skill.id)\r\n    );\r\n  }\r\n\r\n  addSkill(event: any): void {\r\n    const value = (event.value || '').trim();\r\n    if (value) {\r\n      // Check if skill already exists\r\n      const existingSkill = this.availableSkills.find(s => s.name.toLowerCase() === value.toLowerCase());\r\n      if (existingSkill) {\r\n        this.selectedSkills.push(existingSkill);\r\n      } else {\r\n        // Create new skill\r\n        this.skillService.createSkill({ name: value }).subscribe({\r\n          next: (newSkill) => {\r\n            this.selectedSkills.push(newSkill);\r\n            this.availableSkills.push(newSkill);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error creating new skill:', error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.skillInput.setValue('');\r\n  }\r\n\r\n  selectedSkill(event: any): void {\r\n    const skill = event.option.value;\r\n    if (!this.selectedSkills.some(s => s.id === skill.id)) {\r\n      this.selectedSkills.push(skill);\r\n    }\r\n    this.skillInput.setValue('');\r\n  }\r\n\r\n  removeSkill(skill: Skill): void {\r\n    const index = this.selectedSkills.indexOf(skill);\r\n    if (index >= 0) {\r\n      this.selectedSkills.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.profileForm.valid) {\r\n      this.isSubmitting = true;\r\n      const user = this.authService.getCurrentUser();\r\n      if (!user) {\r\n        this.error = 'No user is currently logged in';\r\n        this.isSubmitting = false;\r\n        return;\r\n      }\r\n\r\n      const updateData: UpdateProfileData = {\r\n        name: this.profileForm.get('name')?.value,\r\n        position: this.profileForm.get('position')?.value\r\n      };\r\n\r\n      // Update profile\r\n      this.profileService.updateProfile(updateData).subscribe({\r\n        next: async () => {\r\n          try {\r\n            // Get current user skills\r\n            const currentUserSkills = await firstValueFrom(this.skillService.getUserSkills(user.id));\r\n            const currentSkillIds = this.selectedSkills.map(s => s.id);\r\n            const existingSkillIds = currentUserSkills.map(s => s.id);\r\n\r\n            // Find skills to remove (skills that exist in currentUserSkills but not in selectedSkills)\r\n            const skillsToRemove = currentUserSkills.filter(s => !currentSkillIds.includes(s.id));\r\n\r\n            // Find skills to add (skills in selectedSkills that don't exist in currentUserSkills)\r\n            const skillsToAdd = this.selectedSkills.filter(s => !existingSkillIds.includes(s.id));\r\n\r\n            console.log('Skills to remove:', skillsToRemove);\r\n            console.log('Skills to add:', skillsToAdd);\r\n\r\n            // Process removals\r\n            for (const skill of skillsToRemove) {\r\n              await firstValueFrom(this.skillService.removeUserSkill(user.id, skill.id));\r\n            }\r\n\r\n            // Process additions\r\n            for (const skill of skillsToAdd) {\r\n              await firstValueFrom(this.skillService.addUserSkill(user.id, skill.id));\r\n            }\r\n\r\n            this.isSubmitting = false;\r\n            this.goBack();\r\n          } catch (error) {\r\n            console.error('Error updating skills:', error);\r\n            this.error = 'Failed to update skills. Please try again.';\r\n            this.isSubmitting = false;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error updating profile:', error);\r\n          this.error = 'Failed to update profile. Please try again.';\r\n          this.isSubmitting = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  retryLoading(): void {\r\n    this.error = null;\r\n    this.loadProfileData();\r\n  }\r\n\r\n  goBack(): void {\r\n    window.history.back();\r\n  }\r\n} ","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ElementRef, NgZone, Renderer2, ChangeDetectorRef, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, InjectionToken, TemplateRef, Injectable, NgModule } from '@angular/core';\nimport { B as BasePortalOutlet, f as CdkPortalOutlet, C as ComponentPortal, T as TemplatePortal, h as PortalModule } from './portal-directives-Bw5woq8I.mjs';\nfunction CdkDialogContainer_ng_template_0_Template(rf, ctx) {}\nexport { d as ɵɵCdkPortal, g as ɵɵPortalHostDirective, e as ɵɵTemplatePortalDirective } from './portal-directives-Bw5woq8I.mjs';\nimport { F as FocusTrapFactory, I as InteractivityChecker, A as A11yModule } from './a11y-module-BYox5gpI.mjs';\nimport { c as OverlayRef, a as Overlay, O as OverlayContainer, f as OverlayConfig, m as OverlayModule } from './overlay-module-BUj0D19H.mjs';\nimport { F as FocusMonitor } from './focus-monitor-e2l_RpN3.mjs';\nimport { P as Platform } from './platform-DmdVEw_C.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { Subject, defer, of } from 'rxjs';\nimport { g as ESCAPE } from './keycodes-CpHkExLC.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { startWith } from 'rxjs/operators';\nimport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport './style-loader-Cu9AvjH9.mjs';\nimport './private.mjs';\nimport './breakpoints-observer-CljOfYGy.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './observers.mjs';\nimport './element-x4z00URv.mjs';\nimport './backwards-compatibility-DHR38MsD.mjs';\nimport './test-environment-CT0XxPyp.mjs';\nimport './css-pixel-value-C_HEqLhI.mjs';\nimport './scrolling.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport './bidi.mjs';\nimport './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport './data-source-D34wiQZj.mjs';\nimport './fake-event-detection-DWOdFTFz.mjs';\nimport './passive-listeners-esHZRgIN.mjs';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef;\n  /**\n   * Injector used for the instantiation of the component to be attached. If provided,\n   * takes precedence over the injector indirectly provided by `ViewContainerRef`.\n   */\n  injector;\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id;\n  /** The ARIA role of the dialog element. */\n  role = 'dialog';\n  /** Optional CSS class or classes applied to the overlay panel. */\n  panelClass = '';\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop = true;\n  /** Optional CSS class or classes applied to the overlay backdrop. */\n  backdropClass = '';\n  /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n  disableClose = false;\n  /** Width of the dialog. */\n  width = '';\n  /** Height of the dialog. */\n  height = '';\n  /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n  minWidth;\n  /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n  minHeight;\n  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n  maxWidth;\n  /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n  maxHeight;\n  /** Strategy to use when positioning the dialog. Defaults to centering it on the page. */\n  positionStrategy;\n  /** Data being injected into the child component. */\n  data = null;\n  /** Layout direction for the dialog's content. */\n  direction;\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy = null;\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy = null;\n  /** Dialog label applied via `aria-label` */\n  ariaLabel = null;\n  /**\n   * Whether this is a modal dialog. Used to set the `aria-modal` attribute. Off by default,\n   * because it can interfere with other overlay-based components (e.g. `mat-select`) and because\n   * it is redundant since the dialog marks all outside content as `aria-hidden` anyway.\n   */\n  ariaModal = false;\n  /**\n   * Where the dialog should focus on open.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n   * AutoFocusTarget instead.\n   */\n  autoFocus = 'first-tabbable';\n  /**\n   * Whether the dialog should restore focus to the previously-focused element upon closing.\n   * Has the following behavior based on the type that is passed in:\n   * - `boolean` - when true, will return focus to the element that was focused before the dialog\n   *    was opened, otherwise won't restore focus at all.\n   * - `string` - focus will be restored to the first element that matches the CSS selector.\n   * - `HTMLElement` - focus will be restored to the specific element.\n   */\n  restoreFocus = true;\n  /**\n   * Scroll strategy to be used for the dialog. This determines how\n   * the dialog responds to scrolling underneath the panel element.\n   */\n  scrollStrategy;\n  /**\n   * Whether the dialog should close when the user navigates backwards or forwards through browser\n   * history. This does not apply to navigation via anchor element unless using URL-hash based\n   * routing (`HashLocationStrategy` in the Angular router).\n   */\n  closeOnNavigation = true;\n  /**\n   * Whether the dialog should close when the dialog service is destroyed. This is useful if\n   * another service is wrapping the dialog and is managing the destruction instead.\n   */\n  closeOnDestroy = true;\n  /**\n   * Whether the dialog should close when the underlying overlay is detached. This is useful if\n   * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n   * external detachment can happen as a result of a scroll strategy triggering it or when the\n   * browser location changes.\n   */\n  closeOnOverlayDetachments = true;\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * @deprecated No longer used. Will be removed.\n   * @breaking-change 20.0.0\n   */\n  componentFactoryResolver;\n  /**\n   * Providers that will be exposed to the contents of the dialog. Can also\n   * be provided as a function in order to generate the providers lazily.\n   */\n  providers;\n  /**\n   * Component into which the dialog content will be rendered. Defaults to `CdkDialogContainer`.\n   * A configuration object can be passed in to customize the providers that will be exposed\n   * to the dialog container.\n   */\n  container;\n  /**\n   * Context that will be passed to template-based dialogs.\n   * A function can be passed in to resolve the context lazily.\n   */\n  templateContext;\n}\nfunction throwDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n  _elementRef = inject(ElementRef);\n  _focusTrapFactory = inject(FocusTrapFactory);\n  _config;\n  _interactivityChecker = inject(InteractivityChecker);\n  _ngZone = inject(NgZone);\n  _overlayRef = inject(OverlayRef);\n  _focusMonitor = inject(FocusMonitor);\n  _renderer = inject(Renderer2);\n  _platform = inject(Platform);\n  _document = inject(DOCUMENT, {\n    optional: true\n  });\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  _portalOutlet;\n  /** The class that traps and manages focus within the dialog. */\n  _focusTrap = null;\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  _elementFocusedBeforeDialogWasOpened = null;\n  /**\n   * Type of interaction that led to the dialog being closed. This is used to determine\n   * whether the focus style will be applied when returning focus to its original location\n   * after the dialog is closed.\n   */\n  _closeInteractionType = null;\n  /**\n   * Queue of the IDs of the dialog's label element, based on their definition order. The first\n   * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n   * where there are two or more titles in the DOM at a time and the first one is destroyed while\n   * the rest are present.\n   */\n  _ariaLabelledByQueue = [];\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _injector = inject(Injector);\n  _isDestroyed = false;\n  constructor() {\n    super();\n    // Callback is primarily for some internal tests\n    // that were instantiating the dialog container manually.\n    this._config = inject(DialogConfig, {\n      optional: true\n    }) || new DialogConfig();\n    if (this._config.ariaLabelledBy) {\n      this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n    }\n  }\n  _addAriaLabelledBy(id) {\n    this._ariaLabelledByQueue.push(id);\n    this._changeDetectorRef.markForCheck();\n  }\n  _removeAriaLabelledBy(id) {\n    const index = this._ariaLabelledByQueue.indexOf(id);\n    if (index > -1) {\n      this._ariaLabelledByQueue.splice(index, 1);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _contentAttached() {\n    this._initializeFocusTrap();\n    this._handleBackdropClicks();\n    this._captureInitialFocus();\n  }\n  /**\n   * Can be used by child classes to customize the initial focus\n   * capturing behavior (e.g. if it's tied to an animation).\n   */\n  _captureInitialFocus() {\n    this._trapFocus();\n  }\n  ngOnDestroy() {\n    this._isDestroyed = true;\n    this._restoreFocus();\n  }\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachComponentPortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachTemplatePortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  /**\n   * Attaches a DOM portal to the dialog container.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = portal => {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachDomPortal(portal);\n    this._contentAttached();\n    return result;\n  };\n  // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n  /** Captures focus if it isn't already inside the dialog. */\n  _recaptureFocus() {\n    if (!this._containsFocus()) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          deregisterBlur();\n          deregisterMousedown();\n          element.removeAttribute('tabindex');\n        };\n        const deregisterBlur = this._renderer.listen(element, 'blur', callback);\n        const deregisterMousedown = this._renderer.listen(element, 'mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n   * cannot be moved then focus will go to the dialog container.\n   */\n  _trapFocus(options) {\n    if (this._isDestroyed) {\n      return;\n    }\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait until after the next render.\n    afterNextRender(() => {\n      const element = this._elementRef.nativeElement;\n      switch (this._config.autoFocus) {\n        case false:\n        case 'dialog':\n          // Ensure that focus is on the dialog container. It's possible that a different\n          // component tried to move focus while the open animation was running. See:\n          // https://github.com/angular/components/issues/16215. Note that we only want to do this\n          // if the focus isn't inside the dialog already, because it's possible that the consumer\n          // turned off `autoFocus` in order to move focus themselves.\n          if (!this._containsFocus()) {\n            element.focus(options);\n          }\n          break;\n        case true:\n        case 'first-tabbable':\n          const focusedSuccessfully = this._focusTrap?.focusInitialElement(options);\n          // If we weren't able to find a focusable element in the dialog, then focus the dialog\n          // container instead.\n          if (!focusedSuccessfully) {\n            this._focusDialogContainer(options);\n          }\n          break;\n        case 'first-heading':\n          this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]', options);\n          break;\n        default:\n          this._focusByCssSelector(this._config.autoFocus, options);\n          break;\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  /** Restores focus to the element that was focused before the dialog opened. */\n  _restoreFocus() {\n    const focusConfig = this._config.restoreFocus;\n    let focusTargetElement = null;\n    if (typeof focusConfig === 'string') {\n      focusTargetElement = this._document.querySelector(focusConfig);\n    } else if (typeof focusConfig === 'boolean') {\n      focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n    } else if (focusConfig) {\n      focusTargetElement = focusConfig;\n    }\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && focusTargetElement && typeof focusTargetElement.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      const element = this._elementRef.nativeElement;\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        if (this._focusMonitor) {\n          this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n          this._closeInteractionType = null;\n        } else {\n          focusTargetElement.focus();\n        }\n      }\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Focuses the dialog container. */\n  _focusDialogContainer(options) {\n    // Note that there is no focus method when rendering on the server.\n    if (this._elementRef.nativeElement.focus) {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n  /** Returns whether focus is inside the dialog. */\n  _containsFocus() {\n    const element = this._elementRef.nativeElement;\n    const activeElement = _getFocusedElementPierceShadowDom();\n    return element === activeElement || element.contains(activeElement);\n  }\n  /** Sets up the focus trap. */\n  _initializeFocusTrap() {\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      // Save the previously focused element. This element will be re-focused\n      // when the dialog closes.\n      if (this._document) {\n        this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n      }\n    }\n  }\n  /** Sets up the listener that handles clicks on the dialog backdrop. */\n  _handleBackdropClicks() {\n    // Clicking on the backdrop will move focus out of dialog.\n    // Recapture it if closing via the backdrop is disabled.\n    this._overlayRef.backdropClick().subscribe(() => {\n      if (this._config.disableClose) {\n        this._recaptureFocus();\n      }\n    });\n  }\n  static ɵfac = function CdkDialogContainer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDialogContainer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkDialogContainer,\n    selectors: [[\"cdk-dialog-container\"]],\n    viewQuery: function CdkDialogContainer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n      }\n    },\n    hostAttrs: [\"tabindex\", \"-1\", 1, \"cdk-dialog-container\"],\n    hostVars: 6,\n    hostBindings: function CdkDialogContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx._config.id || null)(\"role\", ctx._config.role)(\"aria-modal\", ctx._config.ariaModal)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkPortalOutlet\", \"\"]],\n    template: function CdkDialogContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CdkDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'cdk-dialog-container',\n        'tabindex': '-1',\n        '[attr.id]': '_config.id || null',\n        '[attr.role]': '_config.role',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null'\n      },\n      template: \"<ng-template cdkPortalOutlet />\\n\",\n      styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\\n\"]\n    }]\n  }], () => [], {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n  overlayRef;\n  config;\n  /**\n   * Instance of component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  componentInstance;\n  /**\n   * `ComponentRef` of the component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  componentRef;\n  /** Instance of the container that is rendering out the dialog content. */\n  containerInstance;\n  /** Whether the user is allowed to close the dialog. */\n  disableClose;\n  /** Emits when the dialog has been closed. */\n  closed = new Subject();\n  /** Emits when the backdrop of the dialog is clicked. */\n  backdropClick;\n  /** Emits when on keyboard events within the dialog. */\n  keydownEvents;\n  /** Emits on pointer events that happen outside of the dialog. */\n  outsidePointerEvents;\n  /** Unique ID for the dialog. */\n  id;\n  /** Subscription to external detachments of the dialog. */\n  _detachSubscription;\n  constructor(overlayRef, config) {\n    this.overlayRef = overlayRef;\n    this.config = config;\n    this.disableClose = config.disableClose;\n    this.backdropClick = overlayRef.backdropClick();\n    this.keydownEvents = overlayRef.keydownEvents();\n    this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n    this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n    this.keydownEvents.subscribe(event => {\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this.close(undefined, {\n          focusOrigin: 'keyboard'\n        });\n      }\n    });\n    this.backdropClick.subscribe(() => {\n      if (!this.disableClose) {\n        this.close(undefined, {\n          focusOrigin: 'mouse'\n        });\n      }\n    });\n    this._detachSubscription = overlayRef.detachments().subscribe(() => {\n      // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n      if (config.closeOnOverlayDetachments !== false) {\n        this.close();\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param result Optional result to return to the dialog opener.\n   * @param options Additional options to customize the closing behavior.\n   */\n  close(result, options) {\n    if (this.containerInstance) {\n      const closedSubject = this.closed;\n      this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n      // Drop the detach subscription first since it can be triggered by the\n      // `dispose` call and override the result of this closing sequence.\n      this._detachSubscription.unsubscribe();\n      this.overlayRef.dispose();\n      closedSubject.next(result);\n      closedSubject.complete();\n      this.componentInstance = this.containerInstance = null;\n    }\n  }\n  /** Updates the position of the dialog based on the current position strategy. */\n  updatePosition() {\n    this.overlayRef.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this.overlayRef.updateSize({\n      width,\n      height\n    });\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this.overlayRef.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this.overlayRef.removePanelClass(classes);\n    return this;\n  }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\nclass Dialog {\n  _overlay = inject(Overlay);\n  _injector = inject(Injector);\n  _defaultOptions = inject(DEFAULT_DIALOG_CONFIG, {\n    optional: true\n  });\n  _parentDialog = inject(Dialog, {\n    optional: true,\n    skipSelf: true\n  });\n  _overlayContainer = inject(OverlayContainer);\n  _idGenerator = inject(_IdGenerator);\n  _openDialogsAtThisLevel = [];\n  _afterAllClosedAtThisLevel = new Subject();\n  _afterOpenedAtThisLevel = new Subject();\n  _ariaHiddenElements = new Map();\n  _scrollStrategy = inject(DIALOG_SCROLL_STRATEGY);\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n  constructor() {}\n  open(componentOrTemplateRef, config) {\n    const defaults = this._defaultOptions || new DialogConfig();\n    config = {\n      ...defaults,\n      ...config\n    };\n    config.id = config.id || this._idGenerator.getId('cdk-dialog-');\n    if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n    const overlayConfig = this._getOverlayConfig(config);\n    const overlayRef = this._overlay.create(overlayConfig);\n    const dialogRef = new DialogRef(overlayRef, config);\n    const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n    dialogRef.containerInstance = dialogContainer;\n    this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n    this.openDialogs.push(dialogRef);\n    dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n    this.afterOpened.next(dialogRef);\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    reverseForEach(this.openDialogs, dialog => dialog.close());\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n    // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n    // determines when `aria-hidden` is removed from elements outside the dialog.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => {\n      // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n      if (dialog.config.closeOnDestroy === false) {\n        this._removeOpenDialog(dialog, false);\n      }\n    });\n    // Make a second pass and close the remaining dialogs. We do this second pass in order to\n    // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n    // that should be closed and dialogs that should not.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n    this._openDialogsAtThisLevel = [];\n  }\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param config The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  _getOverlayConfig(config) {\n    const state = new OverlayConfig({\n      positionStrategy: config.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n      panelClass: config.panelClass,\n      hasBackdrop: config.hasBackdrop,\n      direction: config.direction,\n      minWidth: config.minWidth,\n      minHeight: config.minHeight,\n      maxWidth: config.maxWidth,\n      maxHeight: config.maxHeight,\n      width: config.width,\n      height: config.height,\n      disposeOnNavigation: config.closeOnNavigation\n    });\n    if (config.backdropClass) {\n      state.backdropClass = config.backdropClass;\n    }\n    return state;\n  }\n  /**\n   * Attaches a dialog container to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  _attachContainer(overlay, dialogRef, config) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DialogConfig,\n      useValue: config\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }, {\n      provide: OverlayRef,\n      useValue: overlay\n    }];\n    let containerType;\n    if (config.container) {\n      if (typeof config.container === 'function') {\n        containerType = config.container;\n      } else {\n        containerType = config.container.type;\n        providers.push(...config.container.providers(config));\n      }\n    } else {\n      containerType = CdkDialogContainer;\n    }\n    const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    }));\n    const containerRef = overlay.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param config Configuration used to open the dialog.\n   */\n  _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n      let context = {\n        $implicit: config.data,\n        dialogRef\n      };\n      if (config.templateContext) {\n        context = {\n          ...context,\n          ...(typeof config.templateContext === 'function' ? config.templateContext() : config.templateContext)\n        };\n      }\n      dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n    } else {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n      const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n      dialogRef.componentRef = contentRef;\n      dialogRef.componentInstance = contentRef.instance;\n    }\n  }\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n   * dialog injector, if the user didn't provide a custom one.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DIALOG_DATA,\n      useValue: config.data\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }];\n    if (config.providers) {\n      if (typeof config.providers === 'function') {\n        providers.push(...config.providers(dialogRef, config, dialogContainer));\n      } else {\n        providers.push(...config.providers);\n      }\n    }\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null, {\n      optional: true\n    }))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n    return Injector.create({\n      parent: userInjector || fallbackInjector,\n      providers\n    });\n  }\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   * @param emitEvent Whether to emit an event if this is the last dialog.\n   */\n  _removeOpenDialog(dialogRef, emitEvent) {\n    const index = this.openDialogs.indexOf(dialogRef);\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n        this._ariaHiddenElements.clear();\n        if (emitEvent) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    }\n  }\n  /** Hides all of the content that isn't an overlay from assistive technology. */\n  _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n      for (let i = siblings.length - 1; i > -1; i--) {\n        const sibling = siblings[i];\n        if (sibling !== overlayContainer && sibling.nodeName !== 'SCRIPT' && sibling.nodeName !== 'STYLE' && !sibling.hasAttribute('aria-live')) {\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  static ɵfac = function Dialog_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Dialog)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Dialog,\n    factory: Dialog.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n  let i = items.length;\n  while (i--) {\n    callback(items[i]);\n  }\n}\nclass DialogModule {\n  static ɵfac = function DialogModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DialogModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DialogModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [Dialog],\n    imports: [OverlayModule, PortalModule, A11yModule,\n    // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n    // don't have to remember to import it or be faced with an unhelpful error.\n    PortalModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n      exports: [\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule, CdkDialogContainer],\n      providers: [Dialog]\n    }]\n  }], null, null);\n})();\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError, CdkPortalOutlet as ɵɵCdkPortalOutlet };\n","import { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { inject, ANIMATION_MODULE_TYPE, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injectable, ElementRef, Directive, Input, NgModule } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nfunction MatDialogContainer_ng_template_2_Template(rf, ctx) {}\nclass MatDialogConfig {\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef;\n  /**\n   * Injector used for the instantiation of the component to be attached. If provided,\n   * takes precedence over the injector indirectly provided by `ViewContainerRef`.\n   */\n  injector;\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id;\n  /** The ARIA role of the dialog element. */\n  role = 'dialog';\n  /** Custom class for the overlay pane. */\n  panelClass = '';\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop = true;\n  /** Custom class for the backdrop. */\n  backdropClass = '';\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose = false;\n  /** Width of the dialog. */\n  width = '';\n  /** Height of the dialog. */\n  height = '';\n  /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n  minWidth;\n  /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n  minHeight;\n  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n  maxWidth;\n  /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n  maxHeight;\n  /** Position overrides. */\n  position;\n  /** Data being injected into the child component. */\n  data = null;\n  /** Layout direction for the dialog's content. */\n  direction;\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy = null;\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy = null;\n  /** Aria label to assign to the dialog element. */\n  ariaLabel = null;\n  /**\n   * Whether this is a modal dialog. Used to set the `aria-modal` attribute. Off by default,\n   * because it can interfere with other overlay-based components (e.g. `mat-select`) and because\n   * it is redundant since the dialog marks all outside content as `aria-hidden` anyway.\n   */\n  ariaModal = false;\n  /**\n   * Where the dialog should focus on open.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n   * AutoFocusTarget instead.\n   */\n  autoFocus = 'first-tabbable';\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus = true;\n  /** Whether to wait for the opening animation to finish before trapping focus. */\n  delayFocusTrap = true;\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy;\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation = true;\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * @deprecated No longer used. Will be removed.\n   * @breaking-change 20.0.0\n   */\n  componentFactoryResolver;\n  /**\n   * Duration of the enter animation in ms.\n   * Should be a number, string type is deprecated.\n   * @breaking-change 17.0.0 Remove string signature.\n   */\n  enterAnimationDuration;\n  /**\n   * Duration of the exit animation in ms.\n   * Should be a number, string type is deprecated.\n   * @breaking-change 17.0.0 Remove string signature.\n   */\n  exitAnimationDuration;\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter();\n  /** Whether animations are enabled. */\n  _animationsEnabled = this._animationMode !== 'NoopAnimations';\n  /** Number of actions projected in the dialog. */\n  _actionSectionCount = 0;\n  /** Host element of the dialog container component. */\n  _hostElement = this._elementRef.nativeElement;\n  /** Duration of the dialog open animation. */\n  _enterAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION : 0;\n  /** Duration of the dialog close animation. */\n  _exitAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION : 0;\n  /** Current timer for dialog animations. */\n  _animationTimer = null;\n  _contentAttached() {\n    // Delegate to the original dialog-container initialization (i.e. saving the\n    // previous element, setting up the focus trap and moving focus to the container).\n    super._contentAttached();\n    // Note: Usually we would be able to use the MDC dialog foundation here to handle\n    // the dialog animation for us, but there are a few reasons why we just leverage\n    // their styles and not use the runtime foundation code:\n    //   1. Foundation does not allow us to disable animations.\n    //   2. Foundation contains unnecessary features we don't need and aren't\n    //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n    this._startOpenAnimation();\n  }\n  /** Starts the dialog open animation if enabled. */\n  _startOpenAnimation() {\n    this._animationStateChanged.emit({\n      state: 'opening',\n      totalTime: this._enterAnimationDuration\n    });\n    if (this._animationsEnabled) {\n      this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n      // We need to give the `setProperty` call from above some time to be applied.\n      // One would expect that the open class is added once the animation finished, but MDC\n      // uses the open class in combination with the opening class to start the animation.\n      this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n      this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n    } else {\n      this._hostElement.classList.add(OPEN_CLASS);\n      // Note: We could immediately finish the dialog opening here with noop animations,\n      // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n      // Executing this immediately would mean that `afterOpened` emits synchronously\n      // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n      Promise.resolve().then(() => this._finishDialogOpen());\n    }\n  }\n  /**\n   * Starts the exit animation of the dialog if enabled. This method is\n   * called by the dialog ref.\n   */\n  _startExitAnimation() {\n    this._animationStateChanged.emit({\n      state: 'closing',\n      totalTime: this._exitAnimationDuration\n    });\n    this._hostElement.classList.remove(OPEN_CLASS);\n    if (this._animationsEnabled) {\n      this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n      // We need to give the `setProperty` call from above some time to be applied.\n      this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n      this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n    } else {\n      // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n      // set up before any user can subscribe to the backdrop click. The subscription triggers\n      // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n      // animation state event if animations are disabled, the overlay would be disposed\n      // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n      // skipped. We work around this by waiting with the dialog close until the next tick when\n      // all subscriptions have been fired as expected. This is not an ideal solution, but\n      // there doesn't seem to be any other good way. Alternatives that have been considered:\n      //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n      //      Also this issue is specific to the MDC implementation where the dialog could\n      //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n      //      and closing always takes at least a tick.\n      //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n      //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n      //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n      // Based on the fact that this is specific to the MDC-based implementation of the dialog\n      // animations, the defer is applied here.\n      Promise.resolve().then(() => this._finishDialogClose());\n    }\n  }\n  /**\n   * Updates the number action sections.\n   * @param delta Increase/decrease in the number of sections.\n   */\n  _updateActionSectionCount(delta) {\n    this._actionSectionCount += delta;\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Completes the dialog open by clearing potential animation classes, trapping\n   * focus and emitting an opened event.\n   */\n  _finishDialogOpen = () => {\n    this._clearAnimationClasses();\n    this._openAnimationDone(this._enterAnimationDuration);\n  };\n  /**\n   * Completes the dialog close by clearing potential animation classes, restoring\n   * focus and emitting a closed event.\n   */\n  _finishDialogClose = () => {\n    this._clearAnimationClasses();\n    this._animationStateChanged.emit({\n      state: 'closed',\n      totalTime: this._exitAnimationDuration\n    });\n  };\n  /** Clears all dialog animation classes. */\n  _clearAnimationClasses() {\n    this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n  }\n  _waitForAnimationToComplete(duration, callback) {\n    if (this._animationTimer !== null) {\n      clearTimeout(this._animationTimer);\n    }\n    // Note that we want this timer to run inside the NgZone, because we want\n    // the related events like `afterClosed` to be inside the zone as well.\n    this._animationTimer = setTimeout(callback, duration);\n  }\n  /** Runs a callback in `requestAnimationFrame`, if available. */\n  _requestAnimationFrame(callback) {\n    this._ngZone.runOutsideAngular(() => {\n      if (typeof requestAnimationFrame === 'function') {\n        requestAnimationFrame(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  _captureInitialFocus() {\n    if (!this._config.delayFocusTrap) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Callback for when the open dialog animation has finished. Intended to\n   * be called by sub-classes that use different animation implementations.\n   */\n  _openAnimationDone(totalTime) {\n    if (this._config.delayFocusTrap) {\n      this._trapFocus();\n    }\n    this._animationStateChanged.next({\n      state: 'opened',\n      totalTime\n    });\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._animationTimer !== null) {\n      clearTimeout(this._animationTimer);\n    }\n  }\n  attachComponentPortal(portal) {\n    // When a component is passed into the dialog, the host element interrupts\n    // the `display:flex` from affecting the dialog title, content, and\n    // actions. To fix this, we make the component host `display: contents` by\n    // marking its host with the `mat-mdc-dialog-component-host` class.\n    //\n    // Note that this problem does not exist when a template ref is used since\n    // the title, contents, and actions are then nested directly under the\n    // dialog surface.\n    const ref = super.attachComponentPortal(portal);\n    ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n    return ref;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDialogContainer_BaseFactory;\n    return function MatDialogContainer_Factory(__ngFactoryType__) {\n      return (ɵMatDialogContainer_BaseFactory || (ɵMatDialogContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogContainer)))(__ngFactoryType__ || MatDialogContainer);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDialogContainer,\n    selectors: [[\"mat-dialog-container\"]],\n    hostAttrs: [\"tabindex\", \"-1\", 1, \"mat-mdc-dialog-container\", \"mdc-dialog\"],\n    hostVars: 10,\n    hostBindings: function MatDialogContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx._config.id);\n        i0.ɵɵattribute(\"aria-modal\", ctx._config.ariaModal)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", !ctx._animationsEnabled)(\"mat-mdc-dialog-container-with-actions\", ctx._actionSectionCount > 0);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"mat-mdc-dialog-inner-container\", \"mdc-dialog__container\"], [1, \"mat-mdc-dialog-surface\", \"mdc-dialog__surface\"], [\"cdkPortalOutlet\", \"\"]],\n    template: function MatDialogContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MatDialogContainer_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 560px);min-width:var(--mat-dialog-container-min-width, 280px)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, calc(100vw - 32px))}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, none);border-radius:var(--mdc-dialog-container-shape, var(--mat-sys-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-sys-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 6px 24px 13px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-sys-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-sys-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-sys-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-sys-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-sys-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-sys-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-sys-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-sys-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-sys-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-sys-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-sys-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px 0)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 16px 24px);justify-content:var(--mat-dialog-actions-alignment, flex-end)}@media(forced-colors: active){.mat-mdc-dialog-actions{border-top-color:CanvasText}}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'mat-mdc-dialog-container mdc-dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[id]': '_config.id',\n        '[attr.role]': '_config.role',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n        '[class._mat-animation-noopable]': '!_animationsEnabled',\n        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0'\n      },\n      template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 560px);min-width:var(--mat-dialog-container-min-width, 280px)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, calc(100vw - 32px))}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, none);border-radius:var(--mdc-dialog-container-shape, var(--mat-sys-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-sys-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 6px 24px 13px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-sys-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-sys-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-sys-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-sys-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-sys-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-sys-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-sys-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-sys-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-sys-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-sys-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-sys-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px 0)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 16px 24px);justify-content:var(--mat-dialog-actions-alignment, flex-end)}@media(forced-colors: active){.mat-mdc-dialog-actions{border-top-color:CanvasText}}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\\n\"]\n    }]\n  }], null, null);\n})();\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n  if (time == null) {\n    return null;\n  }\n  if (typeof time === 'number') {\n    return time;\n  }\n  if (time.endsWith('ms')) {\n    return coerceNumberProperty(time.substring(0, time.length - 2));\n  }\n  if (time.endsWith('s')) {\n    return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n  }\n  if (time === '0') {\n    return 0;\n  }\n  return null; // anything else is invalid.\n}\nvar MatDialogState;\n(function (MatDialogState) {\n  MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n  MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n  MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n  _ref;\n  _containerInstance;\n  /** The instance of component opened into the dialog. */\n  componentInstance;\n  /**\n   * `ComponentRef` of the component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  componentRef;\n  /** Whether the user is allowed to close the dialog. */\n  disableClose;\n  /** Unique ID for the dialog. */\n  id;\n  /** Subject for notifying the user that the dialog has finished opening. */\n  _afterOpened = new Subject();\n  /** Subject for notifying the user that the dialog has started closing. */\n  _beforeClosed = new Subject();\n  /** Result to be passed to afterClosed. */\n  _result;\n  /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n  _closeFallbackTimeout;\n  /** Current state of the dialog. */\n  _state = MatDialogState.OPEN;\n  // TODO(crisbeto): we shouldn't have to declare this property, because `DialogRef.close`\n  // already has a second `options` parameter that we can use. The problem is that internal tests\n  // have assertions like `expect(MatDialogRef.close).toHaveBeenCalledWith(foo)` which will break,\n  // because it'll be called with two arguments by things like `MatDialogClose`.\n  /** Interaction that caused the dialog to close. */\n  _closeInteractionType;\n  constructor(_ref, config, _containerInstance) {\n    this._ref = _ref;\n    this._containerInstance = _containerInstance;\n    this.disableClose = config.disableClose;\n    this.id = _ref.id;\n    // Used to target panels specifically tied to dialogs.\n    _ref.addPanelClass('mat-mdc-dialog-panel');\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      this._finishDialogClose();\n    });\n    _ref.overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._finishDialogClose();\n    });\n    merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n      if (!this.disableClose) {\n        event.preventDefault();\n        _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult) {\n    this._result = dialogResult;\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1)).subscribe(event => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._ref.overlayRef.detachBackdrop();\n      // The logic that disposes of the overlay depends on the exit animation completing, however\n      // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n      // timeout which will clean everything up if the animation hasn't fired within the specified\n      // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n      // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n      this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n    });\n    this._state = MatDialogState.CLOSING;\n    this._containerInstance._startExitAnimation();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed() {\n    return this._ref.closed;\n  }\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed() {\n    return this._beforeClosed;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick() {\n    return this._ref.backdropClick;\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents() {\n    return this._ref.keydownEvents;\n  }\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position) {\n    let strategy = this._ref.config.positionStrategy;\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n    this._ref.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this._ref.updateSize(width, height);\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this._ref.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this._ref.removePanelClass(classes);\n    return this;\n  }\n  /** Gets the current state of the dialog's lifecycle. */\n  getState() {\n    return this._state;\n  }\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  _finishDialogClose() {\n    this._state = MatDialogState.CLOSED;\n    this._ref.close(this._result, {\n      focusOrigin: this._closeInteractionType\n    });\n    this.componentInstance = null;\n  }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n  ref._closeInteractionType = interactionType;\n  return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n  _overlay = inject(Overlay);\n  _defaultOptions = inject(MAT_DIALOG_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  _scrollStrategy = inject(MAT_DIALOG_SCROLL_STRATEGY);\n  _parentDialog = inject(MatDialog, {\n    optional: true,\n    skipSelf: true\n  });\n  _idGenerator = inject(_IdGenerator);\n  _dialog = inject(Dialog);\n  _openDialogsAtThisLevel = [];\n  _afterAllClosedAtThisLevel = new Subject();\n  _afterOpenedAtThisLevel = new Subject();\n  dialogConfigClass = MatDialogConfig;\n  _dialogRefConstructor;\n  _dialogContainerType;\n  _dialogDataToken;\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n  constructor() {\n    this._dialogRefConstructor = MatDialogRef;\n    this._dialogContainerType = MatDialogContainer;\n    this._dialogDataToken = MAT_DIALOG_DATA;\n  }\n  open(componentOrTemplateRef, config) {\n    let dialogRef;\n    config = {\n      ...(this._defaultOptions || new MatDialogConfig()),\n      ...config\n    };\n    config.id = config.id || this._idGenerator.getId('mat-mdc-dialog-');\n    config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n    const cdkRef = this._dialog.open(componentOrTemplateRef, {\n      ...config,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      // Disable closing since we need to sync it up to the animation ourselves.\n      disableClose: true,\n      // Disable closing on destroy, because this service cleans up its open dialogs as well.\n      // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n      // the dialogs immediately whereas we want it to wait for the animations to finish.\n      closeOnDestroy: false,\n      // Disable closing on detachments so that we can sync up the animation.\n      // The Material dialog ref handles this manually.\n      closeOnOverlayDetachments: false,\n      container: {\n        type: this._dialogContainerType,\n        providers: () => [\n        // Provide our config as the CDK config as well since it has the same interface as the\n        // CDK one, but it contains the actual values passed in by the user for things like\n        // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n        {\n          provide: this.dialogConfigClass,\n          useValue: config\n        }, {\n          provide: DialogConfig,\n          useValue: config\n        }]\n      },\n      templateContext: () => ({\n        dialogRef\n      }),\n      providers: (ref, cdkConfig, dialogContainer) => {\n        dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n        dialogRef.updatePosition(config?.position);\n        return [{\n          provide: this._dialogContainerType,\n          useValue: dialogContainer\n        }, {\n          provide: this._dialogDataToken,\n          useValue: cdkConfig.data\n        }, {\n          provide: this._dialogRefConstructor,\n          useValue: dialogRef\n        }];\n      }\n    });\n    // This can't be assigned in the `providers` callback, because\n    // the instance hasn't been assigned to the CDK ref yet.\n    dialogRef.componentRef = cdkRef.componentRef;\n    dialogRef.componentInstance = cdkRef.componentInstance;\n    this.openDialogs.push(dialogRef);\n    this.afterOpened.next(dialogRef);\n    dialogRef.afterClosed().subscribe(() => {\n      const index = this.openDialogs.indexOf(dialogRef);\n      if (index > -1) {\n        this.openDialogs.splice(index, 1);\n        if (!this.openDialogs.length) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    });\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    this._closeDialogs(this.openDialogs);\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n  _closeDialogs(dialogs) {\n    let i = dialogs.length;\n    while (i--) {\n      dialogs[i].close();\n    }\n  }\n  static ɵfac = function MatDialog_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialog)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatDialog,\n    factory: MatDialog.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n  dialogRef = inject(MatDialogRef, {\n    optional: true\n  });\n  _elementRef = inject(ElementRef);\n  _dialog = inject(MatDialog);\n  /** Screen-reader label for the button. */\n  ariaLabel;\n  /** Default to \"button\" to prevents accidental form submits. */\n  type = 'button';\n  /** Dialog close input. */\n  dialogResult;\n  _matDialogClose;\n  constructor() {}\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n    }\n  }\n  ngOnChanges(changes) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n  _onButtonClick(event) {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n  }\n  static ɵfac = function MatDialogClose_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogClose)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogClose,\n    selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]],\n    hostVars: 2,\n    hostBindings: function MatDialogClose_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) {\n          return ctx._onButtonClick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      type: \"type\",\n      dialogResult: [0, \"mat-dialog-close\", \"dialogResult\"],\n      _matDialogClose: [0, \"matDialogClose\", \"_matDialogClose\"]\n    },\n    exportAs: [\"matDialogClose\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogClose, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-dialog-close], [matDialogClose]',\n      exportAs: 'matDialogClose',\n      host: {\n        '(click)': '_onButtonClick($event)',\n        '[attr.aria-label]': 'ariaLabel || null',\n        '[attr.type]': 'type'\n      }\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    type: [{\n      type: Input\n    }],\n    dialogResult: [{\n      type: Input,\n      args: ['mat-dialog-close']\n    }],\n    _matDialogClose: [{\n      type: Input,\n      args: ['matDialogClose']\n    }]\n  });\n})();\nclass MatDialogLayoutSection {\n  _dialogRef = inject(MatDialogRef, {\n    optional: true\n  });\n  _elementRef = inject(ElementRef);\n  _dialog = inject(MatDialog);\n  constructor() {}\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n    }\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        this._onAdd();\n      });\n    }\n  }\n  ngOnDestroy() {\n    // Note: we null check because there are some internal\n    // tests that are mocking out `MatDialogRef` incorrectly.\n    const instance = this._dialogRef?._containerInstance;\n    if (instance) {\n      Promise.resolve().then(() => {\n        this._onRemove();\n      });\n    }\n  }\n  static ɵfac = function MatDialogLayoutSection_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogLayoutSection)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogLayoutSection\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogLayoutSection, [{\n    type: Directive\n  }], () => [], null);\n})();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n  id = inject(_IdGenerator).getId('mat-mdc-dialog-title-');\n  _onAdd() {\n    // Note: we null check the queue, because there are some internal\n    // tests that are mocking out `MatDialogRef` incorrectly.\n    this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n  }\n  _onRemove() {\n    this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDialogTitle_BaseFactory;\n    return function MatDialogTitle_Factory(__ngFactoryType__) {\n      return (ɵMatDialogTitle_BaseFactory || (ɵMatDialogTitle_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogTitle)))(__ngFactoryType__ || MatDialogTitle);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogTitle,\n    selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-dialog-title\", \"mdc-dialog__title\"],\n    hostVars: 1,\n    hostBindings: function MatDialogTitle_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    exportAs: [\"matDialogTitle\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogTitle, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-dialog-title], [matDialogTitle]',\n      exportAs: 'matDialogTitle',\n      host: {\n        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n        '[id]': 'id'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n  static ɵfac = function MatDialogContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogContent,\n    selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-dialog-content\", \"mdc-dialog__content\"],\n    features: [i0.ɵɵHostDirectivesFeature([i1.CdkScrollable])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogContent, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n      host: {\n        'class': 'mat-mdc-dialog-content mdc-dialog__content'\n      },\n      hostDirectives: [CdkScrollable]\n    }]\n  }], null, null);\n})();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n  /**\n   * Horizontal alignment of action buttons.\n   */\n  align;\n  _onAdd() {\n    this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n  }\n  _onRemove() {\n    this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDialogActions_BaseFactory;\n    return function MatDialogActions_Factory(__ngFactoryType__) {\n      return (ɵMatDialogActions_BaseFactory || (ɵMatDialogActions_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogActions)))(__ngFactoryType__ || MatDialogActions);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogActions,\n    selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-dialog-actions\", \"mdc-dialog__actions\"],\n    hostVars: 6,\n    hostBindings: function MatDialogActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-dialog-actions-align-start\", ctx.align === \"start\")(\"mat-mdc-dialog-actions-align-center\", ctx.align === \"center\")(\"mat-mdc-dialog-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogActions, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n      host: {\n        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n  let parent = element.nativeElement.parentElement;\n  while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n    parent = parent.parentElement;\n  }\n  return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\nconst DIRECTIVES = [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent];\nclass MatDialogModule {\n  static ɵfac = function MatDialogModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatDialogModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MatDialog],\n    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n      exports: [MatCommonModule, ...DIRECTIVES],\n      providers: [MatDialog]\n    }]\n  }], null, null);\n})();\nexport { MatDialogActions as M, _closeDialogVia as _, MatDialogClose as a, MatDialogTitle as b, MatDialogContent as c, MatDialogContainer as d, MAT_DIALOG_DATA as e, MAT_DIALOG_DEFAULT_OPTIONS as f, MAT_DIALOG_SCROLL_STRATEGY as g, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY as h, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER as i, MatDialog as j, MatDialogConfig as k, MatDialogState as l, MatDialogRef as m, MatDialogModule as n };\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faPaperPlane, faTimes, faCheck, faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { ApplicationService } from '../../../services/application.service';\r\nimport { ProfileService } from '../../../services/profile.service';\r\nimport { CareerPathService } from '../../../services/career-path.service';\r\nimport { CVService } from '../../../services/cv.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { SkillService } from '../../../services/skill.service';\r\n\r\ninterface Job {\r\n  id: string;\r\n  title: string;\r\n  employer: {\r\n    company: string;\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-application-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"application-form-container\">\r\n      <div class=\"form-header\">\r\n        <h2>Apply for {{data.job.title}}</h2>\r\n        <p class=\"company\">{{data.job.employer.company}}</p>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Processing your application...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"checkProfileCompletion()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- Application Form -->\r\n      <form *ngIf=\"!isLoading && !error\" [formGroup]=\"applicationForm\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Cover Letter</mat-label>\r\n          <textarea matInput formControlName=\"coverLetter\" rows=\"6\" \r\n                    placeholder=\"Explain why you're a good fit for this position...\"></textarea>\r\n          <mat-error *ngIf=\"applicationForm.get('coverLetter')?.hasError('required')\">\r\n            Cover letter is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"form-actions\">\r\n          <button mat-button type=\"button\" (click)=\"onCancel()\">\r\n            <fa-icon [icon]=\"faTimes\" class=\"icon\"></fa-icon>\r\n            Cancel\r\n          </button>\r\n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"applicationForm.invalid\">\r\n            <fa-icon [icon]=\"faPaperPlane\" class=\"icon\"></fa-icon>\r\n            Submit Application\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .application-form-container {\r\n      padding: 24px;\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .form-header {\r\n      margin-bottom: 24px;\r\n      text-align: center;\r\n    }\r\n\r\n    .form-header h2 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .company {\r\n      color: #666;\r\n      margin: 8px 0 0;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 16px;\r\n      margin-top: 24px;\r\n    }\r\n\r\n    .icon {\r\n      margin-right: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class ApplicationFormComponent implements OnInit {\r\n  applicationForm: FormGroup;\r\n  isLoading = false;\r\n  error: string | null = null;\r\n  profileCompletion: number = 0;\r\n  user: any;\r\n  skills: any[] = [];\r\n  cv: any;\r\n  careerPath: any;\r\n  applications: any[] = [];\r\n\r\n  // Font Awesome icons\r\n  faPaperPlane = faPaperPlane;\r\n  faTimes = faTimes;\r\n  faCheck = faCheck;\r\n  faClock = faClock;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<ApplicationFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { job: Job },\r\n    private applicationService: ApplicationService,\r\n    private profileService: ProfileService,\r\n    private snackBar: MatSnackBar,\r\n    private careerPathService: CareerPathService,\r\n    private skillService: SkillService,\r\n    private authService: AuthService,\r\n    private cvService: CVService,\r\n  ) {\r\n    this.applicationForm = this.fb.group({\r\n      coverLetter: ['', [Validators.required, Validators.minLength(100)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkProfileCompletion();\r\n  }\r\n\r\n  checkProfileCompletion(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    this.profileService.getProfile().subscribe({\r\n      next: (profile) => {\r\n        this.user = profile;\r\n        this.calculateProfileCompletion();\r\n        this.loadUserSkills();\r\n        this.loadUserApplications();\r\n        this.loadUserCV();\r\n        this.loadCareerPath();\r\n\r\n        // if (this.profileCompletion < 100) {\r\n        //   this.error = 'Please complete your profile before applying for jobs.';\r\n        //   this.snackBar.open('Please complete your profile before applying for jobs.', 'Close', {\r\n        //     duration: 5000,\r\n        //     panelClass: ['error-snackbar']\r\n        //   });\r\n        // }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error checking profile:', error);\r\n        this.error = 'Failed to verify profile completion. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadUserSkills(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.skillService.getUserSkills(user.id).subscribe({\r\n        next: (skills) => {\r\n          this.skills = skills;\r\n          this.calculateProfileCompletion();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading skills:', error);\r\n          // Don't set error state here, just log it\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUserApplications(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.applicationService.getUserApplications(user.id).subscribe({\r\n        next: (applications) => {\r\n          this.applications = applications;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading applications:', error);\r\n          // Don't set error state here, just log it\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadUserCV(): void {\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.cvService.getCV(user.id).subscribe({\r\n        next: (cv) => {\r\n          this.cv = cv;\r\n          this.calculateProfileCompletion();\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading CV:', error);\r\n          // Don't set error state here, just log it\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private loadCareerPath(): void {\r\n    this.careerPathService.getUserCareerPaths().subscribe({\r\n      next: (careerPaths) => {\r\n        if (careerPaths.length > 0) {\r\n          // Get the most recent career path\r\n          this.careerPath = careerPaths[0];\r\n          this.calculateProfileCompletion();\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading career path:', error);\r\n        // Don't set error state here, just log it\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getStatusIcon(status: string) {\r\n    switch (status.toLowerCase()) {\r\n      case 'accepted':\r\n        return this.faCheck;\r\n      case 'rejected':\r\n        return this.faTimes;\r\n      default:\r\n        return this.faClock;\r\n    }\r\n  }\r\n\r\n  private calculateProfileCompletion(): void {\r\n    let completion = 0;\r\n    const totalFields = 5; // name, skills, cv, position, career path\r\n\r\n    if (this.user?.name) completion++;\r\n    if (this.skills.length > 0) completion++;\r\n    if (this.cv) completion++;\r\n    if (this.user?.position) completion++;\r\n    if (this.careerPath) completion++;\r\n\r\n    this.profileCompletion = Math.round((completion / totalFields) * 100);\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  onSubmit(): void {\r\n    if (this.applicationForm.valid) {\r\n      this.isLoading = true;\r\n      this.error = null;\r\n\r\n      const applicationData = {\r\n        jobId: this.data.job.id,\r\n        coverLetter: this.applicationForm.value.coverLetter,\r\n        status: 'pending',\r\n        createdAt: new Date()\r\n      };\r\n\r\n      this.applicationService.createApplication(applicationData).subscribe({\r\n        next: () => {\r\n          this.isLoading = false;\r\n          this.snackBar.open('Application submitted successfully!', 'Close', {\r\n            duration: 5000,\r\n            panelClass: ['success-snackbar']\r\n          });\r\n          this.dialogRef.close();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error submitting application:', error);\r\n          this.isLoading = false;\r\n          this.error = 'Failed to submit application. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }  \r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faBriefcase, faBuilding, faMapMarkerAlt, faMoneyBillWave, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { SkillService, Skill } from '../../../services/skill.service';\r\nimport { JobService, Job } from '../../../services/job.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { ApplicationFormComponent } from '../application-form/application-form.component';\r\n\r\ninterface JobMatch {\r\n  job: Job;\r\n  matchScore: number;\r\n  matchingSkills: Skill[];\r\n  missingSkills: Skill[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-job-matching',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"job-matching-container\">\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Finding your perfect job matches...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"retryLoading()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- No Matches State -->\r\n      <div *ngIf=\"!isLoading && !error && jobMatches.length === 0\" class=\"no-matches-container\">\r\n        <h2>No Job Matches Found</h2>\r\n        <p>We couldn't find any jobs that match your skills. Try updating your skills in your profile.</p>\r\n        <button mat-raised-button color=\"primary\" (click)=\"goToProfileUpdate()\">\r\n          Update Skills\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Job Matches -->\r\n      <div *ngIf=\"!isLoading && !error && jobMatches.length > 0\" class=\"job-matches\">\r\n        <h2>Your Job Matches</h2>\r\n        <p class=\"subtitle\">Based on your skills and experience</p>\r\n\r\n        <div class=\"job-cards\">\r\n          <mat-card *ngFor=\"let match of jobMatches\" class=\"job-card\">\r\n            <mat-card-header>\r\n              <mat-card-title>\r\n                <fa-icon [icon]=\"faBriefcase\" class=\"icon\"></fa-icon>\r\n                {{match.job.title}}\r\n              </mat-card-title>\r\n              <mat-card-subtitle>\r\n                <fa-icon [icon]=\"faBuilding\" class=\"icon\"></fa-icon>\r\n                {{match.job.employer.name}}\r\n              </mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content>\r\n              <div class=\"job-details\">\r\n                <div class=\"detail\">\r\n                  <fa-icon [icon]=\"faMapMarkerAlt\" class=\"icon\"></fa-icon>\r\n                  {{match.job.location}}\r\n                </div>\r\n                <div class=\"detail\">\r\n                  <fa-icon [icon]=\"faMoneyBillWave\" class=\"icon\"></fa-icon>\r\n                  {{match.job.salary}}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"match-score\">\r\n                <div class=\"score\" [ngClass]=\"getScoreClass(match.matchScore)\">\r\n                  {{match.matchScore}}% Match\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"skills-section\">\r\n                <h3>Matching Skills</h3>\r\n                <div class=\"skills\">\r\n                  <mat-chip *ngFor=\"let skill of match.matchingSkills\" class=\"matching-skill\">\r\n                    <fa-icon [icon]=\"faCheckCircle\" class=\"icon\"></fa-icon>\r\n                    {{skill.name}}\r\n                  </mat-chip>\r\n                </div>\r\n\r\n                <h3>Missing Skills</h3>\r\n                <div class=\"skills\">\r\n                  <mat-chip *ngFor=\"let skill of match.missingSkills\" class=\"missing-skill\">\r\n                    <fa-icon [icon]=\"faTimesCircle\" class=\"icon\"></fa-icon>\r\n                    {{skill.name}}\r\n                  </mat-chip>\r\n                </div>\r\n              </div>\r\n\r\n              <p class=\"job-description\">{{match.job.description}}</p>\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions>\r\n              <button mat-raised-button color=\"primary\" (click)=\"applyForJob(match.job)\">\r\n                Apply Now\r\n              </button>\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .job-matching-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n      font-family: 'Poppins', sans-serif;\r\n    }\r\n\r\n    .loading-container, .error-container, .no-matches-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n      text-align: center;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .job-matches {\r\n      h2 {\r\n        margin: 0 0 8px 0;\r\n        color: #2c3e50;\r\n      }\r\n\r\n      .subtitle {\r\n        color: #666;\r\n        margin-bottom: 24px;\r\n      }\r\n    }\r\n\r\n    .job-cards {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\r\n      gap: 24px;\r\n    }\r\n\r\n    .job-card {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n    }\r\n\r\n    mat-card-header {\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    mat-card-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    mat-card-subtitle {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .job-details {\r\n      display: flex;\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .detail {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      color: #666;\r\n    }\r\n\r\n    .match-score {\r\n      margin-bottom: 16px;\r\n      \r\n      .score {\r\n        display: inline-block;\r\n        padding: 8px 16px;\r\n        border-radius: 20px;\r\n        font-weight: bold;\r\n        font-size: 1.1rem;\r\n\r\n        &.high {\r\n          background-color: #d4edda;\r\n          color: #155724;\r\n        }\r\n\r\n        &.medium {\r\n          background-color: #fff3cd;\r\n          color: #856404;\r\n        }\r\n\r\n        &.low {\r\n          background-color: #f8d7da;\r\n          color: #721c24;\r\n        }\r\n      }\r\n    }\r\n\r\n    .skills-section {\r\n      margin-bottom: 16px;\r\n\r\n      h3 {\r\n        margin: 16px 0 8px 0;\r\n        font-size: 1rem;\r\n        color: #2c3e50;\r\n      }\r\n\r\n      .skills {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 8px;\r\n      }\r\n    }\r\n\r\n    .matching-skill {\r\n      background-color: #d4edda;\r\n      color: #155724;\r\n    }\r\n\r\n    .missing-skill {\r\n      background-color: #f8d7da;\r\n      color: #721c24;\r\n    }\r\n\r\n    .job-description {\r\n      color: #666;\r\n      margin-bottom: 16px;\r\n      line-height: 1.5;\r\n    }\r\n\r\n    mat-card-actions {\r\n      margin-top: auto;\r\n      padding: 16px;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .icon {\r\n      margin-right: 4px;\r\n    }\r\n  `]\r\n})\r\nexport class JobMatchingComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faBriefcase = faBriefcase;\r\n  faBuilding = faBuilding;\r\n  faMapMarkerAlt = faMapMarkerAlt;\r\n  faMoneyBillWave = faMoneyBillWave;\r\n  faCheckCircle = faCheckCircle;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  jobMatches: JobMatch[] = [];\r\n  isLoading = true;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private jobService: JobService,\r\n    private skillService: SkillService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadJobMatches();\r\n  }\r\n\r\n  private loadJobMatches(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    const user = this.authService.getCurrentUser();\r\n    if (!user) {\r\n      this.error = 'Please log in to view job matches';\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    // Get user skills\r\n    this.skillService.getUserSkills(user.id).subscribe({\r\n      next: (userSkills) => {\r\n        // Get all jobs\r\n        this.jobService.getAllJobs().subscribe({\r\n          next: (jobs) => {\r\n            this.jobMatches = this.calculateJobMatches(jobs, userSkills);\r\n            this.isLoading = false;\r\n          },\r\n          error: (error) => {\r\n            console.error('Error loading jobs:', error);\r\n            this.error = 'Failed to load jobs. Please try again.';\r\n            this.isLoading = false;\r\n          }\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading user skills:', error);\r\n        this.error = 'Failed to load your skills. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private calculateJobMatches(jobs: Job[], userSkills: Skill[]): JobMatch[] {\r\n    return jobs.map(job => {\r\n      const requiredSkills = job.requiredSkills || [];\r\n      const matchingSkills = userSkills.filter(skill => \r\n        requiredSkills.some(required => required.id === skill.id)\r\n      );\r\n      const missingSkills = requiredSkills.filter(skill =>\r\n        !userSkills.some(userSkill => userSkill.id === skill.id)\r\n      );\r\n\r\n      const matchScore = requiredSkills.length > 0\r\n        ? Math.round((matchingSkills.length / requiredSkills.length) * 100)\r\n        : 0;\r\n\r\n      return {\r\n        job,\r\n        matchScore,\r\n        matchingSkills,\r\n        missingSkills\r\n      };\r\n    }).sort((a, b) => b.matchScore - a.matchScore); // Sort by match score descending\r\n  }\r\n\r\n  getScoreClass(score: number): string {\r\n    if (score >= 70) return 'high';\r\n    if (score >= 40) return 'medium';\r\n    return 'low';\r\n  }\r\n\r\n  applyForJob(job: Job): void {\r\n    const dialogRef = this.dialog.open(ApplicationFormComponent, {\r\n      width: '600px',\r\n      data: { job }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // Optionally refresh the job matches or show a success message\r\n        this.loadJobMatches();\r\n      }\r\n    });\r\n  }\r\n\r\n  goToProfileUpdate(): void {\r\n    this.router.navigate(['/job-seeker/profile-update']);\r\n  }\r\n\r\n  retryLoading(): void {\r\n    this.loadJobMatches();\r\n  }\r\n} ","import { Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, NgZone, Renderer2, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { b as RippleState, M as MatRipple, a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BT3tzh6F.mjs';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { M as MatRippleModule } from './index-SYVYjXwK.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/coercion';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2, 1)(2, \"div\", 5)(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nconst _c3 = [\"*\"];\nfunction MatSlider_Conditional_6_Conditional_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r1 = ctx.$implicit;\n    const ɵ$index_14_r2 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r1 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r2._calcTickMarkTransform(ɵ$index_14_r2));\n  }\n}\nfunction MatSlider_Conditional_6_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatSlider_Conditional_6_Conditional_2_For_1_Template, 1, 4, \"div\", 8, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵrepeater(ctx_r2._tickMarks);\n  }\n}\nfunction MatSlider_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6, 1);\n    i0.ɵɵtemplate(2, MatSlider_Conditional_6_Conditional_2_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r2._cachedWidth ? 2 : -1);\n  }\n}\nfunction MatSlider_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nvar _MatThumb;\n(function (_MatThumb) {\n  _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n  _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n})(_MatThumb || (_MatThumb = {}));\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark;\n(function (_MatTickMark) {\n  _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n})(_MatTickMark || (_MatTickMark = {}));\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n  /** The MatSliderThumb that was interacted with. */\n  source;\n  /** The MatSlider that was interacted with. */\n  parent;\n  /** The new value of the source slider. */\n  value;\n}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nclass MatSliderVisualThumb {\n  _cdr = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _slider = inject(MAT_SLIDER);\n  _renderer = inject(Renderer2);\n  _listenerCleanups;\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n  discrete;\n  /** Indicates which slider thumb this input corresponds to. */\n  thumbPosition;\n  /** The display value of the slider thumb. */\n  valueIndicatorText;\n  /** The MatRipple for this slider thumb. */\n  _ripple;\n  /** The slider thumb knob. */\n  _knob;\n  /** The slider thumb value indicator container. */\n  _valueIndicatorContainer;\n  /** The slider input corresponding to this slider thumb. */\n  _sliderInput;\n  /** The native html element of the slider input corresponding to this thumb. */\n  _sliderInputEl;\n  /** The RippleRef for the slider thumbs hover state. */\n  _hoverRippleRef;\n  /** The RippleRef for the slider thumbs focus state. */\n  _focusRippleRef;\n  /** The RippleRef for the slider thumbs active state. */\n  _activeRippleRef;\n  /** Whether the slider thumb is currently being hovered. */\n  _isHovered = false;\n  /** Whether the slider thumb is currently being pressed. */\n  _isActive = false;\n  /** Whether the value indicator tooltip is visible. */\n  _isValueIndicatorVisible = false;\n  /** The host native HTML input element. */\n  _hostElement = inject(ElementRef).nativeElement;\n  _platform = inject(Platform);\n  constructor() {}\n  ngAfterViewInit() {\n    const sliderInput = this._slider._getInput(this.thumbPosition);\n    // No-op if the slider isn't configured properly. `MatSlider` will\n    // throw an error instructing the user how to set up the slider.\n    if (!sliderInput) {\n      return;\n    }\n    this._ripple.radius = 24;\n    this._sliderInput = sliderInput;\n    this._sliderInputEl = this._sliderInput._hostElement;\n    // These listeners don't update any data bindings so we bind them outside\n    // of the NgZone to prevent Angular from needlessly running change detection.\n    this._ngZone.runOutsideAngular(() => {\n      const input = this._sliderInputEl;\n      const renderer = this._renderer;\n      this._listenerCleanups = [renderer.listen(input, 'pointermove', this._onPointerMove), renderer.listen(input, 'pointerdown', this._onDragStart), renderer.listen(input, 'pointerup', this._onDragEnd), renderer.listen(input, 'pointerleave', this._onMouseLeave), renderer.listen(input, 'focus', this._onFocus), renderer.listen(input, 'blur', this._onBlur)];\n    });\n  }\n  ngOnDestroy() {\n    this._listenerCleanups?.forEach(cleanup => cleanup());\n  }\n  _onPointerMove = event => {\n    if (this._sliderInput._isFocused) {\n      return;\n    }\n    const rect = this._hostElement.getBoundingClientRect();\n    const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n    this._isHovered = isHovered;\n    if (isHovered) {\n      this._showHoverRipple();\n    } else {\n      this._hideRipple(this._hoverRippleRef);\n    }\n  };\n  _onMouseLeave = () => {\n    this._isHovered = false;\n    this._hideRipple(this._hoverRippleRef);\n  };\n  _onFocus = () => {\n    // We don't want to show the hover ripple on top of the focus ripple.\n    // Happen when the users cursor is over a thumb and then the user tabs to it.\n    this._hideRipple(this._hoverRippleRef);\n    this._showFocusRipple();\n    this._hostElement.classList.add('mdc-slider__thumb--focused');\n  };\n  _onBlur = () => {\n    // Happens when the user tabs away while still dragging a thumb.\n    if (!this._isActive) {\n      this._hideRipple(this._focusRippleRef);\n    }\n    // Happens when the user tabs away from a thumb but their cursor is still over it.\n    if (this._isHovered) {\n      this._showHoverRipple();\n    }\n    this._hostElement.classList.remove('mdc-slider__thumb--focused');\n  };\n  _onDragStart = event => {\n    if (event.button !== 0) {\n      return;\n    }\n    this._isActive = true;\n    this._showActiveRipple();\n  };\n  _onDragEnd = () => {\n    this._isActive = false;\n    this._hideRipple(this._activeRippleRef);\n    // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n    if (!this._sliderInput._isFocused) {\n      this._hideRipple(this._focusRippleRef);\n    }\n    // On Safari we need to immediately re-show the hover ripple because\n    // sliders do not retain focus from pointer events on that platform.\n    if (this._platform.SAFARI) {\n      this._showHoverRipple();\n    }\n  };\n  /** Handles displaying the hover ripple. */\n  _showHoverRipple() {\n    if (!this._isShowingRipple(this._hoverRippleRef)) {\n      this._hoverRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      });\n      this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n    }\n  }\n  /** Handles displaying the focus ripple. */\n  _showFocusRipple() {\n    // Show the focus ripple event if noop animations are enabled.\n    if (!this._isShowingRipple(this._focusRippleRef)) {\n      this._focusRippleRef = this._showRipple({\n        enterDuration: 0,\n        exitDuration: 0\n      }, true);\n      this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n    }\n  }\n  /** Handles displaying the active ripple. */\n  _showActiveRipple() {\n    if (!this._isShowingRipple(this._activeRippleRef)) {\n      this._activeRippleRef = this._showRipple({\n        enterDuration: 225,\n        exitDuration: 400\n      });\n      this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n    }\n  }\n  /** Whether the given rippleRef is currently fading in or visible. */\n  _isShowingRipple(rippleRef) {\n    return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n  }\n  /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n  _showRipple(animation, ignoreGlobalRippleConfig) {\n    if (this._slider.disabled) {\n      return;\n    }\n    this._showValueIndicator();\n    if (this._slider._isRange) {\n      const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n      sibling._showValueIndicator();\n    }\n    if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n      return;\n    }\n    return this._ripple.launch({\n      animation: this._slider._noopAnimations ? {\n        enterDuration: 0,\n        exitDuration: 0\n      } : animation,\n      centered: true,\n      persistent: true\n    });\n  }\n  /**\n   * Fades out the given ripple.\n   * Also hides the value indicator if no ripple is showing.\n   */\n  _hideRipple(rippleRef) {\n    rippleRef?.fadeOut();\n    if (this._isShowingAnyRipple()) {\n      return;\n    }\n    if (!this._slider._isRange) {\n      this._hideValueIndicator();\n    }\n    const sibling = this._getSibling();\n    if (!sibling._isShowingAnyRipple()) {\n      this._hideValueIndicator();\n      sibling._hideValueIndicator();\n    }\n  }\n  /** Shows the value indicator ui. */\n  _showValueIndicator() {\n    this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n  }\n  /** Hides the value indicator ui. */\n  _hideValueIndicator() {\n    this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n  }\n  _getSibling() {\n    return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n  }\n  /** Gets the value indicator container's native HTML element. */\n  _getValueIndicatorContainer() {\n    return this._valueIndicatorContainer?.nativeElement;\n  }\n  /** Gets the native HTML element of the slider thumb knob. */\n  _getKnob() {\n    return this._knob.nativeElement;\n  }\n  _isShowingAnyRipple() {\n    return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n  }\n  static ɵfac = function MatSliderVisualThumb_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderVisualThumb)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSliderVisualThumb,\n    selectors: [[\"mat-slider-visual-thumb\"]],\n    viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatRipple, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n    inputs: {\n      discrete: \"discrete\",\n      thumbPosition: \"thumbPosition\",\n      valueIndicatorText: \"valueIndicatorText\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SLIDER_VISUAL_THUMB,\n      useExisting: MatSliderVisualThumb\n    }])],\n    decls: 4,\n    vars: 2,\n    consts: [[\"knob\", \"\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator-container\"], [1, \"mdc-slider__thumb-knob\"], [\"matRipple\", \"\", 1, \"mat-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n    template: function MatSliderVisualThumb_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MatSliderVisualThumb_Conditional_0_Template, 5, 1, \"div\", 2);\n        i0.ɵɵelement(1, \"div\", 3, 0)(3, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.discrete ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleDisabled\", true);\n      }\n    },\n    dependencies: [MatRipple],\n    styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderVisualThumb, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider-visual-thumb',\n      host: {\n        'class': 'mdc-slider__thumb mat-mdc-slider-visual-thumb'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }],\n      imports: [MatRipple],\n      template: \"@if (discrete) {\\n  <div class=\\\"mdc-slider__value-indicator-container\\\" #valueIndicatorContainer>\\n    <div class=\\\"mdc-slider__value-indicator\\\">\\n      <span class=\\\"mdc-slider__value-indicator-text\\\">{{valueIndicatorText}}</span>\\n    </div>\\n  </div>\\n}\\n<div class=\\\"mdc-slider__thumb-knob\\\" #knob></div>\\n<div matRipple class=\\\"mat-focus-indicator\\\" [matRippleDisabled]=\\\"true\\\"></div>\\n\",\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\\n\"]\n    }]\n  }], () => [], {\n    discrete: [{\n      type: Input\n    }],\n    thumbPosition: [{\n      type: Input\n    }],\n    valueIndicatorText: [{\n      type: Input\n    }],\n    _ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    _knob: [{\n      type: ViewChild,\n      args: ['knob']\n    }],\n    _valueIndicatorContainer: [{\n      type: ViewChild,\n      args: ['valueIndicatorContainer']\n    }]\n  });\n})();\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider {\n  _ngZone = inject(NgZone);\n  _cdr = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n    optional: true\n  });\n  /** The active portion of the slider track. */\n  _trackActive;\n  /** The slider thumb(s). */\n  _thumbs;\n  /** The sliders hidden range input(s). */\n  _input;\n  /** The sliders hidden range input(s). */\n  _inputs;\n  /** Whether the slider is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(v) {\n    this._disabled = v;\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    if (endInput) {\n      endInput.disabled = this._disabled;\n    }\n    if (startInput) {\n      startInput.disabled = this._disabled;\n    }\n  }\n  _disabled = false;\n  /** Whether the slider displays a numeric value label upon pressing the thumb. */\n  get discrete() {\n    return this._discrete;\n  }\n  set discrete(v) {\n    this._discrete = v;\n    this._updateValueIndicatorUIs();\n  }\n  _discrete = false;\n  /** Whether the slider displays tick marks along the slider track. */\n  showTickMarks = false;\n  /** The minimum value that the slider can have. */\n  get min() {\n    return this._min;\n  }\n  set min(v) {\n    const min = isNaN(v) ? this._min : v;\n    if (this._min !== min) {\n      this._updateMin(min);\n    }\n  }\n  _min = 0;\n  /**\n   * Theme color of the slider. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/slider/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether ripples are disabled in the slider. */\n  disableRipple = false;\n  _updateMin(min) {\n    const prevMin = this._min;\n    this._min = min;\n    this._isRange ? this._updateMinRange({\n      old: prevMin,\n      new: min\n    }) : this._updateMinNonRange(min);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMinRange(min) {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    startInput.min = min.new;\n    endInput.min = Math.max(min.new, startInput.value);\n    startInput.max = Math.min(endInput.max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMinNonRange(min) {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.min = min;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The maximum value that the slider can have. */\n  get max() {\n    return this._max;\n  }\n  set max(v) {\n    const max = isNaN(v) ? this._max : v;\n    if (this._max !== max) {\n      this._updateMax(max);\n    }\n  }\n  _max = 100;\n  _updateMax(max) {\n    const prevMax = this._max;\n    this._max = max;\n    this._isRange ? this._updateMaxRange({\n      old: prevMax,\n      new: max\n    }) : this._updateMaxNonRange(max);\n    this._onMinMaxOrStepChange();\n  }\n  _updateMaxRange(max) {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    endInput.max = max.new;\n    startInput.max = Math.min(max.new, endInput.value);\n    endInput.min = startInput.value;\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateMaxNonRange(max) {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.max = max;\n      input._updateThumbUIByValue();\n      this._updateTrackUI(input);\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /** The values at which the thumb will snap. */\n  get step() {\n    return this._step;\n  }\n  set step(v) {\n    const step = isNaN(v) ? this._step : v;\n    if (this._step !== step) {\n      this._updateStep(step);\n    }\n  }\n  _step = 1;\n  _updateStep(step) {\n    this._step = step;\n    this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n    this._onMinMaxOrStepChange();\n  }\n  _updateStepRange() {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    const oldEndValue = endInput.value;\n    const oldStartValue = startInput.value;\n    const prevStartValue = startInput.value;\n    endInput.min = this._min;\n    startInput.max = this._max;\n    endInput.step = this._step;\n    startInput.step = this._step;\n    if (this._platform.SAFARI) {\n      endInput.value = endInput.value;\n      startInput.value = startInput.value;\n    }\n    endInput.min = Math.max(this._min, startInput.value);\n    startInput.max = Math.min(this._max, endInput.value);\n    startInput._updateWidthInactive();\n    endInput._updateWidthInactive();\n    endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n    if (oldEndValue !== endInput.value) {\n      this._onValueChange(endInput);\n    }\n    if (oldStartValue !== startInput.value) {\n      this._onValueChange(startInput);\n    }\n  }\n  _updateStepNonRange() {\n    const input = this._getInput(_MatThumb.END);\n    if (input) {\n      const oldValue = input.value;\n      input.step = this._step;\n      if (this._platform.SAFARI) {\n        input.value = input.value;\n      }\n      input._updateThumbUIByValue();\n      if (oldValue !== input.value) {\n        this._onValueChange(input);\n      }\n    }\n  }\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  displayWith = value => `${value}`;\n  /** Used to keep track of & render the active & inactive tick marks on the slider track. */\n  _tickMarks;\n  /** Whether animations have been disabled. */\n  _noopAnimations;\n  /** Subscription to changes to the directionality (LTR / RTL) context for the application. */\n  _dirChangeSubscription;\n  /** Observer used to monitor size changes in the slider. */\n  _resizeObserver;\n  // Stored dimensions to avoid calling getBoundingClientRect redundantly.\n  _cachedWidth;\n  _cachedLeft;\n  _rippleRadius = 24;\n  // The value indicator tooltip text for the visual slider thumb(s).\n  /** @docs-private */\n  startValueIndicatorText = '';\n  /** @docs-private */\n  endValueIndicatorText = '';\n  // Used to control the translateX of the visual slider thumb(s).\n  _endThumbTransform;\n  _startThumbTransform;\n  _isRange = false;\n  /** Whether the slider is rtl. */\n  _isRtl = false;\n  _hasViewInitialized = false;\n  /**\n   * The width of the tick mark track.\n   * The tick mark track width is different from full track width\n   */\n  _tickMarkTrackWidth = 0;\n  _hasAnimation = false;\n  _resizeTimer = null;\n  _platform = inject(Platform);\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n      this._isRtl = this._dir.value === 'rtl';\n    }\n  }\n  /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n  _knobRadius = 8;\n  _inputPadding;\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._updateDimensions();\n    }\n    const eInput = this._getInput(_MatThumb.END);\n    const sInput = this._getInput(_MatThumb.START);\n    this._isRange = !!eInput && !!sInput;\n    this._cdr.detectChanges();\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n    }\n    const thumb = this._getThumb(_MatThumb.END);\n    this._rippleRadius = thumb._ripple.radius;\n    this._inputPadding = this._rippleRadius - this._knobRadius;\n    this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n    this._updateTrackUI(eInput);\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._observeHostResize();\n    this._cdr.detectChanges();\n  }\n  _initUINonRange(eInput) {\n    eInput.initProps();\n    eInput.initUI();\n    this._updateValueIndicatorUI(eInput);\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n  }\n  _initUIRange(eInput, sInput) {\n    eInput.initProps();\n    eInput.initUI();\n    sInput.initProps();\n    sInput.initUI();\n    eInput._updateMinMax();\n    sInput._updateMinMax();\n    eInput._updateStaticStyles();\n    sInput._updateStaticStyles();\n    this._updateValueIndicatorUIs();\n    this._hasViewInitialized = true;\n    eInput._updateThumbUIByValue();\n    sInput._updateThumbUIByValue();\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = null;\n  }\n  /** Handles updating the slider ui after a dir change. */\n  _onDirChange() {\n    this._isRtl = this._dir?.value === 'rtl';\n    this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n    this._updateTickMarkUI();\n  }\n  _onDirChangeRange() {\n    const endInput = this._getInput(_MatThumb.END);\n    const startInput = this._getInput(_MatThumb.START);\n    endInput._setIsLeftThumb();\n    startInput._setIsLeftThumb();\n    endInput.translateX = endInput._calcTranslateXByValue();\n    startInput.translateX = startInput._calcTranslateXByValue();\n    endInput._updateStaticStyles();\n    startInput._updateStaticStyles();\n    endInput._updateWidthInactive();\n    startInput._updateWidthInactive();\n    endInput._updateThumbUIByValue();\n    startInput._updateThumbUIByValue();\n  }\n  _onDirChangeNonRange() {\n    const input = this._getInput(_MatThumb.END);\n    input._updateThumbUIByValue();\n  }\n  /** Starts observing and updating the slider if the host changes its size. */\n  _observeHostResize() {\n    if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n      return;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeObserver = new ResizeObserver(() => {\n        if (this._isActive()) {\n          return;\n        }\n        if (this._resizeTimer) {\n          clearTimeout(this._resizeTimer);\n        }\n        this._onResize();\n      });\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    });\n  }\n  /** Whether any of the thumbs are currently active. */\n  _isActive() {\n    return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n  }\n  _getValue(thumbPosition = _MatThumb.END) {\n    const input = this._getInput(thumbPosition);\n    if (!input) {\n      return this.min;\n    }\n    return input.value;\n  }\n  _skipUpdate() {\n    return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n  }\n  /** Stores the slider dimensions. */\n  _updateDimensions() {\n    this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n    this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n  }\n  /** Sets the styles for the active portion of the track. */\n  _setTrackActiveStyles(styles) {\n    const trackStyle = this._trackActive.nativeElement.style;\n    trackStyle.left = styles.left;\n    trackStyle.right = styles.right;\n    trackStyle.transformOrigin = styles.transformOrigin;\n    trackStyle.transform = styles.transform;\n  }\n  /** Returns the translateX positioning for a tick mark based on it's index. */\n  _calcTickMarkTransform(index) {\n    // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n    const offset = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n    const translateX = this._isRtl ? this._cachedWidth - 6 - offset : offset;\n    return `translateX(${translateX}px`;\n  }\n  // Handlers for updating the slider ui.\n  _onTranslateXChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateThumbUI(source);\n    this._updateTrackUI(source);\n    this._updateOverlappingThumbUI(source);\n  }\n  _onTranslateXChangeBySideEffect(input1, input2) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    input1._updateThumbUIByValue();\n    input2._updateThumbUIByValue();\n  }\n  _onValueChange(source) {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateValueIndicatorUI(source);\n    this._updateTickMarkUI();\n    this._cdr.detectChanges();\n  }\n  _onMinMaxOrStepChange() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.markForCheck();\n  }\n  _onResize() {\n    if (!this._hasViewInitialized) {\n      return;\n    }\n    this._updateDimensions();\n    if (this._isRange) {\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateWidthInactive();\n      sInput._updateWidthInactive();\n    } else {\n      const eInput = this._getInput(_MatThumb.END);\n      if (eInput) {\n        eInput._updateThumbUIByValue();\n      }\n    }\n    this._updateTickMarkUI();\n    this._updateTickMarkTrackUI();\n    this._cdr.detectChanges();\n  }\n  /** Whether or not the slider thumbs overlap. */\n  _thumbsOverlap = false;\n  /** Returns true if the slider knobs are overlapping one another. */\n  _areThumbsOverlapping() {\n    const startInput = this._getInput(_MatThumb.START);\n    const endInput = this._getInput(_MatThumb.END);\n    if (!startInput || !endInput) {\n      return false;\n    }\n    return endInput.translateX - startInput.translateX < 20;\n  }\n  /**\n   * Updates the class names of overlapping slider thumbs so\n   * that the current active thumb is styled to be on \"top\".\n   */\n  _updateOverlappingThumbClassNames(source) {\n    const sibling = source.getSibling();\n    const sourceThumb = this._getThumb(source.thumbPosition);\n    const siblingThumb = this._getThumb(sibling.thumbPosition);\n    siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n    sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n  }\n  /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n  _updateOverlappingThumbUI(source) {\n    if (!this._isRange || this._skipUpdate()) {\n      return;\n    }\n    if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n      this._thumbsOverlap = !this._thumbsOverlap;\n      this._updateOverlappingThumbClassNames(source);\n    }\n  }\n  // _MatThumb styles update conditions\n  //\n  // 1. TranslateX, resize, or dir change\n  //    - Reason: The thumb styles need to be updated according to the new translateX.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the translateX of the given thumb. */\n  _updateThumbUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n    thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n  }\n  // Value indicator text update conditions\n  //\n  // 1. Value\n  //    - Reason: The value displayed needs to be updated.\n  // 2. Min, max, or step\n  //    - Reason: The value may have silently changed.\n  /** Updates the value indicator tooltip ui for the given thumb. */\n  _updateValueIndicatorUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    const valuetext = this.displayWith(source.value);\n    this._hasViewInitialized ? source._valuetext.set(valuetext) : source._hostElement.setAttribute('aria-valuetext', valuetext);\n    if (this.discrete) {\n      source.thumbPosition === _MatThumb.START ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n      const visualThumb = this._getThumb(source.thumbPosition);\n      valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n    }\n  }\n  /** Updates all value indicator UIs in the slider. */\n  _updateValueIndicatorUIs() {\n    const eInput = this._getInput(_MatThumb.END);\n    const sInput = this._getInput(_MatThumb.START);\n    if (eInput) {\n      this._updateValueIndicatorUI(eInput);\n    }\n    if (sInput) {\n      this._updateValueIndicatorUI(sInput);\n    }\n  }\n  // Update Tick Mark Track Width\n  //\n  // 1. Min, max, or step\n  //    - Reason: The maximum reachable value may have changed.\n  //    - Side note: The maximum reachable value is different from the maximum value set by the\n  //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n  //      reachable value of 95.\n  // 2. Resize\n  //    - Reason: The position for the maximum reachable value needs to be recalculated.\n  /** Updates the width of the tick mark track. */\n  _updateTickMarkTrackUI() {\n    if (!this.showTickMarks || this._skipUpdate()) {\n      return;\n    }\n    const step = this._step && this._step > 0 ? this._step : 1;\n    const maxValue = Math.floor(this.max / step) * step;\n    const percentage = (maxValue - this.min) / (this.max - this.min);\n    this._tickMarkTrackWidth = (this._cachedWidth - 6) * percentage;\n  }\n  // Track active update conditions\n  //\n  // 1. TranslateX\n  //    - Reason: The track active should line up with the new thumb position.\n  // 2. Min or max\n  //    - Reason #1: The 'active' percentage needs to be recalculated.\n  //    - Reason #2: The value may have silently changed.\n  // 3. Step\n  //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n  // 4. Dir change\n  //    - Reason: The track active will need to be updated according to the new thumb position(s).\n  // 5. Resize\n  //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n  /** Updates the scale on the active portion of the track. */\n  _updateTrackUI(source) {\n    if (this._skipUpdate()) {\n      return;\n    }\n    this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n  }\n  _updateTrackUIRange(source) {\n    const sibling = source.getSibling();\n    if (!sibling || !this._cachedWidth) {\n      return;\n    }\n    const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n    if (source._isLeftThumb && this._cachedWidth) {\n      this._setTrackActiveStyles({\n        left: 'auto',\n        right: `${this._cachedWidth - sibling.translateX}px`,\n        transformOrigin: 'right',\n        transform: `scaleX(${activePercentage})`\n      });\n    } else {\n      this._setTrackActiveStyles({\n        left: `${sibling.translateX}px`,\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${activePercentage})`\n      });\n    }\n  }\n  _updateTrackUINonRange(source) {\n    this._isRtl ? this._setTrackActiveStyles({\n      left: 'auto',\n      right: '0px',\n      transformOrigin: 'right',\n      transform: `scaleX(${1 - source.fillPercentage})`\n    }) : this._setTrackActiveStyles({\n      left: '0px',\n      right: 'auto',\n      transformOrigin: 'left',\n      transform: `scaleX(${source.fillPercentage})`\n    });\n  }\n  // Tick mark update conditions\n  //\n  // 1. Value\n  //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n  // 2. Min, max, or step\n  //    - Reason #1: the number of tick marks may have changed.\n  //    - Reason #2: The value may have silently changed.\n  /** Updates the dots along the slider track. */\n  _updateTickMarkUI() {\n    if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n      return;\n    }\n    const step = this.step > 0 ? this.step : 1;\n    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n  }\n  _updateTickMarkUINonRange(step) {\n    const value = this._getValue();\n    let numActive = Math.max(Math.round((value - this.min) / step), 0) + 1;\n    let numInactive = Math.max(Math.round((this.max - value) / step), 0) - 1;\n    this._isRtl ? numActive++ : numInactive++;\n    this._tickMarks = Array(numActive).fill(_MatTickMark.ACTIVE).concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n  }\n  _updateTickMarkUIRange(step) {\n    const endValue = this._getValue();\n    const startValue = this._getValue(_MatThumb.START);\n    const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n    const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n    const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n    this._tickMarks = Array(numInactiveBeforeStartThumb).fill(_MatTickMark.INACTIVE).concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n  }\n  /** Gets the slider thumb input of the given thumb position. */\n  _getInput(thumbPosition) {\n    if (thumbPosition === _MatThumb.END && this._input) {\n      return this._input;\n    }\n    if (this._inputs?.length) {\n      return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n    }\n    return;\n  }\n  /** Gets the slider thumb HTML input element of the given thumb position. */\n  _getThumb(thumbPosition) {\n    return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n  }\n  _setTransition(withAnimation) {\n    this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n    this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n  }\n  /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n  _isCursorOnSliderThumb(event, rect) {\n    const radius = rect.width / 2;\n    const centerX = rect.x + radius;\n    const centerY = rect.y + radius;\n    const dx = event.clientX - centerX;\n    const dy = event.clientY - centerY;\n    return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n  }\n  static ɵfac = function MatSlider_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSlider)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSlider,\n    selectors: [[\"mat-slider\"]],\n    contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n      }\n    },\n    viewQuery: function MatSlider_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n    hostVars: 12,\n    hostBindings: function MatSlider_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      discrete: [2, \"discrete\", \"discrete\", booleanAttribute],\n      showTickMarks: [2, \"showTickMarks\", \"showTickMarks\", booleanAttribute],\n      min: [2, \"min\", \"min\", numberAttribute],\n      color: \"color\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      max: [2, \"max\", \"max\", numberAttribute],\n      step: [2, \"step\", \"step\", numberAttribute],\n      displayWith: \"displayWith\"\n    },\n    exportAs: [\"matSlider\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SLIDER,\n      useExisting: MatSlider\n    }])],\n    ngContentSelectors: _c3,\n    decls: 9,\n    vars: 5,\n    consts: [[\"trackActive\", \"\"], [\"tickMarkContainer\", \"\"], [1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [1, \"mdc-slider__tick-marks\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [3, \"class\", \"transform\"]],\n    template: function MatSlider_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"div\", 2);\n        i0.ɵɵelement(2, \"div\", 3);\n        i0.ɵɵelementStart(3, \"div\", 4);\n        i0.ɵɵelement(4, \"div\", 5, 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, MatSlider_Conditional_6_Template, 3, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, MatSlider_Conditional_7_Template, 1, 3, \"mat-slider-visual-thumb\", 7);\n        i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵconditional(ctx.showTickMarks ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._isRange ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n      }\n    },\n    dependencies: [MatSliderVisualThumb],\n    styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mdc-slider-active-track-height, 4px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mdc-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mdc-slider-inactive-track-height, 4px);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mdc-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-width:calc(var(--mdc-slider-handle-height, 20px)/2) calc(var(--mdc-slider-handle-width, 20px)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size, 2px);height:var(--mdc-slider-with-tick-marks-container-size, 2px);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      host: {\n        'class': 'mat-mdc-slider mdc-slider',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-slider--range]': '_isRange',\n        '[class.mdc-slider--disabled]': 'disabled',\n        '[class.mdc-slider--discrete]': 'discrete',\n        '[class.mdc-slider--tick-marks]': 'showTickMarks',\n        '[class._mat-animation-noopable]': '_noopAnimations'\n      },\n      exportAs: 'matSlider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }],\n      imports: [MatSliderVisualThumb],\n      template: \"<!-- Inputs -->\\n<ng-content></ng-content>\\n\\n<!-- Track -->\\n<div class=\\\"mdc-slider__track\\\">\\n  <div class=\\\"mdc-slider__track--inactive\\\"></div>\\n  <div class=\\\"mdc-slider__track--active\\\">\\n    <div #trackActive class=\\\"mdc-slider__track--active_fill\\\"></div>\\n  </div>\\n  @if (showTickMarks) {\\n    <div class=\\\"mdc-slider__tick-marks\\\" #tickMarkContainer>\\n      @if (_cachedWidth) {\\n        @for (tickMark of _tickMarks; track i; let i = $index) {\\n          <div\\n            [class]=\\\"tickMark === 0 ? 'mdc-slider__tick-mark--active' : 'mdc-slider__tick-mark--inactive'\\\"\\n            [style.transform]=\\\"_calcTickMarkTransform(i)\\\"></div>\\n        }\\n      }\\n    </div>\\n  }\\n</div>\\n\\n<!-- Thumbs -->\\n@if (_isRange) {\\n  <mat-slider-visual-thumb\\n    [discrete]=\\\"discrete\\\"\\n    [thumbPosition]=\\\"1\\\"\\n    [valueIndicatorText]=\\\"startValueIndicatorText\\\">\\n  </mat-slider-visual-thumb>\\n}\\n\\n<mat-slider-visual-thumb\\n  [discrete]=\\\"discrete\\\"\\n  [thumbPosition]=\\\"2\\\"\\n  [valueIndicatorText]=\\\"endValueIndicatorText\\\">\\n</mat-slider-visual-thumb>\\n\",\n      styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mdc-slider-active-track-height, 4px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mdc-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mdc-slider-inactive-track-height, 4px);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mdc-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-width:calc(var(--mdc-slider-handle-height, 20px)/2) calc(var(--mdc-slider-handle-width, 20px)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size, 2px);height:var(--mdc-slider-with-tick-marks-container-size, 2px);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    _trackActive: [{\n      type: ViewChild,\n      args: ['trackActive']\n    }],\n    _thumbs: [{\n      type: ViewChildren,\n      args: [MAT_SLIDER_VISUAL_THUMB]\n    }],\n    _input: [{\n      type: ContentChild,\n      args: [MAT_SLIDER_THUMB]\n    }],\n    _inputs: [{\n      type: ContentChildren,\n      args: [MAT_SLIDER_RANGE_THUMB, {\n        descendants: false\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    discrete: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showTickMarks: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    min: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    max: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    displayWith: [{\n      type: Input\n    }]\n  });\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nclass MatSliderThumb {\n  _ngZone = inject(NgZone);\n  _elementRef = inject(ElementRef);\n  _cdr = inject(ChangeDetectorRef);\n  _slider = inject(MAT_SLIDER);\n  _platform = inject(Platform);\n  _listenerCleanups;\n  get value() {\n    return numberAttribute(this._hostElement.value, 0);\n  }\n  set value(value) {\n    value = isNaN(value) ? 0 : value;\n    const stringValue = value + '';\n    if (!this._hasSetInitialValue) {\n      this._initialValue = stringValue;\n      return;\n    }\n    if (this._isActive) {\n      return;\n    }\n    this._setValue(stringValue);\n  }\n  /**\n   * Handles programmatic value setting. This has been split out to\n   * allow the range thumb to override it and add additional necessary logic.\n   */\n  _setValue(value) {\n    this._hostElement.value = value;\n    this._updateThumbUIByValue();\n    this._slider._onValueChange(this);\n    this._cdr.detectChanges();\n    this._slider._cdr.markForCheck();\n  }\n  /** Event emitted when the `value` is changed. */\n  valueChange = new EventEmitter();\n  /** Event emitted when the slider thumb starts being dragged. */\n  dragStart = new EventEmitter();\n  /** Event emitted when the slider thumb stops being dragged. */\n  dragEnd = new EventEmitter();\n  /**\n   * The current translateX in px of the slider visual thumb.\n   * @docs-private\n   */\n  get translateX() {\n    if (this._slider.min >= this._slider.max) {\n      this._translateX = this._tickMarkOffset;\n      return this._translateX;\n    }\n    if (this._translateX === undefined) {\n      this._translateX = this._calcTranslateXByValue();\n    }\n    return this._translateX;\n  }\n  set translateX(v) {\n    this._translateX = v;\n  }\n  _translateX;\n  /**\n   * Indicates whether this thumb is the start or end thumb.\n   * @docs-private\n   */\n  thumbPosition = _MatThumb.END;\n  /** @docs-private */\n  get min() {\n    return numberAttribute(this._hostElement.min, 0);\n  }\n  set min(v) {\n    this._hostElement.min = v + '';\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get max() {\n    return numberAttribute(this._hostElement.max, 0);\n  }\n  set max(v) {\n    this._hostElement.max = v + '';\n    this._cdr.detectChanges();\n  }\n  get step() {\n    return numberAttribute(this._hostElement.step, 0);\n  }\n  set step(v) {\n    this._hostElement.step = v + '';\n    this._cdr.detectChanges();\n  }\n  /** @docs-private */\n  get disabled() {\n    return booleanAttribute(this._hostElement.disabled);\n  }\n  set disabled(v) {\n    this._hostElement.disabled = v;\n    this._cdr.detectChanges();\n    if (this._slider.disabled !== this.disabled) {\n      this._slider.disabled = this.disabled;\n    }\n  }\n  /** The percentage of the slider that coincides with the value. */\n  get percentage() {\n    if (this._slider.min >= this._slider.max) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n  }\n  /** @docs-private */\n  get fillPercentage() {\n    if (!this._slider._cachedWidth) {\n      return this._slider._isRtl ? 1 : 0;\n    }\n    if (this._translateX === 0) {\n      return 0;\n    }\n    return this.translateX / this._slider._cachedWidth;\n  }\n  /** The host native HTML input element. */\n  _hostElement = this._elementRef.nativeElement;\n  /** The aria-valuetext string representation of the input's value. */\n  _valuetext = signal('');\n  /** The radius of a native html slider's knob. */\n  _knobRadius = 8;\n  /** The distance in px from the start of the slider track to the first tick mark. */\n  _tickMarkOffset = 3;\n  /** Whether user's cursor is currently in a mouse down state on the input. */\n  _isActive = false;\n  /** Whether the input is currently focused (either by tab or after clicking). */\n  _isFocused = false;\n  /** Used to relay updates to _isFocused to the slider visual thumbs. */\n  _setIsFocused(v) {\n    this._isFocused = v;\n  }\n  /**\n   * Whether the initial value has been set.\n   * This exists because the initial value cannot be immediately set because the min and max\n   * must first be relayed from the parent MatSlider component, which can only happen later\n   * in the component lifecycle.\n   */\n  _hasSetInitialValue = false;\n  /** The stored initial value. */\n  _initialValue;\n  /** Defined when a user is using a form control to manage slider value & validation. */\n  _formControl;\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /**\n   * Indicates whether UI updates should be skipped.\n   *\n   * This flag is used to avoid flickering\n   * when correcting values on pointer up/down.\n   */\n  _skipUIUpdate = false;\n  /** Callback called when the slider input value changes. */\n  _onChangeFn;\n  /** Callback called when the slider input has been touched. */\n  _onTouchedFn = () => {};\n  /**\n   * Whether the NgModel has been initialized.\n   *\n   * This flag is used to ignore ghost null calls to\n   * writeValue which can break slider initialization.\n   *\n   * See https://github.com/angular/angular/issues/14988.\n   */\n  _isControlInitialized = false;\n  constructor() {\n    const renderer = inject(Renderer2);\n    this._ngZone.runOutsideAngular(() => {\n      this._listenerCleanups = [renderer.listen(this._hostElement, 'pointerdown', this._onPointerDown.bind(this)), renderer.listen(this._hostElement, 'pointermove', this._onPointerMove.bind(this)), renderer.listen(this._hostElement, 'pointerup', this._onPointerUp.bind(this))];\n    });\n  }\n  ngOnDestroy() {\n    this._listenerCleanups.forEach(cleanup => cleanup());\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.dragStart.complete();\n    this.dragEnd.complete();\n  }\n  /** @docs-private */\n  initProps() {\n    this._updateWidthInactive();\n    // If this or the parent slider is disabled, just make everything disabled.\n    if (this.disabled !== this._slider.disabled) {\n      // The MatSlider setter for disabled will relay this and disable both inputs.\n      this._slider.disabled = true;\n    }\n    this.step = this._slider.step;\n    this.min = this._slider.min;\n    this.max = this._slider.max;\n    this._initValue();\n  }\n  /** @docs-private */\n  initUI() {\n    this._updateThumbUIByValue();\n  }\n  _initValue() {\n    this._hasSetInitialValue = true;\n    if (this._initialValue === undefined) {\n      this.value = this._getDefaultValue();\n    } else {\n      this._hostElement.value = this._initialValue;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n    }\n  }\n  _getDefaultValue() {\n    return this.min;\n  }\n  _onBlur() {\n    this._setIsFocused(false);\n    this._onTouchedFn();\n  }\n  _onFocus() {\n    this._slider._setTransition(false);\n    this._slider._updateTrackUI(this);\n    this._setIsFocused(true);\n  }\n  _onChange() {\n    this.valueChange.emit(this.value);\n    // only used to handle the edge case where user\n    // mousedown on the slider then uses arrow keys.\n    if (this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n  }\n  _onInput() {\n    this._onChangeFn?.(this.value);\n    // handles arrowing and updating the value when\n    // a step is defined.\n    if (this._slider.step || !this._isActive) {\n      this._updateThumbUIByValue({\n        withAnimation: true\n      });\n    }\n    this._slider._onValueChange(this);\n  }\n  _onNgControlValueChange() {\n    // only used to handle when the value change\n    // originates outside of the slider.\n    if (!this._isActive || !this._isFocused) {\n      this._slider._onValueChange(this);\n      this._updateThumbUIByValue();\n    }\n    this._slider.disabled = this._formControl.disabled;\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    // On IOS, dragging only works if the pointer down happens on the\n    // slider thumb and the slider does not receive focus from pointer events.\n    if (this._platform.IOS) {\n      const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n      this._isActive = isCursorOnSliderThumb;\n      this._updateWidthActive();\n      this._slider._updateDimensions();\n      return;\n    }\n    this._isActive = true;\n    this._setIsFocused(true);\n    this._updateWidthActive();\n    this._slider._updateDimensions();\n    // Does nothing if a step is defined because we\n    // want the value to snap to the values on input.\n    if (!this._slider.step) {\n      this._updateThumbUIByPointerEvent(event, {\n        withAnimation: true\n      });\n    }\n    if (!this.disabled) {\n      this._handleValueCorrection(event);\n      this.dragStart.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n    }\n  }\n  /**\n   * Corrects the value of the slider on pointer up/down.\n   *\n   * Called on pointer down and up because the value is set based\n   * on the inactive width instead of the active width.\n   */\n  _handleValueCorrection(event) {\n    // Don't update the UI with the current value! The value on pointerdown\n    // and pointerup is calculated in the split second before the input(s)\n    // resize. See _updateWidthInactive() and _updateWidthActive() for more\n    // details.\n    this._skipUIUpdate = true;\n    // Note that this function gets triggered before the actual value of the\n    // slider is updated. This means if we were to set the value here, it\n    // would immediately be overwritten. Using setTimeout ensures the setting\n    // of the value happens after the value has been updated by the\n    // pointerdown event.\n    setTimeout(() => {\n      this._skipUIUpdate = false;\n      this._fixValue(event);\n    }, 0);\n  }\n  /** Corrects the value of the slider based on the pointer event's position. */\n  _fixValue(event) {\n    const xPos = event.clientX - this._slider._cachedLeft;\n    const width = this._slider._cachedWidth;\n    const step = this._slider.step === 0 ? 1 : this._slider.step;\n    const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n    const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n    // To ensure the percentage is rounded to the necessary number of decimals.\n    const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n    const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n    const value = Math.round(impreciseValue / step) * step;\n    const prevValue = this.value;\n    if (value === prevValue) {\n      // Because we prevented UI updates, if it turns out that the race\n      // condition didn't happen and the value is already correct, we\n      // have to apply the ui updates now.\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n      return;\n    }\n    this.value = value;\n    this.valueChange.emit(this.value);\n    this._onChangeFn?.(this.value);\n    this._slider._onValueChange(this);\n    this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n      withAnimation: this._slider._hasAnimation\n    });\n  }\n  _onPointerMove(event) {\n    // Again, does nothing if a step is defined because\n    // we want the value to snap to the values on input.\n    if (!this._slider.step && this._isActive) {\n      this._updateThumbUIByPointerEvent(event);\n    }\n  }\n  _onPointerUp() {\n    if (this._isActive) {\n      this._isActive = false;\n      if (this._platform.SAFARI) {\n        this._setIsFocused(false);\n      }\n      this.dragEnd.emit({\n        source: this,\n        parent: this._slider,\n        value: this.value\n      });\n      // This setTimeout is to prevent the pointerup from triggering a value\n      // change on the input based on the inactive width. It's not clear why\n      // but for some reason on IOS this race condition is even more common so\n      // the timeout needs to be increased.\n      setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n    }\n  }\n  _clamp(v) {\n    const min = this._tickMarkOffset;\n    const max = this._slider._cachedWidth - this._tickMarkOffset;\n    return Math.max(Math.min(v, max), min);\n  }\n  _calcTranslateXByValue() {\n    if (this._slider._isRtl) {\n      return (1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n    }\n    return this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n  }\n  _calcTranslateXByPointerEvent(event) {\n    return event.clientX - this._slider._cachedLeft;\n  }\n  /**\n   * Used to set the slider width to the correct\n   * dimensions while the user is dragging.\n   */\n  _updateWidthActive() {}\n  /**\n   * Sets the slider input to disproportionate dimensions to allow for touch\n   * events to be captured on touch devices.\n   */\n  _updateWidthInactive() {\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n    this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n  }\n  _updateThumbUIByValue(options) {\n    this.translateX = this._clamp(this._calcTranslateXByValue());\n    this._updateThumbUI(options);\n  }\n  _updateThumbUIByPointerEvent(event, options) {\n    this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n    this._updateThumbUI(options);\n  }\n  _updateThumbUI(options) {\n    this._slider._setTransition(!!options?.withAnimation);\n    this._slider._onTranslateXChange(this);\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n    }\n  }\n  /**\n   * Registers a callback to be invoked when the input's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChangeFn = fn;\n    this._isControlInitialized = true;\n  }\n  /**\n   * Registers a callback to be invoked when the input is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouchedFn = fn;\n  }\n  /**\n   * Sets the disabled state of the slider.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  focus() {\n    this._hostElement.focus();\n  }\n  blur() {\n    this._hostElement.blur();\n  }\n  static ɵfac = function MatSliderThumb_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderThumb)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSliderThumb,\n    selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n    hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n    hostVars: 1,\n    hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n          return ctx._onChange();\n        })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n          return ctx._onInput();\n        })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n          return ctx._onFocus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext());\n      }\n    },\n    inputs: {\n      value: [2, \"value\", \"value\", numberAttribute]\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      dragStart: \"dragStart\",\n      dragEnd: \"dragEnd\"\n    },\n    exportAs: [\"matSliderThumb\"],\n    features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n      provide: MAT_SLIDER_THUMB,\n      useExisting: MatSliderThumb\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderThumb]',\n      exportAs: 'matSliderThumb',\n      host: {\n        'class': 'mdc-slider__input',\n        'type': 'range',\n        '[attr.aria-valuetext]': '_valuetext()',\n        '(change)': '_onChange()',\n        '(input)': '_onInput()',\n        // TODO(wagnermaciel): Consider using a global event listener instead.\n        // Reason: I have found a semi-consistent way to mouse up without triggering this event.\n        '(blur)': '_onBlur()',\n        '(focus)': '_onFocus()'\n      },\n      providers: [MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }]\n    }]\n  }], () => [], {\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSliderRangeThumb extends MatSliderThumb {\n  _cdr = inject(ChangeDetectorRef);\n  /** @docs-private */\n  getSibling() {\n    if (!this._sibling) {\n      this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n    }\n    return this._sibling;\n  }\n  _sibling;\n  /**\n   * Returns the minimum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMinPos() {\n    const sibling = this.getSibling();\n    if (!this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._tickMarkOffset;\n  }\n  /**\n   * Returns the maximum translateX position allowed for this slider input's visual thumb.\n   * @docs-private\n   */\n  getMaxPos() {\n    const sibling = this.getSibling();\n    if (this._isLeftThumb && sibling) {\n      return sibling.translateX;\n    }\n    return this._slider._cachedWidth - this._tickMarkOffset;\n  }\n  _setIsLeftThumb() {\n    this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n  }\n  /** Whether this slider corresponds to the input on the left hand side. */\n  _isLeftThumb;\n  /** Whether this slider corresponds to the input with greater value. */\n  _isEndThumb;\n  constructor() {\n    super();\n    this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n    this._setIsLeftThumb();\n    this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n  }\n  _getDefaultValue() {\n    return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n  }\n  _onInput() {\n    super._onInput();\n    this._updateSibling();\n    if (!this._isActive) {\n      this._updateWidthInactive();\n    }\n  }\n  _onNgControlValueChange() {\n    super._onNgControlValueChange();\n    this.getSibling()?._updateMinMax();\n  }\n  _onPointerDown(event) {\n    if (this.disabled || event.button !== 0) {\n      return;\n    }\n    if (this._sibling) {\n      this._sibling._updateWidthActive();\n      this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n    }\n    super._onPointerDown(event);\n  }\n  _onPointerUp() {\n    super._onPointerUp();\n    if (this._sibling) {\n      setTimeout(() => {\n        this._sibling._updateWidthInactive();\n        this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n      });\n    }\n  }\n  _onPointerMove(event) {\n    super._onPointerMove(event);\n    if (!this._slider.step && this._isActive) {\n      this._updateSibling();\n    }\n  }\n  _fixValue(event) {\n    super._fixValue(event);\n    this._sibling?._updateMinMax();\n  }\n  _clamp(v) {\n    return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n  }\n  _updateMinMax() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    if (this._isEndThumb) {\n      this.min = Math.max(this._slider.min, sibling.value);\n      this.max = this._slider.max;\n    } else {\n      this.min = this._slider.min;\n      this.max = Math.min(this._slider.max, sibling.value);\n    }\n  }\n  _updateWidthActive() {\n    const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n    const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n    const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n    const width = maxWidth * percentage + minWidth;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n  }\n  _updateWidthInactive() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n    const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n    const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n    const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n    // Extend the native input width by the radius of the ripple\n    let ripplePadding = this._slider._rippleRadius;\n    // If one of the inputs is maximally sized (the value of both thumbs is\n    // equal to the min or max), make that input take up all of the width and\n    // make the other unselectable.\n    if (percentage === 1) {\n      ripplePadding = 48;\n    } else if (percentage === 0) {\n      ripplePadding = 0;\n    }\n    const width = maxWidth * percentage + ripplePadding;\n    this._hostElement.style.width = `${width}px`;\n    this._hostElement.style.padding = '0px';\n    if (this._isLeftThumb) {\n      this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n      this._hostElement.style.right = 'auto';\n    } else {\n      this._hostElement.style.left = 'auto';\n      this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n  }\n  _updateStaticStyles() {\n    this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n  }\n  _updateSibling() {\n    const sibling = this.getSibling();\n    if (!sibling) {\n      return;\n    }\n    sibling._updateMinMax();\n    if (this._isActive) {\n      sibling._updateWidthActive();\n    } else {\n      sibling._updateWidthInactive();\n    }\n  }\n  /**\n   * Sets the input's value.\n   * @param value The new value of the input\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._isControlInitialized || value !== null) {\n      this.value = value;\n      this._updateWidthInactive();\n      this._updateSibling();\n    }\n  }\n  _setValue(value) {\n    super._setValue(value);\n    this._updateWidthInactive();\n    this._updateSibling();\n  }\n  static ɵfac = function MatSliderRangeThumb_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderRangeThumb)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSliderRangeThumb,\n    selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n    exportAs: [\"matSliderRangeThumb\"],\n    features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n      provide: MAT_SLIDER_RANGE_THUMB,\n      useExisting: MatSliderRangeThumb\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderRangeThumb, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matSliderStartThumb], input[matSliderEndThumb]',\n      exportAs: 'matSliderRangeThumb',\n      providers: [MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]\n    }]\n  }], () => [], null);\n})();\nclass MatSliderModule {\n  static ɵfac = function MatSliderModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSliderModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSliderModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatRippleModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatSlider, MatSliderThumb, MatSliderRangeThumb, MatSliderVisualThumb],\n      exports: [MatSlider, MatSliderThumb, MatSliderRangeThumb]\n    }]\n  }], null, null);\n})();\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faSearch, faMapMarkerAlt, faBuilding, faMoneyBillWave, faBriefcase, faFilter } from '@fortawesome/free-solid-svg-icons';\r\nimport { JobService } from '../../../services/job.service';\r\nimport { ApplicationFormComponent } from '../application-form/application-form.component';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\ninterface Job {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  location: string;\r\n  salary?: number;\r\n  employmentType: string;\r\n  employer: {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n  };\r\n  matchScore?: number;\r\n  requiredSkills: Array<{\r\n    name: string;\r\n  }>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-job-search',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSliderModule,\r\n    MatExpansionModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"job-search-container\">\r\n      <!-- Search and Filter Section -->\r\n      <mat-card class=\"search-filter-card\">\r\n        <mat-card-content>\r\n          <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearch()\">\r\n            <div class=\"search-bar\">\r\n              <mat-form-field appearance=\"outline\" class=\"search-input\">\r\n                <mat-label>Search Jobs</mat-label>\r\n                <input matInput formControlName=\"query\" placeholder=\"Job title, skills, or keywords\">\r\n                <fa-icon [icon]=\"faSearch\" matSuffix></fa-icon>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <mat-expansion-panel class=\"filter-panel\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <fa-icon [icon]=\"faFilter\"></fa-icon>\r\n                  Filters\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n\r\n              <div class=\"filters-grid\">\r\n                <!-- Location Filter -->\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Location</mat-label>\r\n                  <input matInput formControlName=\"location\" placeholder=\"City, State, or Remote\">\r\n                </mat-form-field>\r\n\r\n                <!-- Salary Range -->\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Minimum Salary</mat-label>\r\n                  <input matInput type=\"number\" formControlName=\"minSalary\" placeholder=\"Minimum salary\">\r\n                </mat-form-field>\r\n\r\n                <!-- Employment Type -->\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Employment Type</mat-label>\r\n                  <mat-select formControlName=\"employmentType\">\r\n                    <mat-option value=\"\">All Types</mat-option>\r\n                    <mat-option value=\"FULL-TIME\">Full-time</mat-option>\r\n                    <mat-option value=\"PART-TIME\">Part-time</mat-option>\r\n                    <mat-option value=\"CONTRACT\">Contract</mat-option>\r\n                    <mat-option value=\"INTERNSHIP\">Internship</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <!-- Sort By -->\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Sort By</mat-label>\r\n                  <mat-select formControlName=\"sortBy\">\r\n                    <mat-option value=\"matchScore\">Best Match</mat-option>\r\n                    <mat-option value=\"salary\">Salary</mat-option>\r\n                    <mat-option value=\"date\">Date Posted</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"filter-actions\">\r\n                <button mat-button type=\"button\" (click)=\"resetFilters()\">Reset</button>\r\n                <button mat-raised-button color=\"primary\" type=\"submit\">Apply Filters</button>\r\n              </div>\r\n            </mat-expansion-panel>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Loading jobs...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"loadJobs()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- Jobs List -->\r\n      <div *ngIf=\"!isLoading && !error\" class=\"jobs-list\">\r\n        <div *ngIf=\"jobs.length === 0\" class=\"no-jobs\">\r\n          <p>No jobs found matching your criteria.</p>\r\n        </div>\r\n\r\n        <mat-card *ngFor=\"let job of jobs\" class=\"job-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>{{job.title}}</mat-card-title>\r\n            <mat-card-subtitle>\r\n              <fa-icon [icon]=\"faBuilding\"></fa-icon>\r\n              {{job.employer.name}}\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <div class=\"job-details\">\r\n              <div class=\"detail-item\">\r\n                <fa-icon [icon]=\"faMapMarkerAlt\"></fa-icon>\r\n                <span>{{job.location}}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <fa-icon [icon]=\"faMoneyBillWave\"></fa-icon>\r\n                <span>{{job.salary | currency}}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <fa-icon [icon]=\"faBriefcase\"></fa-icon>\r\n                <span>{{job.employmentType}}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <p class=\"job-description\">{{job.description | slice:0:200}}...</p>\r\n\r\n            <div class=\"skills-container\">\r\n              <mat-chip-set>\r\n                <mat-chip *ngFor=\"let skill of job.requiredSkills\" color=\"primary\" selected>\r\n                  {{skill.name}}\r\n                </mat-chip>\r\n              </mat-chip-set>\r\n            </div>\r\n\r\n            <div *ngIf=\"job.matchScore\" class=\"match-score\">\r\n              Match Score: {{job.matchScore}}%\r\n            </div>\r\n          </mat-card-content>\r\n\r\n          <mat-card-actions>\r\n            <button mat-button color=\"primary\" (click)=\"viewJobDetails(job.id)\">View Details</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"applyForJob(job.id)\">Apply Now</button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .job-search-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n      font-family: 'Poppins', sans-serif;\r\n    }\r\n\r\n    .search-filter-card {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    .search-bar {\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .search-input {\r\n      width: 100%;\r\n    }\r\n\r\n    .filters-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .filter-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 16px;\r\n    }\r\n\r\n    .jobs-list {\r\n      display: grid;\r\n      gap: 24px;\r\n    }\r\n\r\n    .job-card {\r\n      transition: transform 0.2s;\r\n    }\r\n\r\n    .job-card:hover {\r\n      transform: translateY(-2px);\r\n    }\r\n\r\n    .job-details {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .detail-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      color: #666;\r\n    }\r\n\r\n    .job-description {\r\n      margin: 16px 0;\r\n      color: #444;\r\n    }\r\n\r\n    .skills-container {\r\n      margin: 16px 0;\r\n    }\r\n\r\n    .match-score {\r\n      display: inline-block;\r\n      padding: 4px 12px;\r\n      background-color: #e3f2fd;\r\n      color: #1976d2;\r\n      border-radius: 16px;\r\n      font-weight: 500;\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .loading-container,\r\n    .error-container,\r\n    .no-jobs {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n    }\r\n\r\n    mat-card-title {\r\n      font-size: 1.25rem;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    mat-card-subtitle {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    mat-card-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 16px;\r\n      padding: 16px;\r\n    }\r\n  `]\r\n})\r\nexport class JobSearchComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faSearch = faSearch;\r\n  faMapMarkerAlt = faMapMarkerAlt;\r\n  faBuilding = faBuilding;\r\n  faMoneyBillWave = faMoneyBillWave;\r\n  faBriefcase = faBriefcase;\r\n  faFilter = faFilter;\r\n\r\n  searchForm: FormGroup;\r\n  jobs: Job[] = [];\r\n  isLoading = false;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private jobService: JobService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.searchForm = this.fb.group({\r\n      query: [''],\r\n      location: [''],\r\n      minSalary: [null],\r\n      employmentType: [''],\r\n      sortBy: ['matchScore']\r\n    });\r\n\r\n    // Setup search input debounce\r\n    this.searchForm.get('query')?.valueChanges\r\n      .pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(() => this.onSearch());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadJobs();\r\n  }\r\n\r\n  loadJobs(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    const filters = this.searchForm.value;\r\n    this.jobService.searchJobs(filters).subscribe({\r\n      next: (jobs) => {\r\n        this.jobs = jobs;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading jobs:', error);\r\n        this.error = 'Failed to load jobs. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearch(): void {\r\n    this.loadJobs();\r\n  }\r\n\r\n  resetFilters(): void {\r\n    this.searchForm.reset({\r\n      query: '',\r\n      location: '',\r\n      minSalary: null,\r\n      employmentType: '',\r\n      sortBy: 'matchScore'\r\n    });\r\n    this.loadJobs();\r\n  }\r\n\r\n  viewJobDetails(jobId: string): void {\r\n    // Navigate to job details page\r\n    console.log('View job details:', jobId);\r\n  }\r\n\r\n  applyForJob(jobId: string): void {\r\n    this.jobService.getJob(jobId).subscribe({\r\n      next: (job) => {\r\n        const dialogRef = this.dialog.open(ApplicationFormComponent, {\r\n          width: '600px',\r\n          data: { job }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          if (result) {\r\n            // Optionally refresh the jobs list or show a success message\r\n            this.loadJobs();\r\n          }\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading job details:', error);\r\n      }\r\n    });\r\n  }\r\n} ","import * as i0 from '@angular/core';\nimport { inject, ElementRef, Directive, TemplateRef, InjectionToken, EventEmitter, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild, ContentChildren, ViewChild, Input, Output, ChangeDetectorRef, QueryList, numberAttribute, NgModule } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { F as FocusKeyManager } from './focus-key-manager-C1rAQJ5z.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { S as SPACE, c as ENTER } from './keycodes-CpHkExLC.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { BidiModule } from './bidi.mjs';\nimport '@angular/common';\nimport './list-key-manager-CyOIXo8P.mjs';\nimport './typeahead-9ZW4Dtsf.mjs';\nconst _c0 = [\"*\"];\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nclass CdkStepHeader {\n  _elementRef = inject(ElementRef);\n  constructor() {}\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  static ɵfac = function CdkStepHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepHeader)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepHeader,\n    selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n    hostAttrs: [\"role\", \"tab\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepHeader]',\n      host: {\n        'role': 'tab'\n      }\n    }]\n  }], () => [], null);\n})();\nclass CdkStepLabel {\n  template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function CdkStepLabel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepLabel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepLabel,\n    selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepLabel]'\n    }]\n  }], () => [], null);\n})();\n\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex;\n  /** Index of the step previously selected. */\n  previouslySelectedIndex;\n  /** The step instance now selected. */\n  selectedStep;\n  /** The step instance previously selected. */\n  previouslySelectedStep;\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n  _stepperOptions;\n  _stepper = inject(CdkStepper);\n  _displayDefaultIndicatorType;\n  /** Template for step label if it exists. */\n  stepLabel;\n  /** Forms that have been projected into the step. */\n  _childForms;\n  /** Template for step content. */\n  content;\n  /** The top level abstract control of the step. */\n  stepControl;\n  /** Whether user has attempted to move away from the step. */\n  interacted = false;\n  /** Emits when the user has attempted to move away from the step. */\n  interactedStream = new EventEmitter();\n  /** Plain text label of the step. */\n  label;\n  /** Error message to display when there's an error. */\n  errorMessage;\n  /** Aria label for the tab. */\n  ariaLabel;\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  ariaLabelledby;\n  /** State of the step. */\n  state;\n  /** Whether the user can return to this step once it has been marked as completed. */\n  editable = true;\n  /** Whether the completion of step is optional. */\n  optional = false;\n  /** Whether step is marked as completed. */\n  get completed() {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value) {\n    this._completedOverride = value;\n  }\n  _completedOverride = null;\n  _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n  /** Whether step has an error. */\n  get hasError() {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value) {\n    this._customError = value;\n  }\n  _customError = null;\n  _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n  constructor() {\n    const stepperOptions = inject(STEPPER_GLOBAL_OPTIONS, {\n      optional: true\n    });\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n  }\n  /** Selects this step component. */\n  select() {\n    this._stepper.selected = this;\n  }\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset() {\n    this.interacted = false;\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n    if (this._customError != null) {\n      this._customError = false;\n    }\n    if (this.stepControl) {\n      // Reset the forms since the default error state matchers will show errors on submit and we\n      // want the form to be back to its initial state (see #29781). Submitted state is on the\n      // individual directives, rather than the control, so we need to reset them ourselves.\n      this._childForms?.forEach(form => form.resetForm?.());\n      this.stepControl.reset();\n    }\n  }\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n  _markAsInteracted() {\n    if (!this.interacted) {\n      this.interacted = true;\n      this.interactedStream.emit(this);\n    }\n  }\n  /** Determines whether the error state can be shown. */\n  _showError() {\n    // We want to show the error state either if the user opted into/out of it using the\n    // global options, or if they've explicitly set it through the `hasError` input.\n    return this._stepperOptions.showError ?? this._customError != null;\n  }\n  static ɵfac = function CdkStep_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStep)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkStep,\n    selectors: [[\"cdk-step\"]],\n    contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex,\n        // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n        // provides themselves as such, but we don't want to have a concrete reference to both of\n        // the directives. The type is marked as `Partial` in case we run into a class that provides\n        // itself as `ControlContainer` but doesn't have the same interface as the directives.\n        ControlContainer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._childForms = _t);\n      }\n    },\n    viewQuery: function CdkStep_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      stepControl: \"stepControl\",\n      label: \"label\",\n      errorMessage: \"errorMessage\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      state: \"state\",\n      editable: [2, \"editable\", \"editable\", booleanAttribute],\n      optional: [2, \"optional\", \"optional\", booleanAttribute],\n      completed: [2, \"completed\", \"completed\", booleanAttribute],\n      hasError: [2, \"hasError\", \"hasError\", booleanAttribute]\n    },\n    outputs: {\n      interactedStream: \"interacted\"\n    },\n    exportAs: [\"cdkStep\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function CdkStep_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStep, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-step',\n      exportAs: 'cdkStep',\n      template: '<ng-template><ng-content/></ng-template>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [], {\n    stepLabel: [{\n      type: ContentChild,\n      args: [CdkStepLabel]\n    }],\n    _childForms: [{\n      type: ContentChildren,\n      args: [\n      // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n      // provides themselves as such, but we don't want to have a concrete reference to both of\n      // the directives. The type is marked as `Partial` in case we run into a class that provides\n      // itself as `ControlContainer` but doesn't have the same interface as the directives.\n      ControlContainer, {\n        descendants: true\n      }]\n    }],\n    content: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    stepControl: [{\n      type: Input\n    }],\n    interactedStream: [{\n      type: Output,\n      args: ['interacted']\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    state: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    optional: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    completed: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hasError: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass CdkStepper {\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  /** Emits when the component is destroyed. */\n  _destroyed = new Subject();\n  /** Used for managing keyboard focus. */\n  _keyManager;\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  _steps;\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  steps = new QueryList();\n  /** The list of step headers of the steps in the stepper. */\n  _stepHeader;\n  /** List of step headers sorted based on their DOM order. */\n  _sortedHeaders = new QueryList();\n  /** Whether the validity of previous steps should be checked or not. */\n  linear = false;\n  /** The index of the selected step. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index) {\n    if (this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n      if (this._selectedIndex !== index) {\n        this.selected?._markAsInteracted();\n        if (!this._anyControlsInvalidOrPending(index) && (index >= this._selectedIndex || this.steps.toArray()[index].editable)) {\n          this._updateSelectedItemIndex(index);\n        }\n      }\n    } else {\n      this._selectedIndex = index;\n    }\n  }\n  _selectedIndex = 0;\n  /** The step that is selected. */\n  get selected() {\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n  }\n  set selected(step) {\n    this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n  /** Event emitted when the selected step has changed. */\n  selectionChange = new EventEmitter();\n  /** Output to support two-way binding on `[(selectedIndex)]` */\n  selectedIndexChange = new EventEmitter();\n  /** Used to track unique ID for each stepper component. */\n  _groupId = inject(_IdGenerator).getId('cdk-stepper-');\n  /** Orientation of the stepper. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(value) {\n    // This is a protected method so that `MatStepper` can hook into it.\n    this._orientation = value;\n    if (this._keyManager) {\n      this._keyManager.withVerticalOrientation(value === 'vertical');\n    }\n  }\n  _orientation = 'horizontal';\n  constructor() {}\n  ngAfterContentInit() {\n    this._steps.changes.pipe(startWith(this._steps), takeUntil(this._destroyed)).subscribe(steps => {\n      this.steps.reset(steps.filter(step => step._stepper === this));\n      this.steps.notifyOnChanges();\n    });\n  }\n  ngAfterViewInit() {\n    // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n    // Material stepper, they won't appear in the `QueryList` in the same order as they're\n    // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n    // them manually to ensure that they're correct. Alternatively, we can change the Material\n    // template to inline the headers in the `ngFor`, but that'll result in a lot of\n    // code duplication. See #23539.\n    this._stepHeader.changes.pipe(startWith(this._stepHeader), takeUntil(this._destroyed)).subscribe(headers => {\n      this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n        const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n        // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        // tslint:disable-next-line:no-bitwise\n        return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n      }));\n      this._sortedHeaders.notifyOnChanges();\n    });\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager(this._sortedHeaders).withWrap().withHomeAndEnd().withVerticalOrientation(this._orientation === 'vertical');\n    // The selected index may have changed between when the component was created and when the\n    // key manager was initialized. Use `updateActiveItem` so it's correct, but it doesn't steal\n    // away focus from the user.\n    this._keyManager.updateActiveItem(this.selectedIndex);\n    (this._dir ? this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(direction => this._keyManager?.withHorizontalOrientation(direction));\n    this._keyManager.updateActiveItem(this._selectedIndex);\n    // No need to `takeUntil` here, because we're the ones destroying `steps`.\n    this.steps.changes.subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n    // The logic which asserts that the selected index is within bounds doesn't run before the\n    // steps are initialized, because we don't how many steps there are yet so we may have an\n    // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n    if (!this._isValidIndex(this._selectedIndex)) {\n      this._selectedIndex = 0;\n    }\n    // For linear step and selected index is greater than zero,\n    // set all the previous steps to interacted so that we can navigate to previous steps.\n    if (this.linear && this._selectedIndex > 0) {\n      const visitedSteps = this.steps.toArray().slice(0, this._selectedIndex);\n      for (const step of visitedSteps) {\n        step._markAsInteracted();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this.steps.destroy();\n    this._sortedHeaders.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Selects and focuses the next step in list. */\n  next() {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n  /** Selects and focuses the previous step in list. */\n  previous() {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset() {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i) {\n    return `${this._groupId}-label-${i}`;\n  }\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i) {\n    return `${this._groupId}-content-${i}`;\n  }\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index) {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n  _getDefaultIndicatorLogic(step, isCurrentStep) {\n    if (step._showError() && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n  _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n    if (step._showError() && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n  _isCurrentStep(index) {\n    return this._selectedIndex === index;\n  }\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n  _updateSelectedItemIndex(newIndex) {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex]\n    });\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    if (this._keyManager) {\n      this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n    }\n    this._selectedIndex = newIndex;\n    this.selectedIndexChange.emit(this._selectedIndex);\n    this._stateChanged();\n  }\n  _onKeydown(event) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    if (manager?.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else {\n      manager?.setFocusOrigin('keyboard').onKeydown(event);\n    }\n  }\n  _anyControlsInvalidOrPending(index) {\n    if (this.linear && index >= 0) {\n      return this.steps.toArray().slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n    return false;\n  }\n  _layoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Checks whether the stepper contains the focused element. */\n  _containsFocus() {\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = _getFocusedElementPierceShadowDom();\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n  /** Checks whether the passed-in index is a valid step index. */\n  _isValidIndex(index) {\n    return index > -1 && (!this.steps || index < this.steps.length);\n  }\n  static ɵfac = function CdkStepper_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepper)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepper,\n    selectors: [[\"\", \"cdkStepper\", \"\"]],\n    contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._steps = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n      }\n    },\n    inputs: {\n      linear: [2, \"linear\", \"linear\", booleanAttribute],\n      selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n      selected: \"selected\",\n      orientation: \"orientation\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\",\n      selectedIndexChange: \"selectedIndexChange\"\n    },\n    exportAs: [\"cdkStepper\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepper]',\n      exportAs: 'cdkStepper'\n    }]\n  }], () => [], {\n    _steps: [{\n      type: ContentChildren,\n      args: [CdkStep, {\n        descendants: true\n      }]\n    }],\n    _stepHeader: [{\n      type: ContentChildren,\n      args: [CdkStepHeader, {\n        descendants: true\n      }]\n    }],\n    linear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    selected: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    orientation: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n  _stepper = inject(CdkStepper);\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  type = 'submit';\n  constructor() {}\n  static ɵfac = function CdkStepperNext_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepperNext)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepperNext,\n    selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n          return ctx._stepper.next();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperNext]',\n      host: {\n        '[type]': 'type',\n        '(click)': '_stepper.next()'\n      }\n    }]\n  }], () => [], {\n    type: [{\n      type: Input\n    }]\n  });\n})();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n  _stepper = inject(CdkStepper);\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  type = 'button';\n  constructor() {}\n  static ɵfac = function CdkStepperPrevious_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepperPrevious)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkStepperPrevious,\n    selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n          return ctx._stepper.previous();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperPrevious]',\n      host: {\n        '[type]': 'type',\n        '(click)': '_stepper.previous()'\n      }\n    }]\n  }], () => [], {\n    type: [{\n      type: Input\n    }]\n  });\n})();\nclass CdkStepperModule {\n  static ɵfac = function CdkStepperModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkStepperModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkStepperModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n      exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n    }]\n  }], null, null);\n})();\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, TemplateRef, ViewContainerRef, ContentChild, NgZone, Renderer2, ANIMATION_MODULE_TYPE, signal, QueryList, EventEmitter, ElementRef, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { MatIcon, MatIconModule } from './icon.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-BQUT6wsL.mjs';\nimport { M as MatRipple } from './ripple-BT3tzh6F.mjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { switchMap, map, startWith, takeUntil } from 'rxjs/operators';\nimport { E as ErrorStateMatcher } from './error-options-Dm2JJUbF.mjs';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { M as MatRippleModule } from './index-SYVYjXwK.mjs';\nimport './icon-registry-B2IMBfNA.mjs';\nimport '@angular/common/http';\nimport '@angular/platform-browser';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\nfunction MatStepHeader_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._getDefaultTextForState(ctx_r0.state));\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._intl.completedLabel);\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._intl.editableLabel);\n  }\n}\nfunction MatStepHeader_Conditional_4_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatStepHeader_Conditional_4_Case_1_Conditional_0_Template, 2, 1, \"span\", 8)(1, MatStepHeader_Conditional_4_Case_1_Conditional_1_Template, 2, 1, \"span\", 8);\n    i0.ɵɵelementStart(2, \"mat-icon\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵconditional(ctx_r0.state === \"done\" ? 0 : ctx_r0.state === \"edit\" ? 1 : -1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0._getDefaultTextForState(ctx_r0.state));\n  }\n}\nfunction MatStepHeader_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatStepHeader_Conditional_4_Case_0_Template, 2, 1, \"span\", 7)(1, MatStepHeader_Conditional_4_Case_1_Template, 4, 2);\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional((tmp_1_0 = ctx_r0.state) === \"number\" ? 0 : 1);\n  }\n}\nfunction MatStepHeader_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementContainer(1, 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template);\n  }\n}\nfunction MatStepHeader_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction MatStepHeader_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0._intl.optionalLabel);\n  }\n}\nfunction MatStepHeader_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nconst _c0 = [\"*\"];\nfunction MatStep_ng_template_0_ng_template_1_Template(rf, ctx) {}\nfunction MatStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵtemplate(1, MatStep_ng_template_0_ng_template_1_Template, 0, 0, \"ng-template\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"cdkPortalOutlet\", ctx_r0._portal);\n  }\n}\nconst _c1 = [\"animatedContainer\"];\nconst _c2 = (a0, a1) => ({\n  step: a0,\n  i: a1\n});\nfunction MatStepper_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatStepper_Case_1_For_3_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatStepper_Case_1_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 6);\n    i0.ɵɵtemplate(1, MatStepper_Case_1_For_3_Conditional_1_Template, 1, 0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const $index_r2 = ctx.$index;\n    const ɵ$index_8_r3 = ctx.$index;\n    const ɵ$count_8_r4 = ctx.$count;\n    i0.ɵɵnextContext(2);\n    const stepTemplate_r5 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", stepTemplate_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c2, step_r1, $index_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!(ɵ$index_8_r3 === ɵ$count_8_r4 - 1) ? 1 : -1);\n  }\n}\nfunction MatStepper_Case_1_For_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 1);\n    i0.ɵɵelementContainer(2, 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r6 = ctx.$implicit;\n    const $index_r7 = ctx.$index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"mat-horizontal-stepper-content-\" + ctx_r7._getAnimationDirection($index_r7));\n    i0.ɵɵproperty(\"id\", ctx_r7._getStepContentId($index_r7));\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r7._getStepLabelId($index_r7))(\"inert\", ctx_r7.selectedIndex === $index_r7 ? null : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", step_r6.content);\n  }\n}\nfunction MatStepper_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵrepeaterCreate(2, MatStepper_Case_1_For_3_Template, 2, 6, null, null, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵrepeaterCreate(5, MatStepper_Case_1_For_6_Template, 3, 6, \"div\", 5, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx_r7.steps);\n    i0.ɵɵadvance(3);\n    i0.ɵɵrepeater(ctx_r7.steps);\n  }\n}\nfunction MatStepper_Case_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementContainer(1, 6);\n    i0.ɵɵelementStart(2, \"div\", 11, 1)(4, \"div\", 12)(5, \"div\", 13);\n    i0.ɵɵelementContainer(6, 9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const $index_r10 = ctx.$index;\n    const ɵ$index_22_r11 = ctx.$index;\n    const ɵ$count_22_r12 = ctx.$count;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    const stepTemplate_r5 = i0.ɵɵreference(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", stepTemplate_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c2, step_r9, $index_r10));\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-stepper-vertical-line\", !(ɵ$index_22_r11 === ɵ$count_22_r12 - 1))(\"mat-vertical-content-container-active\", ctx_r7.selectedIndex === $index_r10);\n    i0.ɵɵattribute(\"inert\", ctx_r7.selectedIndex === $index_r10 ? null : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", ctx_r7._getStepContentId($index_r10));\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r7._getStepLabelId($index_r10));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n  }\n}\nfunction MatStepper_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatStepper_Case_2_For_1_Template, 7, 13, \"div\", 10, i0.ɵɵrepeaterTrackByIdentity);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵrepeater(ctx_r7.steps);\n  }\n}\nfunction MatStepper_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-step-header\", 14);\n    i0.ɵɵlistener(\"click\", function MatStepper_ng_template_3_Template_mat_step_header_click_0_listener() {\n      const step_r14 = i0.ɵɵrestoreView(_r13).step;\n      return i0.ɵɵresetView(step_r14.select());\n    })(\"keydown\", function MatStepper_ng_template_3_Template_mat_step_header_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7._onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r14 = ctx.step;\n    const i_r15 = ctx.i;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-horizontal-stepper-header\", ctx_r7.orientation === \"horizontal\")(\"mat-vertical-stepper-header\", ctx_r7.orientation === \"vertical\");\n    i0.ɵɵproperty(\"tabIndex\", ctx_r7._getFocusIndex() === i_r15 ? 0 : -1)(\"id\", ctx_r7._getStepLabelId(i_r15))(\"index\", i_r15)(\"state\", ctx_r7._getIndicatorType(i_r15, step_r14.state))(\"label\", step_r14.stepLabel || step_r14.label)(\"selected\", ctx_r7.selectedIndex === i_r15)(\"active\", ctx_r7._stepIsNavigable(i_r15, step_r14))(\"optional\", step_r14.optional)(\"errorMessage\", step_r14.errorMessage)(\"iconOverrides\", ctx_r7._iconOverrides)(\"disableRipple\", ctx_r7.disableRipple || !ctx_r7._stepIsNavigable(i_r15, step_r14))(\"color\", step_r14.color || ctx_r7.color);\n    i0.ɵɵattribute(\"aria-posinset\", i_r15 + 1)(\"aria-setsize\", ctx_r7.steps.length)(\"aria-controls\", ctx_r7._getStepContentId(i_r15))(\"aria-selected\", ctx_r7.selectedIndex == i_r15)(\"aria-label\", step_r14.ariaLabel || null)(\"aria-labelledby\", !step_r14.ariaLabel && step_r14.ariaLabelledby ? step_r14.ariaLabelledby : null)(\"aria-disabled\", ctx_r7._stepIsNavigable(i_r15, step_r14) ? null : true);\n  }\n}\nclass MatStepLabel extends CdkStepLabel {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStepLabel_BaseFactory;\n    return function MatStepLabel_Factory(__ngFactoryType__) {\n      return (ɵMatStepLabel_BaseFactory || (ɵMatStepLabel_BaseFactory = i0.ɵɵgetInheritedFactory(MatStepLabel)))(__ngFactoryType__ || MatStepLabel);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepLabel,\n    selectors: [[\"\", \"matStepLabel\", \"\"]],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[matStepLabel]'\n    }]\n  }], null, null);\n})();\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes = new Subject();\n  /** Label that is rendered below optional steps. */\n  optionalLabel = 'Optional';\n  /** Label that is used to indicate step as completed to screen readers. */\n  completedLabel = 'Completed';\n  /** Label that is used to indicate step as editable to screen readers. */\n  editableLabel = 'Editable';\n  static ɵfac = function MatStepperIntl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepperIntl)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatStepperIntl,\n    factory: MatStepperIntl.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\nclass MatStepHeader extends CdkStepHeader {\n  _intl = inject(MatStepperIntl);\n  _focusMonitor = inject(FocusMonitor);\n  _intlSubscription;\n  /** State of the given step. */\n  state;\n  /** Label of the given step. */\n  label;\n  /** Error message to display when there's an error. */\n  errorMessage;\n  /** Overrides for the header icons, passed in via the stepper. */\n  iconOverrides;\n  /** Index of the given step. */\n  index;\n  /** Whether the given step is selected. */\n  selected;\n  /** Whether the given step label is active. */\n  active;\n  /** Whether the given step is optional. */\n  optional;\n  /** Whether the ripple should be disabled. */\n  disableRipple;\n  /**\n   * Theme color of the step header. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/stepper/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  constructor() {\n    super();\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    const changeDetectorRef = inject(ChangeDetectorRef);\n    this._intlSubscription = this._intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n  /** Focuses the step header. */\n  focus(origin, options) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._elementRef, origin, options);\n    } else {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel() {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel() {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext() {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n  _getDefaultTextForState(state) {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n  static ɵfac = function MatStepHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatStepHeader,\n    selectors: [[\"mat-step-header\"]],\n    hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\"],\n    hostVars: 2,\n    hostBindings: function MatStepHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n      }\n    },\n    inputs: {\n      state: \"state\",\n      label: \"label\",\n      errorMessage: \"errorMessage\",\n      iconOverrides: \"iconOverrides\",\n      index: \"index\",\n      selected: \"selected\",\n      active: \"active\",\n      optional: \"optional\",\n      disableRipple: \"disableRipple\",\n      color: \"color\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 17,\n    consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"mat-step-label\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"], [\"aria-hidden\", \"true\"], [1, \"cdk-visually-hidden\"], [3, \"ngTemplateOutlet\"]],\n    template: function MatStepHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\")(2, \"div\", 1);\n        i0.ɵɵtemplate(3, MatStepHeader_Conditional_3_Template, 1, 2, \"ng-container\", 2)(4, MatStepHeader_Conditional_4_Template, 2, 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, MatStepHeader_Conditional_6_Template, 2, 1, \"div\", 4)(7, MatStepHeader_Conditional_7_Template, 2, 1, \"div\", 4)(8, MatStepHeader_Conditional_8_Template, 2, 1, \"div\", 5)(9, MatStepHeader_Conditional_9_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_8_0;\n        i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        i0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.iconOverrides && ctx.iconOverrides[ctx.state] ? 3 : 4);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional((tmp_8_0 = ctx._templateLabel()) ? 6 : ctx._stringLabel() ? 7 : -1, tmp_8_0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.optional && ctx.state != \"error\" ? 8 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.state === \"error\" ? 9 : -1);\n      }\n    },\n    dependencies: [MatRipple, NgTemplateOutlet, MatIcon],\n    styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-step-header',\n      host: {\n        'class': 'mat-step-header',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        'role': 'tab'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatRipple, NgTemplateOutlet, MatIcon],\n      template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\",\n      styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-inverse-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"]\n    }]\n  }], () => [], {\n    state: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    iconOverrides: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n  templateRef = inject(TemplateRef);\n  /** Name of the icon to be overridden. */\n  name;\n  constructor() {}\n  static ɵfac = function MatStepperIcon_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepperIcon)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepperIcon,\n    selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]],\n    inputs: {\n      name: [0, \"matStepperIcon\", \"name\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matStepperIcon]'\n    }]\n  }], () => [], {\n    name: [{\n      type: Input,\n      args: ['matStepperIcon']\n    }]\n  });\n})();\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n  _template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function MatStepContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepContent,\n    selectors: [[\"ng-template\", \"matStepContent\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matStepContent]'\n    }]\n  }], () => [], null);\n})();\nclass MatStep extends CdkStep {\n  _errorStateMatcher = inject(ErrorStateMatcher, {\n    skipSelf: true\n  });\n  _viewContainerRef = inject(ViewContainerRef);\n  _isSelected = Subscription.EMPTY;\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  // We need an initializer here to avoid a TS error.\n  stepLabel = undefined;\n  /**\n   * Theme color for the particular step. This API is supported in M2 themes\n   * only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/stepper/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Content that will be rendered lazily. */\n  _lazyContent;\n  /** Currently-attached portal containing the lazy content. */\n  _portal;\n  ngAfterContentInit() {\n    this._isSelected = this._stepper.steps.changes.pipe(switchMap(() => {\n      return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n    })).subscribe(isSelected => {\n      if (isSelected && this._lazyContent && !this._portal) {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._isSelected.unsubscribe();\n  }\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control, form) {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n    return originalErrorState || customErrorState;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStep_BaseFactory;\n    return function MatStep_Factory(__ngFactoryType__) {\n      return (ɵMatStep_BaseFactory || (ɵMatStep_BaseFactory = i0.ɵɵgetInheritedFactory(MatStep)))(__ngFactoryType__ || MatStep);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatStep,\n    selectors: [[\"mat-step\"]],\n    contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatStepLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatStepContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n      }\n    },\n    hostAttrs: [\"hidden\", \"\"],\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matStep\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: ErrorStateMatcher,\n      useExisting: MatStep\n    }, {\n      provide: CdkStep,\n      useExisting: MatStep\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    consts: [[3, \"cdkPortalOutlet\"]],\n    template: function MatStep_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 2, 1, \"ng-template\");\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStep, [{\n    type: Component,\n    args: [{\n      selector: 'mat-step',\n      providers: [{\n        provide: ErrorStateMatcher,\n        useExisting: MatStep\n      }, {\n        provide: CdkStep,\n        useExisting: MatStep\n      }],\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matStep',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [CdkPortalOutlet],\n      host: {\n        'hidden': '' // Hide the steps so they don't affect the layout.\n      },\n      template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\"\n    }]\n  }], null, {\n    stepLabel: [{\n      type: ContentChild,\n      args: [MatStepLabel]\n    }],\n    color: [{\n      type: Input\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatStepContent, {\n        static: false\n      }]\n    }]\n  });\n})();\nclass MatStepper extends CdkStepper {\n  _ngZone = inject(NgZone);\n  _renderer = inject(Renderer2);\n  _animationsModule = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _cleanupTransition;\n  _isAnimating = signal(false);\n  /** The list of step headers of the steps in the stepper. */\n  _stepHeader = undefined;\n  /** Elements hosting the step animations. */\n  _animatedContainers;\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  _steps = undefined;\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  steps = new QueryList();\n  /** Custom icon overrides passed in by the consumer. */\n  _icons;\n  /** Event emitted when the current step is done transitioning in. */\n  animationDone = new EventEmitter();\n  /** Whether ripples should be disabled for the step headers. */\n  disableRipple;\n  /**\n   * Theme color for all of the steps in stepper. This API is supported in M2\n   * themes only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/stepper/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /**\n   * Whether the label should display in bottom or end position.\n   * Only applies in the `horizontal` orientation.\n   */\n  labelPosition = 'end';\n  /**\n   * Position of the stepper's header.\n   * Only applies in the `horizontal` orientation.\n   */\n  headerPosition = 'top';\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides = {};\n  /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  _animationDuration = '';\n  /** Whether the stepper is rendering on the server. */\n  _isServer = !inject(Platform).isBrowser;\n  constructor() {\n    super();\n    const elementRef = inject(ElementRef);\n    const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n    this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n  }\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._icons.forEach(({\n      name,\n      templateRef\n    }) => this._iconOverrides[name] = templateRef);\n    // Mark the component for change detection whenever the content children query changes\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n    // Transition events won't fire if animations are disabled so we simulate them.\n    this.selectedIndexChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      const duration = this._getAnimationDuration();\n      if (duration === '0ms' || duration === '0s') {\n        this._onAnimationDone();\n      } else {\n        this._isAnimating.set(true);\n      }\n    });\n    this._ngZone.runOutsideAngular(() => {\n      if (this._animationsModule !== 'NoopAnimations') {\n        setTimeout(() => {\n          // Delay enabling the animations so we don't animate the initial state.\n          this._elementRef.nativeElement.classList.add('mat-stepper-animations-enabled');\n          // Bind this outside the zone since it fires for all transitions inside the stepper.\n          this._cleanupTransition = this._renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionend);\n        }, 200);\n      }\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // Prior to #30314 the stepper had animation `done` events bound to each animated container.\n    // The animations module was firing them on initialization and for each subsequent animation.\n    // Since the events were bound in the template, it had the unintended side-effect of triggering\n    // change detection as well. It appears that this side-effect ended up being load-bearing,\n    // because it was ensuring that the content elements (e.g. `matStepLabel`) that are defined\n    // in sub-components actually get picked up in a timely fashion. This subscription simulates\n    // the same change detection by using `queueMicrotask` similarly to the animations module.\n    if (typeof queueMicrotask === 'function') {\n      let hasEmittedInitial = false;\n      this._animatedContainers.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => queueMicrotask(() => {\n        // Simulate the initial `animationDone` event\n        // that gets emitted by the animations module.\n        if (!hasEmittedInitial) {\n          hasEmittedInitial = true;\n          this.animationDone.emit();\n        }\n        this._stateChanged();\n      }));\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._cleanupTransition?.();\n  }\n  _stepIsNavigable(index, step) {\n    return step.completed || this.selectedIndex === index || !this.linear;\n  }\n  _getAnimationDuration() {\n    if (this._animationsModule === 'NoopAnimations') {\n      return '0ms';\n    }\n    if (this.animationDuration) {\n      return this.animationDuration;\n    }\n    return this.orientation === 'horizontal' ? '500ms' : '225ms';\n  }\n  _handleTransitionend = event => {\n    const target = event.target;\n    if (!target) {\n      return;\n    }\n    // Because we bind a single `transitionend` handler on the host node and because transition\n    // events bubble, we have to filter down to only the active step so don't emit events too\n    // often. We check the orientation and `property` name first to reduce the amount of times\n    // we need to check the DOM.\n    const isHorizontalActiveElement = this.orientation === 'horizontal' && event.propertyName === 'transform' && target.classList.contains('mat-horizontal-stepper-content-current');\n    const isVerticalActiveElement = this.orientation === 'vertical' && event.propertyName === 'grid-template-rows' && target.classList.contains('mat-vertical-content-container-active');\n    // Finally we need to ensure that the animated element is a direct descendant,\n    // rather than one coming from a nested stepper.\n    const shouldEmit = (isHorizontalActiveElement || isVerticalActiveElement) && this._animatedContainers.find(ref => ref.nativeElement === target);\n    if (shouldEmit) {\n      this._onAnimationDone();\n    }\n  };\n  _onAnimationDone() {\n    this._isAnimating.set(false);\n    this.animationDone.emit();\n  }\n  static ɵfac = function MatStepper_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepper)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatStepper,\n    selectors: [[\"mat-stepper\"], [\"mat-vertical-stepper\"], [\"mat-horizontal-stepper\"], [\"\", \"matStepper\", \"\"]],\n    contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatStep, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatStepperIcon, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._steps = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._icons = _t);\n      }\n    },\n    viewQuery: function MatStepper_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatStepHeader, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._animatedContainers = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"tablist\"],\n    hostVars: 15,\n    hostBindings: function MatStepper_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-orientation\", ctx.orientation);\n        i0.ɵɵstyleProp(\"--mat-stepper-animation-duration\", ctx._getAnimationDuration());\n        i0.ɵɵclassProp(\"mat-stepper-horizontal\", ctx.orientation === \"horizontal\")(\"mat-stepper-vertical\", ctx.orientation === \"vertical\")(\"mat-stepper-label-position-end\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"bottom\")(\"mat-stepper-header-position-bottom\", ctx.headerPosition === \"bottom\")(\"mat-stepper-animating\", ctx._isAnimating());\n      }\n    },\n    inputs: {\n      disableRipple: \"disableRipple\",\n      color: \"color\",\n      labelPosition: \"labelPosition\",\n      headerPosition: \"headerPosition\",\n      animationDuration: \"animationDuration\"\n    },\n    outputs: {\n      animationDone: \"animationDone\"\n    },\n    exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkStepper,\n      useExisting: MatStepper\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[\"stepTemplate\", \"\"], [\"animatedContainer\", \"\"], [1, \"mat-horizontal-stepper-wrapper\"], [1, \"mat-horizontal-stepper-header-container\"], [1, \"mat-horizontal-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\", \"class\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"click\", \"keydown\", \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"color\"]],\n    template: function MatStepper_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatStepper_Conditional_0_Template, 1, 0)(1, MatStepper_Case_1_Template, 7, 0, \"div\", 2)(2, MatStepper_Case_2_Template, 2, 0)(3, MatStepper_ng_template_3_Template, 1, 23, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        i0.ɵɵconditional(ctx._isServer ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional((tmp_2_0 = ctx.orientation) === \"horizontal\" ? 1 : tmp_2_0 === \"vertical\" ? 2 : -1);\n      }\n    },\n    dependencies: [NgTemplateOutlet, MatStepHeader],\n    styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepper, [{\n    type: Component,\n    args: [{\n      selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]',\n      exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper',\n      host: {\n        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n        '[class.mat-stepper-animating]': '_isAnimating()',\n        '[style.--mat-stepper-animation-duration]': '_getAnimationDuration()',\n        '[attr.aria-orientation]': 'orientation',\n        'role': 'tablist'\n      },\n      providers: [{\n        provide: CdkStepper,\n        useExisting: MatStepper\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [NgTemplateOutlet, MatStepHeader],\n      template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step, i: $index}\\\"/>\\n          @if (!$last) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step) {\\n          <div\\n            #animatedContainer\\n            class=\\\"mat-horizontal-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\"\\n            [class]=\\\"'mat-horizontal-stepper-content-' + _getAnimationDirection($index)\\\"\\n            [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step, i: $index}\\\"/>\\n        <div\\n          #animatedContainer\\n          class=\\\"mat-vertical-content-container\\\"\\n          [class.mat-stepper-vertical-line]=\\\"!$last\\\"\\n          [class.mat-vertical-content-container-active]=\\\"selectedIndex === $index\\\"\\n          [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"/>\\n</ng-template>\\n\",\n      styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"]\n    }]\n  }], () => [], {\n    _stepHeader: [{\n      type: ViewChildren,\n      args: [MatStepHeader]\n    }],\n    _animatedContainers: [{\n      type: ViewChildren,\n      args: ['animatedContainer']\n    }],\n    _steps: [{\n      type: ContentChildren,\n      args: [MatStep, {\n        descendants: true\n      }]\n    }],\n    _icons: [{\n      type: ContentChildren,\n      args: [MatStepperIcon, {\n        descendants: true\n      }]\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStepperNext_BaseFactory;\n    return function MatStepperNext_Factory(__ngFactoryType__) {\n      return (ɵMatStepperNext_BaseFactory || (ɵMatStepperNext_BaseFactory = i0.ɵɵgetInheritedFactory(MatStepperNext)))(__ngFactoryType__ || MatStepperNext);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepperNext,\n    selectors: [[\"button\", \"matStepperNext\", \"\"]],\n    hostAttrs: [1, \"mat-stepper-next\"],\n    hostVars: 1,\n    hostBindings: function MatStepperNext_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[matStepperNext]',\n      host: {\n        'class': 'mat-stepper-next',\n        '[type]': 'type'\n      }\n    }]\n  }], null, null);\n})();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatStepperPrevious_BaseFactory;\n    return function MatStepperPrevious_Factory(__ngFactoryType__) {\n      return (ɵMatStepperPrevious_BaseFactory || (ɵMatStepperPrevious_BaseFactory = i0.ɵɵgetInheritedFactory(MatStepperPrevious)))(__ngFactoryType__ || MatStepperPrevious);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatStepperPrevious,\n    selectors: [[\"button\", \"matStepperPrevious\", \"\"]],\n    hostAttrs: [1, \"mat-stepper-previous\"],\n    hostVars: 1,\n    hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"type\", ctx.type);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[matStepperPrevious]',\n      host: {\n        'class': 'mat-stepper-previous',\n        '[type]': 'type'\n      }\n    }]\n  }], null, null);\n})();\nclass MatStepperModule {\n  static ɵfac = function MatStepperModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatStepperModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatStepperModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n    imports: [MatCommonModule, PortalModule, CdkStepperModule, MatIconModule, MatRippleModule, MatStepper, MatStepHeader, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PortalModule, CdkStepperModule, MatIconModule, MatRippleModule, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent],\n      exports: [MatCommonModule, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent],\n      providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matStepperAnimations = {\n  // Represents:\n  // trigger('horizontalStepTransition', [\n  //   state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n  //   // Transition to `inherit`, rather than `visible`,\n  //   // because visibility on a child element the one from the parent,\n  //   // making this element focusable inside of a `hidden` element.\n  //   state('current', style({transform: 'none', visibility: 'inherit'})),\n  //   state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n  //   transition(\n  //     '* => *',\n  //     group([\n  //       animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //       query('@*', animateChild(), {optional: true}),\n  //     ]),\n  //     {\n  //       params: {animationDuration: '500ms'},\n  //     },\n  //   ),\n  // ])\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: {\n    type: 7,\n    name: 'horizontalStepTransition',\n    definitions: [{\n      type: 0,\n      name: 'previous',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'current',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'inherit'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'next',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* => *',\n      animation: {\n        type: 3,\n        steps: [{\n          type: 4,\n          styles: null,\n          timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n        }, {\n          type: 11,\n          selector: '@*',\n          animation: {\n            type: 9,\n            options: null\n          },\n          options: {\n            optional: true\n          }\n        }],\n        options: null\n      },\n      options: {\n        params: {\n          animationDuration: '500ms'\n        }\n      }\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('verticalStepTransition', [\n  //   state('previous', style({height: '0px', visibility: 'hidden'})),\n  //   state('next', style({height: '0px', visibility: 'hidden'})),\n  //   // Transition to `inherit`, rather than `visible`,\n  //   // because visibility on a child element the one from the parent,\n  //   // making this element focusable inside of a `hidden` element.\n  //   state('current', style({height: '*', visibility: 'inherit'})),\n  //   transition(\n  //     '* <=> current',\n  //     group([\n  //       animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n  //       query('@*', animateChild(), {optional: true}),\n  //     ]),\n  //     {\n  //       params: {animationDuration: '225ms'},\n  //     },\n  //   ),\n  // ])\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: {\n    type: 7,\n    name: 'verticalStepTransition',\n    definitions: [{\n      type: 0,\n      name: 'previous',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '0px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'next',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '0px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'current',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '*',\n          visibility: 'inherit'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* <=> current',\n      animation: {\n        type: 3,\n        steps: [{\n          type: 4,\n          styles: null,\n          timings: '{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'\n        }, {\n          type: 11,\n          selector: '@*',\n          animation: {\n            type: 9,\n            options: null\n          },\n          options: {\n            optional: true\n          }\n        }],\n        options: null\n      },\n      options: {\n        params: {\n          animationDuration: '225ms'\n        }\n      }\n    }],\n    options: {}\n  }\n};\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faGraduationCap, faBriefcase, faLightbulb, faChartLine, faCheckCircle, faTimesCircle, faArrowRight, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CareerPathService, CareerPath } from '../../../services/career-path.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-career-path',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatStepperModule,\r\n    MatExpansionModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"career-path-container\">\r\n      <!-- Initial Form -->\r\n      <div *ngIf=\"!careerPath\" class=\"initial-form\">\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <fa-icon [icon]=\"faChartLine\" class=\"icon\"></fa-icon>\r\n              Plan Your Career Path\r\n            </mat-card-title>\r\n            <mat-card-subtitle>\r\n              Let's map out your journey to your dream career\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n\r\n          <mat-card-content>\r\n            <!-- Error Message -->\r\n            <div *ngIf=\"error\" class=\"error-message\">\r\n              <fa-icon [icon]=\"faExclamationTriangle\" class=\"icon\"></fa-icon>\r\n              <span>{{ error }}</span>\r\n            </div>\r\n\r\n            <form [formGroup]=\"careerForm\" (ngSubmit)=\"generateCareerPath()\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Your Dream Career</mat-label>\r\n                <input matInput formControlName=\"targetRole\" placeholder=\"e.g., Software Architect\">\r\n                <mat-error *ngIf=\"careerForm.get('targetRole')?.hasError('required')\">\r\n                  Please enter your target career\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Current Role</mat-label>\r\n                <input matInput formControlName=\"currentRole\" placeholder=\"e.g., Junior Developer\">\r\n                <mat-error *ngIf=\"careerForm.get('currentRole')?.hasError('required')\">\r\n                  Please enter your current role\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Years of Experience</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"yearsOfExperience\" min=\"0\">\r\n                <mat-error *ngIf=\"careerForm.get('yearsOfExperience')?.hasError('required')\">\r\n                  Please enter your years of experience\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <div class=\"form-actions\">\r\n                <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"isLoading || !careerForm.valid\">\r\n                  <div class=\"button-content\">\r\n                    <mat-spinner diameter=\"20\" *ngIf=\"isLoading\"></mat-spinner>\r\n                    <span *ngIf=\"!isLoading\">Generate Career Path</span>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <!-- Career Path Results -->\r\n      <div *ngIf=\"careerPath\" class=\"career-path-results\">\r\n        <!-- Timeline Section -->\r\n        <mat-card class=\"section-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <fa-icon [icon]=\"faChartLine\" class=\"icon\"></fa-icon>\r\n              Your Career Timeline\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <mat-stepper orientation=\"vertical\">\r\n              <mat-step *ngFor=\"let phase of careerPath.timeline\">\r\n                <ng-template matStepLabel>\r\n                  <div class=\"step-label\">\r\n                    <span class=\"phase\">{{phase.phase}}</span>\r\n                    <span class=\"duration\">{{phase.duration}}</span>\r\n                  </div>\r\n                </ng-template>\r\n                <div class=\"step-content\">\r\n                  <h3>Activities</h3>\r\n                  <ul>\r\n                    <li *ngFor=\"let activity of phase.activities\">{{activity}}</li>\r\n                  </ul>\r\n                  <h3>Milestones</h3>\r\n                  <ul>\r\n                    <li *ngFor=\"let milestone of phase.milestones\">{{milestone}}</li>\r\n                  </ul>\r\n                </div>\r\n              </mat-step>\r\n            </mat-stepper>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Education Section -->\r\n        <mat-card class=\"section-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <fa-icon [icon]=\"faGraduationCap\" class=\"icon\"></fa-icon>\r\n              Required Education\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"education-list\">\r\n              <div *ngFor=\"let edu of careerPath.education\" class=\"education-item\">\r\n                <h3>{{edu.level}} in {{edu.field}}</h3>\r\n                <p class=\"duration\">{{edu.duration}}</p>\r\n                <h4>Requirements:</h4>\r\n                <ul>\r\n                  <li *ngFor=\"let req of edu.requirements\">{{req}}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Skills Section -->\r\n        <mat-card class=\"section-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <fa-icon [icon]=\"faBriefcase\" class=\"icon\"></fa-icon>\r\n              Skills Development\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"skills-section\">\r\n              <div class=\"skills-group\">\r\n                <h3>Current Skills</h3>\r\n                <div class=\"skills-list\">\r\n                  <mat-chip *ngFor=\"let skill of careerPath.requiredSkills.current\" class=\"current-skill\">\r\n                    <fa-icon [icon]=\"faCheckCircle\" class=\"icon\"></fa-icon>\r\n                    {{skill.name}}\r\n                  </mat-chip>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"skills-group\">\r\n                <h3>Skills to Develop</h3>\r\n                <div class=\"skills-list\">\r\n                  <mat-chip *ngFor=\"let skill of careerPath.requiredSkills.missing\" class=\"missing-skill\">\r\n                    <fa-icon [icon]=\"faTimesCircle\" class=\"icon\"></fa-icon>\r\n                    {{skill.name}}\r\n                  </mat-chip>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"skills-development\">\r\n                <h3>Development Plan</h3>\r\n                <mat-expansion-panel *ngFor=\"let dev of careerPath.requiredSkills.development\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>{{dev.skill.name}}</mat-panel-title>\r\n                    <mat-panel-description>{{dev.timeline}}</mat-panel-description>\r\n                  </mat-expansion-panel-header>\r\n                  <div class=\"resources-list\">\r\n                    <h4>Recommended Resources:</h4>\r\n                    <ul>\r\n                      <li *ngFor=\"let resource of dev.resources\">{{resource}}</li>\r\n                    </ul>\r\n                  </div>\r\n                </mat-expansion-panel>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Alternative Paths -->\r\n        <mat-card class=\"section-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>\r\n              <fa-icon [icon]=\"faLightbulb\" class=\"icon\"></fa-icon>\r\n              Alternative Career Paths\r\n            </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"alternative-paths\">\r\n              <mat-card *ngFor=\"let path of careerPath.alternativePaths\" class=\"path-card\">\r\n                <mat-card-header>\r\n                  <mat-card-title>{{path.role}}</mat-card-title>\r\n                  <mat-card-subtitle>Match Score: {{path.matchScore}}%</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                  <p>{{path.description}}</p>\r\n                  <div class=\"skills-list\">\r\n                    <mat-chip *ngFor=\"let skill of path.requiredSkills\">\r\n                      {{skill.name}}\r\n                    </mat-chip>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <div class=\"actions\">\r\n          <button mat-button (click)=\"resetCareerPath()\">Start Over</button>\r\n          <button mat-raised-button color=\"primary\" (click)=\"saveCareerPath()\">Save Career Path</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .career-path-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n      font-family: 'Poppins', sans-serif;\r\n    }\r\n\r\n    .initial-form {\r\n      max-width: 600px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 24px;\r\n    }\r\n\r\n    .section-card {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    .icon {\r\n      margin-right: 8px;\r\n    }\r\n\r\n    .step-label {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 100%;\r\n    }\r\n\r\n    .phase {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .duration {\r\n      color: #666;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .step-content {\r\n      padding: 16px 0;\r\n\r\n      h3 {\r\n        margin: 16px 0 8px 0;\r\n        color: #2c3e50;\r\n      }\r\n\r\n      ul {\r\n        margin: 0;\r\n        padding-left: 24px;\r\n      }\r\n    }\r\n\r\n    .education-list {\r\n      display: grid;\r\n      gap: 24px;\r\n    }\r\n\r\n    .education-item {\r\n      padding: 16px;\r\n      background-color: #f8f9fa;\r\n      border-radius: 8px;\r\n\r\n      h3 {\r\n        margin: 0 0 8px 0;\r\n        color: #2c3e50;\r\n      }\r\n\r\n      .duration {\r\n        color: #666;\r\n        margin-bottom: 16px;\r\n      }\r\n\r\n      ul {\r\n        margin: 0;\r\n        padding-left: 24px;\r\n      }\r\n    }\r\n\r\n    .skills-section {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 24px;\r\n    }\r\n\r\n    .skills-group {\r\n      h3 {\r\n        margin: 0 0 16px 0;\r\n        color: #2c3e50;\r\n      }\r\n    }\r\n\r\n    .skills-list {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n    }\r\n\r\n    .current-skill {\r\n      background-color: #d4edda;\r\n      color: #155724;\r\n    }\r\n\r\n    .missing-skill {\r\n      background-color: #f8d7da;\r\n      color: #721c24;\r\n    }\r\n\r\n    .skills-development {\r\n      h3 {\r\n        margin: 0 0 16px 0;\r\n        color: #2c3e50;\r\n      }\r\n    }\r\n\r\n    .resources-list {\r\n      padding: 16px 0;\r\n\r\n      h4 {\r\n        margin: 0 0 8px 0;\r\n        color: #2c3e50;\r\n      }\r\n\r\n      ul {\r\n        margin: 0;\r\n        padding-left: 24px;\r\n      }\r\n    }\r\n\r\n    .alternative-paths {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 16px;\r\n    }\r\n\r\n    .path-card {\r\n      height: 100%;\r\n    }\r\n\r\n    .actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 16px;\r\n      margin-top: 24px;\r\n    }\r\n\r\n    .error-message {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      padding: 12px;\r\n      margin-bottom: 16px;\r\n      background-color: #fdecea;\r\n      border: 1px solid #f5c6cb;\r\n      border-radius: 4px;\r\n      color: #721c24;\r\n\r\n      .icon {\r\n        color: #dc3545;\r\n      }\r\n    }\r\n\r\n    .button-content {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      min-width: 150px;\r\n      justify-content: center;\r\n    }\r\n\r\n    mat-spinner {\r\n      margin-right: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class CareerPathComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faGraduationCap = faGraduationCap;\r\n  faBriefcase = faBriefcase;\r\n  faLightbulb = faLightbulb;\r\n  faChartLine = faChartLine;\r\n  faCheckCircle = faCheckCircle;\r\n  faTimesCircle = faTimesCircle;\r\n  faArrowRight = faArrowRight;\r\n  faExclamationTriangle = faExclamationTriangle;\r\n\r\n  careerForm: FormGroup;\r\n  careerPath: CareerPath | null = null;\r\n  isLoading = false;\r\n  error: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private careerPathService: CareerPathService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.careerForm = this.fb.group({\r\n      targetRole: ['', Validators.required],\r\n      currentRole: ['', Validators.required],\r\n      yearsOfExperience: [0, [Validators.required, Validators.min(0)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Check if there's a career path ID in the URL\r\n    this.route.paramMap.subscribe(params => {\r\n      const pathId = params.get('id');\r\n      if (pathId) {\r\n        this.loadCareerPath(pathId);\r\n      }\r\n    });\r\n  }\r\n\r\n  generateCareerPath(): void {\r\n    if (this.careerForm.valid) {\r\n      this.isLoading = true;\r\n      this.error = null;\r\n\r\n      this.careerPathService.generateCareerPath(this.careerForm.value).subscribe({\r\n        next: (careerPath) => {\r\n          this.careerPath = careerPath;\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error generating career path:', error);\r\n          if (error.status === 401) {\r\n            this.error = 'Please log in to generate a career path.';\r\n          } else if (error.status === 500) {\r\n            this.error = 'Unable to generate career path. Please try again later.';\r\n          } else {\r\n            this.error = error.error?.message || 'Failed to generate career path. Please try again.';\r\n          }\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  loadCareerPath(id: string): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    this.careerPathService.getCareerPath(id).subscribe({\r\n      next: (careerPath) => {\r\n        this.careerPath = careerPath;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading career path:', error);\r\n        this.error = 'Failed to load career path. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetCareerPath(): void {\r\n    this.careerPath = null;\r\n    this.careerForm.reset();\r\n  }\r\n\r\n  saveCareerPath(): void {\r\n    if (this.careerPath) {\r\n      this.careerPathService.updateProgress(this.careerPath.id, {\r\n        progress: this.careerPath.progress,\r\n        isCompleted: this.careerPath.isCompleted\r\n      }).subscribe({\r\n        next: (updatedPath) => {\r\n          this.careerPath = updatedPath;\r\n          // Show success message or navigate\r\n        },\r\n        error: (error) => {\r\n          console.error('Error saving career path:', error);\r\n          this.error = 'Failed to save career path. Please try again.';\r\n        }\r\n      });\r\n    }\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faFileUpload, faFileDownload, faRobot, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { CVService, CV } from '../../../services/cv.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\n@Component({\r\n  selector: 'app-cv-generator',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"cv-generator-container\">\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Loading CV data...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"retryLoading()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- CV Generator Content -->\r\n      <ng-container *ngIf=\"!isLoading && !error\">\r\n        <!-- CV Upload Section -->\r\n        <mat-card class=\"cv-section\">\r\n          <mat-card-header>\r\n            <mat-card-title>Upload CV</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"upload-container\">\r\n              <input\r\n                type=\"file\"\r\n                #fileInput\r\n                (change)=\"onFileSelected($event)\"\r\n                accept=\".pdf,.doc,.docx,.txt\"\r\n                style=\"display: none\"\r\n              />\r\n              <button\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                (click)=\"fileInput.click()\"\r\n                [disabled]=\"isUploading\"\r\n              >\r\n                <fa-icon [icon]=\"faFileUpload\" class=\"icon\"></fa-icon>\r\n                Choose File\r\n              </button>\r\n              <span class=\"file-name\" *ngIf=\"selectedFile\">\r\n                {{selectedFile.name}}\r\n              </span>\r\n              <button\r\n                mat-raised-button\r\n                color=\"accent\"\r\n                (click)=\"uploadCV()\"\r\n                [disabled]=\"!selectedFile || isUploading\"\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n            <mat-progress-bar\r\n              *ngIf=\"isUploading\"\r\n              mode=\"determinate\"\r\n              [value]=\"uploadProgress\"\r\n            ></mat-progress-bar>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- AI CV Generation Section -->\r\n        <mat-card class=\"cv-section\">\r\n          <mat-card-header>\r\n            <mat-card-title>Generate CV with AI</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <p class=\"section-description\">\r\n              Let our AI analyze your profile and generate a professional CV tailored to your career goals.\r\n            </p>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              (click)=\"generateAICV()\"\r\n              [disabled]=\"isGenerating\"\r\n            >\r\n              <fa-icon [icon]=\"isGenerating ? faSpinner : faRobot\" class=\"icon\" [class.spinning]=\"isGenerating\"></fa-icon>\r\n              {{isGenerating ? 'Generating...' : 'Generate CV'}}\r\n            </button>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Current CV Section -->\r\n        <mat-card class=\"cv-section\" *ngIf=\"currentCV\">\r\n          <mat-card-header>\r\n            <mat-card-title>Current CV</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"cv-info\">\r\n              <p><strong>File Name:</strong> {{currentCV.fileName}}</p>\r\n              <p><strong>Last Updated:</strong> {{currentCV.updatedAt | date}}</p>\r\n              <div class=\"cv-actions\">\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                  (click)=\"downloadCV()\"\r\n                  [disabled]=\"isDownloading\"\r\n                >\r\n                  <fa-icon [icon]=\"faFileDownload\" class=\"icon\"></fa-icon>\r\n                  Download CV\r\n                </button>\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                  (click)=\"deleteCV()\"\r\n                  [disabled]=\"isDeleting\"\r\n                >\r\n                  Delete CV\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </ng-container>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .cv-generator-container {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 400px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .cv-section {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    .upload-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .file-name {\r\n      flex: 1;\r\n      color: #666;\r\n      font-size: 0.9rem;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .section-description {\r\n      color: #666;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .cv-info {\r\n      padding: 16px 0;\r\n    }\r\n\r\n    .cv-info p {\r\n      margin: 8px 0;\r\n      color: #666;\r\n    }\r\n\r\n    .cv-actions {\r\n      display: flex;\r\n      gap: 16px;\r\n      margin-top: 16px;\r\n    }\r\n\r\n    .icon {\r\n      margin-right: 8px;\r\n    }\r\n\r\n    .spinning {\r\n      animation: spin 1s linear infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n      from {\r\n        transform: rotate(0deg);\r\n      }\r\n      to {\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class CVGeneratorComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faFileUpload = faFileUpload;\r\n  faFileDownload = faFileDownload;\r\n  faRobot = faRobot;\r\n  faSpinner = faSpinner;\r\n\r\n  // Component state\r\n  isLoading = false;\r\n  isUploading = false;\r\n  isGenerating = false;\r\n  isDownloading = false;\r\n  isDeleting = false;\r\n  error: string | null = null;\r\n  uploadProgress = 0;\r\n  selectedFile: File | null = null;\r\n  currentCV: CV | null = null;\r\n\r\n  constructor(\r\n    private cvService: CVService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCurrentCV();\r\n  }\r\n\r\n  private loadCurrentCV(): void {\r\n    this.isLoading = true;\r\n    const user = this.authService.getCurrentUser();\r\n    if (user) {\r\n      this.cvService.getCV(user.id).subscribe({\r\n        next: (cv) => {\r\n          this.currentCV = cv;\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading CV:', error);\r\n          this.error = 'Failed to load CV. Please try again.';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    if (input.files && input.files.length > 0) {\r\n      this.selectedFile = input.files[0];\r\n    }\r\n  }\r\n\r\n  uploadCV(): void {\r\n    if (!this.selectedFile) return;\r\n\r\n    this.isUploading = true;\r\n    this.uploadProgress = 0;\r\n\r\n    this.cvService.uploadCV(this.selectedFile).subscribe({\r\n      next: (event) => {\r\n        const progress = this.cvService.getUploadProgress(event);\r\n        if (progress) {\r\n          this.uploadProgress = progress;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error uploading CV:', error);\r\n        this.error = 'Failed to upload CV. Please try again.';\r\n        this.isUploading = false;\r\n      },\r\n      complete: () => {\r\n        this.isUploading = false;\r\n        this.selectedFile = null;\r\n        this.loadCurrentCV();\r\n      }\r\n    });\r\n  }\r\n\r\n  generateAICV(): void {\r\n    this.isGenerating = true;\r\n    this.error = null;\r\n\r\n    this.cvService.generateAICV().subscribe({\r\n      next: (response) => {\r\n        this.currentCV = {\r\n          id: response.cv.id,\r\n          fileName: response.cv.fileName,\r\n          filePath: response.cv.downloadUrl,\r\n          extractedSkills: [],\r\n          userId: this.authService.getCurrentUser()?.id || '',\r\n          content: response.cv.content,\r\n          downloadUrl: response.cv.downloadUrl,\r\n          createdAt: new Date(),\r\n          updatedAt: new Date()\r\n        };\r\n        this.isGenerating = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error generating CV:', error);\r\n        this.error = 'Failed to generate CV. Please try again.';\r\n        this.isGenerating = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  downloadCV(): void {\r\n    if (!this.currentCV) return;\r\n\r\n    this.isDownloading = true;\r\n    this.cvService.downloadCV(this.currentCV.id).subscribe({\r\n      next: (blob) => {\r\n        this.cvService.saveFile(blob, this.currentCV!.fileName);\r\n        this.isDownloading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error downloading CV:', error);\r\n        this.error = 'Failed to download CV. Please try again.';\r\n        this.isDownloading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCV(): void {\r\n    if (!this.currentCV) return;\r\n\r\n    this.isDeleting = true;\r\n    this.cvService.deleteCV().subscribe({\r\n      next: () => {\r\n        this.currentCV = null;\r\n        this.isDeleting = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error deleting CV:', error);\r\n        this.error = 'Failed to delete CV. Please try again.';\r\n        this.isDeleting = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  retryLoading(): void {\r\n    this.error = null;\r\n    this.loadCurrentCV();\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { \r\n  faCheck, \r\n  faTimes, \r\n  faClock, \r\n  faFileAlt,\r\n  faBuilding,\r\n  faCalendarAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ApplicationService } from '../../../services/application.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\ninterface Application {\r\n  id: string;\r\n  jobId: string;\r\n  userId: string;\r\n  coverLetter: string;\r\n  status: string;\r\n  appliedAt: Date;\r\n  updatedAt: Date;\r\n  job?: {\r\n    title: string;\r\n    employer: {\r\n      company: string;\r\n    };\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'app-my-applications',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"applications-container\">\r\n      <h1>My Applications</h1>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Loading applications...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"loadApplications()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- Applications List -->\r\n      <div *ngIf=\"!isLoading && !error\" class=\"applications-list\">\r\n        <mat-card *ngFor=\"let application of applications\" class=\"application-card\">\r\n          <div class=\"application-header\">\r\n            <div class=\"job-info\">\r\n              <h2>{{application.job?.title}}</h2>\r\n              <p class=\"company\">\r\n                <fa-icon [icon]=\"faBuilding\" class=\"icon\"></fa-icon>\r\n                {{application.job?.employer?.company}}\r\n              </p>\r\n            </div>\r\n            <div class=\"status-badge\" [class]=\"application.status.toLowerCase()\">\r\n              <fa-icon [icon]=\"getStatusIcon(application.status)\" class=\"icon\"></fa-icon>\r\n              {{application.status}}\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"application-details\">\r\n            <div class=\"detail-item\">\r\n              <fa-icon [icon]=\"faCalendarAlt\" class=\"icon\"></fa-icon>\r\n              <span>Applied: {{application.appliedAt | date}}</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <fa-icon [icon]=\"faFileAlt\" class=\"icon\"></fa-icon>\r\n              <span>Last Updated: {{application.updatedAt | date}}</span>\r\n            </div>\r\n          </div>\r\n        </mat-card>\r\n\r\n        <!-- No Applications State -->\r\n        <div *ngIf=\"applications.length === 0\" class=\"no-applications\">\r\n          <p>You haven't applied to any jobs yet.</p>\r\n          <button mat-raised-button color=\"primary\" routerLink=\"/job-seeker/job-search\">\r\n            Browse Jobs\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .applications-container {\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n      padding: 24px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .applications-list {\r\n      display: grid;\r\n      gap: 16px;\r\n    }\r\n\r\n    .application-card {\r\n      padding: 20px;\r\n    }\r\n\r\n    .application-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .job-info h2 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    .company {\r\n      color: #666;\r\n      margin: 4px 0;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .status-badge {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      gap: 6px;\r\n      padding: 6px 12px;\r\n      border-radius: 16px;\r\n      font-size: 0.9rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .status-badge.pending {\r\n      background: #fff3cd;\r\n      color: #856404;\r\n    }\r\n\r\n    .status-badge.accepted {\r\n      background: #d4edda;\r\n      color: #155724;\r\n    }\r\n\r\n    .status-badge.rejected {\r\n      background: #f8d7da;\r\n      color: #721c24;\r\n    }\r\n\r\n    .application-details {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n      gap: 16px;\r\n      margin-top: 16px;\r\n      padding-top: 16px;\r\n      border-top: 1px solid #eee;\r\n    }\r\n\r\n    .detail-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      color: #666;\r\n    }\r\n\r\n    .icon {\r\n      color: #666;\r\n    }\r\n\r\n    .no-applications {\r\n      text-align: center;\r\n      padding: 48px;\r\n      background: #f8f9fa;\r\n      border-radius: 8px;\r\n    }\r\n\r\n    .no-applications p {\r\n      margin-bottom: 16px;\r\n      color: #666;\r\n    }\r\n  `]\r\n})\r\nexport class MyApplicationsComponent implements OnInit {\r\n  applications: Application[] = [];\r\n  isLoading = true;\r\n  error: string | null = null;\r\n\r\n  // Font Awesome icons\r\n  faCheck = faCheck;\r\n  faTimes = faTimes;\r\n  faClock = faClock;\r\n  faFileAlt = faFileAlt;\r\n  faBuilding = faBuilding;\r\n  faCalendarAlt = faCalendarAlt;\r\n\r\n  constructor(\r\n    private applicationService: ApplicationService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadApplications();\r\n  }\r\n\r\n  loadApplications(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    const user = this.authService.getCurrentUser();\r\n    if (!user) {\r\n      this.error = 'No user is currently logged in';\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.applicationService.getUserApplications(user.id).subscribe({\r\n      next: (applications) => {\r\n        this.applications = applications;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading applications:', error);\r\n        this.error = 'Failed to load applications. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getStatusIcon(status: string) {\r\n    switch (status.toLowerCase()) {\r\n      case 'accepted':\r\n        return this.faCheck;\r\n      case 'rejected':\r\n        return this.faTimes;\r\n      default:\r\n        return this.faClock;\r\n    }\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faCheck, faTimes, faCalendarAlt, faBuilding, faBriefcase } from '@fortawesome/free-solid-svg-icons';\r\nimport { ApplicationService, Interview } from '../../../services/application.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { MatProgressSpinnerModule, MatSpinner } from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'app-interviews',\r\n  standalone: true,\r\n  imports: [\r\n    MatProgressSpinnerModule,\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"interviews-container\">\r\n      <h2>Your Interviews</h2>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n        <p>Loading your interviews...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div *ngIf=\"error\" class=\"error-container\">\r\n        <p class=\"error-message\">{{error}}</p>\r\n        <button mat-button color=\"primary\" (click)=\"loadInterviews()\">Retry</button>\r\n      </div>\r\n\r\n      <!-- Interviews List -->\r\n      <div *ngIf=\"!isLoading && !error\" class=\"interviews-list\">\r\n        <div *ngIf=\"interviews.length === 0\" class=\"no-interviews\">\r\n          <p>You don't have any interviews scheduled yet.</p>\r\n        </div>\r\n\r\n        <div *ngFor=\"let interview of interviews\" class=\"interview-card\">\r\n          <div class=\"interview-header\">\r\n            <h3>{{interview.jobTitle}}</h3>\r\n            <span class=\"company-name\">{{interview.companyName}}</span>\r\n          </div>\r\n\r\n          <div class=\"interview-details\">\r\n            <div class=\"detail-item\">\r\n              <fa-icon [icon]=\"faCalendarAlt\"></fa-icon>\r\n              <span>{{interview.scheduledTime | date:'medium'}}</span>\r\n            </div>\r\n            <div class=\"detail-item\" *ngIf=\"interview.location\">\r\n              <fa-icon [icon]=\"faBuilding\"></fa-icon>\r\n              <span>{{interview.location}}</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <fa-icon [icon]=\"faBriefcase\"></fa-icon>\r\n              <span>{{interview.status | titlecase}}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"interview-notes\" *ngIf=\"interview.notes\">\r\n            <p>{{interview.notes}}</p>\r\n          </div>\r\n\r\n          <div class=\"interview-actions\" *ngIf=\"interview.status === 'pending'\">\r\n            <button mat-button color=\"primary\" (click)=\"respondToInterview(interview.id, 'accepted')\">\r\n              <fa-icon [icon]=\"faCheck\"></fa-icon>\r\n              Accept\r\n            </button>\r\n            <button mat-button color=\"warn\" (click)=\"respondToInterview(interview.id, 'rejected')\">\r\n              <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n              Reject\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .interviews-container {\r\n      padding: 24px;\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    h2 {\r\n      color: #2c3e50;\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      min-height: 200px;\r\n      gap: 16px;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 1.1rem;\r\n    }\r\n\r\n    .interviews-list {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 24px;\r\n    }\r\n\r\n    .interview-card {\r\n      background: white;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .interview-header {\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .interview-header h3 {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    .company-name {\r\n      color: #666;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .interview-details {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 12px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .detail-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      color: #666;\r\n    }\r\n\r\n    .interview-notes {\r\n      background: #f8f9fa;\r\n      padding: 12px;\r\n      border-radius: 4px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .interview-notes p {\r\n      margin: 0;\r\n      color: #666;\r\n    }\r\n\r\n    .interview-actions {\r\n      display: flex;\r\n      gap: 12px;\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .no-interviews {\r\n      grid-column: 1 / -1;\r\n      text-align: center;\r\n      padding: 48px;\r\n      background: #f8f9fa;\r\n      border-radius: 8px;\r\n      color: #666;\r\n    }\r\n  `]\r\n})\r\nexport class InterviewsComponent implements OnInit {\r\n  interviews: Interview[] = [];\r\n  isLoading = false;\r\n  error: string | null = null;\r\n\r\n  // Font Awesome icons\r\n  faCheck = faCheck;\r\n  faTimes = faTimes;\r\n  faCalendarAlt = faCalendarAlt;\r\n  faBuilding = faBuilding;\r\n  faBriefcase = faBriefcase;\r\n\r\n  constructor(\r\n    private applicationService: ApplicationService,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadInterviews();\r\n  }\r\n\r\n  loadInterviews(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    const user = this.authService.getCurrentUser();\r\n    if (!user) {\r\n      this.error = 'Please log in to view your interviews.';\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.applicationService.getUserInterviews(user.id).subscribe({\r\n      next: (interviews: Interview[]) => {\r\n        this.interviews = interviews;\r\n        this.isLoading = false;\r\n      },\r\n      error: (error: Error) => {\r\n        console.error('Error loading interviews:', error);\r\n        this.error = 'Failed to load interviews. Please try again.';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  respondToInterview(interviewId: string, response: 'accepted' | 'rejected'): void {\r\n    this.applicationService.respondToInterview(interviewId, response).subscribe({\r\n      next: () => {\r\n        const message = response === 'accepted' \r\n          ? 'Interview accepted successfully!' \r\n          : 'Interview rejected successfully!';\r\n        \r\n        this.snackBar.open(message, 'Close', {\r\n          duration: 5000,\r\n          panelClass: ['success-snackbar']\r\n        });\r\n\r\n        // Update the interview status in the local array\r\n        const interview = this.interviews.find(i => i.id === interviewId);\r\n        if (interview) {\r\n          interview.status = response;\r\n        }\r\n      },\r\n      error: (error: Error) => {\r\n        console.error('Error responding to interview:', error);\r\n        this.snackBar.open('Failed to respond to interview. Please try again.', 'Close', {\r\n          duration: 5000,\r\n          panelClass: ['error-snackbar']\r\n        });\r\n      }\r\n    });\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { ChatbotService, ChatMessage, ChatResponse, CandidateQueryResponse, JobQueryResponse } from '../../../services/chatbot.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-chatbot',\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"chat-container\">\r\n      <div class=\"chat-header\">\r\n        <h2>Chat Assistant</h2>\r\n        <button class=\"clear-btn\" (click)=\"clearHistory()\" [disabled]=\"loading\">\r\n          Clear Chat History\r\n        </button>\r\n      </div>\r\n      <div class=\"messages-container\">\r\n        <div *ngFor=\"let message of messages\" \r\n             [ngClass]=\"{'user-message': isUserMessage(message), 'bot-message': !isUserMessage(message)}\"\r\n             class=\"message\">\r\n          <div class=\"message-content\">{{ formatMessage(message) }}</div>\r\n          <div class=\"message-timestamp\">{{ formatTimestamp(message.timestamp) }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input type=\"text\" \r\n               [(ngModel)]=\"newMessage\" \r\n               (keyup.enter)=\"sendMessage(newMessage)\"\r\n               placeholder=\"Type your message...\"\r\n               [disabled]=\"loading\">\r\n        <button (click)=\"sendMessage(newMessage)\" [disabled]=\"loading || !newMessage\">\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chat-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 90%;\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n    }\r\n\r\n    .chat-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .clear-btn {\r\n      padding: 8px 16px;\r\n      background-color: #dc3545;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .clear-btn:hover {\r\n      background-color: #c82333;\r\n    }\r\n\r\n    .clear-btn:disabled {\r\n      background-color: #e9ecef;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    .messages-container {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      padding: 20px;\r\n      background-color: #f8f9fa;\r\n      border-radius: 8px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .message {\r\n      margin-bottom: 15px;\r\n      padding: 10px;\r\n      border-radius: 8px;\r\n      max-width: 80%;\r\n    }\r\n\r\n    .user-message {\r\n      background-color: #007bff;\r\n      color: white;\r\n      margin-left: auto;\r\n    }\r\n\r\n    .bot-message {\r\n      background-color: #e9ecef;\r\n      color: #212529;\r\n      margin-right: auto;\r\n    }\r\n\r\n    .message-content {\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    .message-timestamp {\r\n      font-size: 0.8em;\r\n      opacity: 0.7;\r\n    }\r\n\r\n    .input-container {\r\n      display: flex;\r\n      gap: 10px;\r\n    }\r\n\r\n    input {\r\n      flex: 1;\r\n      padding: 10px;\r\n      border: 1px solid #ced4da;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    button {\r\n      padding: 10px 20px;\r\n      background-color: #007bff;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    button:hover {\r\n      background-color: #0056b3;\r\n    }\r\n\r\n    button:disabled {\r\n      background-color: #e9ecef;\r\n      cursor: not-allowed;\r\n    }\r\n  `]\r\n})\r\nexport class ChatbotComponent implements OnInit {\r\n  messages: ChatMessage[] = [];\r\n  loading = false;\r\n  newMessage = '';\r\n\r\n  constructor(private chatbotService: ChatbotService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadChatHistory();\r\n  }\r\n\r\n  // Load chat history\r\n  loadChatHistory() {\r\n    this.chatbotService.getChatHistory().subscribe({\r\n      next: (messages) => {\r\n        this.messages = messages;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading chat history:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Clear chat history\r\n  clearHistory() {\r\n    if (confirm('Are you sure you want to clear all chat history?')) {\r\n      this.loading = true;\r\n      this.chatbotService.clearHistory().subscribe({\r\n        next: () => {\r\n          this.messages = [];\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error clearing chat history:', error);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Send message to chatbot\r\n  sendMessage(message: string) {\r\n    if (!message.trim()) return;\r\n    \r\n    this.loading = true;\r\n    this.chatbotService.sendMessage(message).subscribe({\r\n      next: (response: ChatResponse) => {\r\n        this.loadChatHistory(); // Reload messages to get the updated history\r\n        this.newMessage = ''; // Clear input\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error sending message:', error);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Query candidates (for employers)\r\n  searchCandidates(query: string) {\r\n    this.chatbotService.queryCandidates(query).subscribe({\r\n      next: (response: CandidateQueryResponse) => {\r\n        console.log('Search summary:', response.summary);\r\n        console.log('Found candidates:', response.candidates);\r\n        console.log('Applied filters:', response.filters);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error searching candidates:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Query jobs (for job seekers)\r\n  searchJobs(query: string) {\r\n    this.chatbotService.queryJobs(query).subscribe({\r\n      next: (response: JobQueryResponse) => {\r\n        console.log('Search summary:', response.summary);\r\n        console.log('Found jobs:', response.jobs);\r\n        console.log('Applied filters:', response.filters);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error searching jobs:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Format message for display\r\n  formatMessage(message: ChatMessage): string {\r\n    return this.chatbotService.formatMessage(message);\r\n  }\r\n\r\n  // Check if message is from user\r\n  isUserMessage(message: ChatMessage): boolean {\r\n    return this.chatbotService.isUserMessage(message);\r\n  }\r\n\r\n  // Format timestamp\r\n  formatTimestamp(timestamp: Date): string {\r\n    return this.chatbotService.formatTimestamp(timestamp);\r\n  }\r\n\r\n  // Format match score\r\n  formatMatchScore(score: number): string {\r\n    return this.chatbotService.formatMatchScore(score);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ExperienceService, CreateExperienceData } from '../../../services/experience.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-experience',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule\r\n  ],\r\n  template: `\r\n    <div class=\"experience-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Work Experience</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form [formGroup]=\"experienceForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Company Name</mat-label>\r\n              <input matInput formControlName=\"companyName\" placeholder=\"Enter company name\">\r\n              <mat-error *ngIf=\"experienceForm.get('companyName')?.hasError('required')\">\r\n                Company name is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Position</mat-label>\r\n              <input matInput formControlName=\"position\" placeholder=\"Enter your position\">\r\n              <mat-error *ngIf=\"experienceForm.get('position')?.hasError('required')\">\r\n                Position is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"date-range\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Start Date</mat-label>\r\n                <input matInput [matDatepicker]=\"startPicker\" formControlName=\"startDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startPicker></mat-datepicker>\r\n                <mat-error *ngIf=\"experienceForm.get('startDate')?.hasError('required')\">\r\n                  Start date is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>End Date</mat-label>\r\n                <input matInput [matDatepicker]=\"endPicker\" formControlName=\"endDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #endPicker></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Description</mat-label>\r\n              <textarea matInput formControlName=\"description\" rows=\"4\" \r\n                placeholder=\"Describe your responsibilities and achievements\"></textarea>\r\n              <mat-error *ngIf=\"experienceForm.get('description')?.hasError('required')\">\r\n                Description is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"form-actions\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\" \r\n                [disabled]=\"!experienceForm.valid || isLoading\">\r\n                <mat-spinner diameter=\"20\" *ngIf=\"isLoading\"></mat-spinner>\r\n                <span *ngIf=\"!isLoading\">Save Experience</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .experience-container {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .date-range {\r\n      display: flex;\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .date-range mat-form-field {\r\n      flex: 1;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .form-actions button {\r\n      min-width: 120px;\r\n    }\r\n\r\n    mat-spinner {\r\n      display: inline-block;\r\n      margin-right: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class ExperienceComponent implements OnInit {\r\n  experienceForm: FormGroup;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private experienceService: ExperienceService,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.experienceForm = this.fb.group({\r\n      companyName: ['', Validators.required],\r\n      position: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      endDate: [''],\r\n      description: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize component\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.experienceForm.valid) {\r\n      this.isLoading = true;\r\n      const currentUser = this.authService.getCurrentUser();\r\n      \r\n      if (!currentUser) {\r\n        this.snackBar.open('User not authenticated', 'Close', { duration: 3000 });\r\n        this.isLoading = false;\r\n        return;\r\n      }\r\n\r\n      const experienceData: CreateExperienceData = {\r\n        company: this.experienceForm.value.companyName,\r\n        title: this.experienceForm.value.position,\r\n        startDate: this.experienceForm.value.startDate,\r\n        endDate: this.experienceForm.value.endDate,\r\n        current: !this.experienceForm.value.endDate,\r\n        description: this.experienceForm.value.description\r\n      };\r\n\r\n      this.experienceService.createExperience(experienceData).subscribe({\r\n        next: (response) => {\r\n          this.snackBar.open('Experience saved successfully', 'Close', { duration: 3000 });\r\n          this.experienceForm.reset();\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error saving experience:', error);\r\n          this.snackBar.open('Error saving experience. Please try again.', 'Close', { duration: 3000 });\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n} ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { EducationService, CreateEducationData } from '../../../services/education.service';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-education',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule\r\n  ],\r\n  template: `\r\n    <div class=\"education-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Education</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form [formGroup]=\"educationForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Institution Name</mat-label>\r\n              <input matInput formControlName=\"institutionName\" placeholder=\"Enter institution name\">\r\n              <mat-error *ngIf=\"educationForm.get('institutionName')?.hasError('required')\">\r\n                Institution name is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Degree/Certificate</mat-label>\r\n              <input matInput formControlName=\"degree\" placeholder=\"Enter your degree or certificate\">\r\n              <mat-error *ngIf=\"educationForm.get('degree')?.hasError('required')\">\r\n                Degree is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Field of Study</mat-label>\r\n              <input matInput formControlName=\"fieldOfStudy\" placeholder=\"Enter your field of study\">\r\n              <mat-error *ngIf=\"educationForm.get('fieldOfStudy')?.hasError('required')\">\r\n                Field of study is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"date-range\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Start Date</mat-label>\r\n                <input matInput [matDatepicker]=\"startPicker\" formControlName=\"startDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startPicker></mat-datepicker>\r\n                <mat-error *ngIf=\"educationForm.get('startDate')?.hasError('required')\">\r\n                  Start date is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>End Date</mat-label>\r\n                <input matInput [matDatepicker]=\"endPicker\" formControlName=\"endDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #endPicker></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Grade/GPA</mat-label>\r\n              <input matInput formControlName=\"grade\" placeholder=\"Enter your grade or GPA\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Description</mat-label>\r\n              <textarea matInput formControlName=\"description\" rows=\"4\" \r\n                placeholder=\"Describe your academic achievements and activities\"></textarea>\r\n            </mat-form-field>\r\n\r\n            <div class=\"form-actions\">\r\n              <button mat-raised-button color=\"primary\" type=\"submit\" \r\n                [disabled]=\"!educationForm.valid || isLoading\">\r\n                <mat-spinner diameter=\"20\" *ngIf=\"isLoading\"></mat-spinner>\r\n                <span *ngIf=\"!isLoading\">Save Education</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .education-container {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 20px;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .date-range {\r\n      display: flex;\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .date-range mat-form-field {\r\n      flex: 1;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .form-actions button {\r\n      min-width: 120px;\r\n    }\r\n\r\n    mat-spinner {\r\n      display: inline-block;\r\n      margin-right: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class EducationComponent implements OnInit {\r\n  educationForm: FormGroup;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private educationService: EducationService,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.educationForm = this.fb.group({\r\n      institutionName: ['', Validators.required],\r\n      degree: ['', Validators.required],\r\n      fieldOfStudy: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      endDate: [''],\r\n      grade: [''],\r\n      description: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Initialize component\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.educationForm.valid) {\r\n      this.isLoading = true;\r\n      const currentUser = this.authService.getCurrentUser();\r\n      \r\n      if (!currentUser) {\r\n        this.snackBar.open('User not authenticated', 'Close', { duration: 3000 });\r\n        this.isLoading = false;\r\n        return;\r\n      }\r\n\r\n      const educationData: CreateEducationData = {\r\n        institution: this.educationForm.value.institutionName,\r\n        degree: this.educationForm.value.degree,\r\n        fieldOfStudy: this.educationForm.value.fieldOfStudy,\r\n        startDate: this.educationForm.value.startDate,\r\n        endDate: this.educationForm.value.endDate,\r\n        current: !this.educationForm.value.endDate,\r\n        description: this.educationForm.value.description\r\n      };\r\n\r\n      this.educationService.createEducation(educationData).subscribe({\r\n        next: (response) => {\r\n          this.snackBar.open('Education saved successfully', 'Close', { duration: 3000 });\r\n          this.educationForm.reset();\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error saving education:', error);\r\n          this.snackBar.open('Error saving education. Please try again.', 'Close', { duration: 3000 });\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n} ","import { Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ProfileUpdateComponent } from './profile-update/profile-update.component';\r\nimport { JobMatchingComponent } from './job-matching/job-matching.component';\r\nimport { JobSearchComponent } from './job-search/job-search.component';\r\nimport { CareerPathComponent } from './career-path/career-path.component';\r\nimport { CVGeneratorComponent } from './cv-generator/cv-generator.component';\r\nimport { MyApplicationsComponent } from './my-applications/my-applications.component';\r\nimport { InterviewsComponent } from './interviews/interviews.component';\r\nimport { AiAssistantComponent } from './ai-assistant/ai-assistant.component';\r\nimport { ChatbotComponent } from './chatbot/chatbot.component';\r\nimport { ExperienceComponent } from './experience/experience.component';\r\nimport { EducationComponent } from './education/education.component';\r\n\r\nexport const JOB_SEEKER_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'profile', pathMatch: 'full' },\r\n      { path: 'profile', component: ProfileComponent },\r\n      { path: 'profile-update', component: ProfileUpdateComponent },\r\n      { path: 'job-matching', component: JobMatchingComponent },\r\n      { path: 'job-search', component: JobSearchComponent },\r\n      { path: 'career-path', component: CareerPathComponent },\r\n      { path: 'cv-generator', component: CVGeneratorComponent },\r\n      { path: 'applications', component: MyApplicationsComponent },\r\n      { path: 'interviews', component: InterviewsComponent },\r\n      // { path: 'chatbot', component: AiAssistantComponent }\r\n      { path: 'chatbot', component: ChatbotComponent },\r\n      { path: 'experience', component: ExperienceComponent },\r\n      { path: 'education', component: EducationComponent }\r\n    ]\r\n  }\r\n]; ","import { inject } from '@angular/core';\r\nimport { Router, type CanActivateFn } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if (!authService.isAuthenticated()) {\r\n    router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  const requiredRole = route.data['role'];\r\n  if (requiredRole && !authService.hasRole(requiredRole)) {\r\n    router.navigate(['/']);\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}; ","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { \r\n  faBars, \r\n  faUser, \r\n  faEdit, \r\n  faBriefcase, \r\n  faRobot, \r\n  faUsers, \r\n  faFileAlt, \r\n  faComments,\r\n  faFileContract,\r\n  faSignOutAlt,\r\n  faBuilding\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-employer-dashboard',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"dashboard-container\">\r\n      <!-- Header -->\r\n      <mat-toolbar color=\"primary\" class=\"dashboard-header\">\r\n        <button mat-icon-button (click)=\"toggleSidenav()\">\r\n          <fa-icon [icon]=\"faBars\"></fa-icon>\r\n        </button>\r\n        <span class=\"brand-name\">EmployBridge</span>\r\n        <span class=\"spacer\"></span>\r\n        <div class=\"user-info\">\r\n          <span class=\"user-name\">{{userName}}</span>\r\n          <span class=\"user-role\">Employer</span>\r\n        </div>\r\n        <button mat-icon-button class=\"logout-button\" (click)=\"logout()\" matTooltip=\"Logout\" title=\"Logout\">\r\n          <fa-icon [icon]=\"faSignOutAlt\"></fa-icon>\r\n        </button>\r\n      </mat-toolbar>\r\n\r\n      <!-- Side Navigation -->\r\n      <mat-sidenav-container class=\"sidenav-container\">\r\n        <mat-sidenav #sidenav mode=\"side\" opened class=\"sidenav\">\r\n          <mat-nav-list>\r\n            <!-- Profile Section -->\r\n            <!-- Commented out profile section\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Profile</h3>\r\n              <a mat-list-item routerLink=\"profile\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faUser\" class=\"nav-icon\"></fa-icon>\r\n                <span>Company Profile</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"profile-update\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faEdit\" class=\"nav-icon\"></fa-icon>\r\n                <span>Update Profile</span>\r\n              </a>\r\n            </div>\r\n            -->\r\n\r\n            <!-- Job Management Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Job Management</h3>\r\n              <a mat-list-item routerLink=\"jobs-posted\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faBriefcase\" class=\"nav-icon\"></fa-icon>\r\n                <span>Jobs Posted</span>\r\n              </a>\r\n            \r\n              <a mat-list-item routerLink=\"job-posting\" [queryParams]=\"{mode: 'edit'}\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faEdit\" class=\"nav-icon\"></fa-icon>\r\n                <span>Update Jobs</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"job-generation\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faFileContract\" class=\"nav-icon\"></fa-icon>\r\n                <span>Job Generation</span>\r\n              </a>\r\n            </div>\r\n\r\n            <!-- Candidates Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Candidates</h3>\r\n              <a mat-list-item routerLink=\"candidates\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faUsers\" class=\"nav-icon\"></fa-icon>\r\n                <span>View Candidates</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"applications\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faFileAlt\" class=\"nav-icon\"></fa-icon>\r\n                <span>Applications</span>\r\n              </a>\r\n            </div>\r\n\r\n            <!-- Tools Section -->\r\n            <div class=\"nav-section\">\r\n              <h3 class=\"nav-section-title\">Tools</h3>\r\n              <a mat-list-item routerLink=\"chatbot\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faComments\" class=\"nav-icon\"></fa-icon>\r\n                <span>AI Assistant</span>\r\n              </a>\r\n              <a mat-list-item routerLink=\"ai-recommendations\" routerLinkActive=\"active\">\r\n                <fa-icon [icon]=\"faRobot\" class=\"nav-icon\"></fa-icon>\r\n                <span>AI Candidate Recommendations</span>\r\n              </a>\r\n            </div>\r\n          </mat-nav-list>\r\n        </mat-sidenav>\r\n\r\n        <!-- Main Content -->\r\n        <mat-sidenav-content class=\"main-content\">\r\n          <router-outlet></router-outlet>\r\n        </mat-sidenav-content>\r\n      </mat-sidenav-container>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .dashboard-container {\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    }\r\n\r\n    .dashboard-header {\r\n      background: linear-gradient(135deg, #2ecc71, #27ae60);\r\n      color: white;\r\n      padding: 0 16px;\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    }\r\n\r\n    .brand-name {\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      margin-left: 16px;\r\n      letter-spacing: -0.5px;\r\n    }\r\n\r\n    .spacer {\r\n      flex: 1 1 auto;\r\n    }\r\n\r\n    .user-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      margin-right: 16px;\r\n    }\r\n\r\n    .user-name {\r\n      font-weight: 500;\r\n      letter-spacing: -0.2px;\r\n    }\r\n\r\n    .user-role {\r\n      font-size: 0.9rem;\r\n      opacity: 0.8;\r\n      font-weight: 400;\r\n    }\r\n\r\n    .logout-button {\r\n      color: white;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    .logout-button:hover {\r\n      background-color: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .sidenav-container {\r\n      flex: 1;\r\n      background: #f5f6fa;\r\n    }\r\n\r\n    .sidenav {\r\n      width: 280px;\r\n      background: white;\r\n      border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n    }\r\n\r\n    .nav-section {\r\n      padding: 16px 0;\r\n    }\r\n\r\n    .nav-section-title {\r\n      padding: 0 16px;\r\n      margin: 0;\r\n      font-size: 0.9rem;\r\n      font-weight: 600;\r\n      color: #666;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.5px;\r\n    }\r\n\r\n    .mat-nav-list {\r\n      padding-top: 8px;\r\n    }\r\n\r\n    .mat-list-item {\r\n      height: 48px;\r\n      margin: 4px 8px;\r\n      border-radius: 8px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .mat-list-item.active {\r\n      background: rgba(46, 204, 113, 0.1);\r\n      color: #2ecc71;\r\n    }\r\n\r\n    .nav-icon {\r\n      margin-right: 16px;\r\n      color: #666;\r\n      width: 20px;\r\n      text-align: center;\r\n    }\r\n\r\n    .mat-list-item.active .nav-icon {\r\n      color: #2ecc71;\r\n    }\r\n\r\n    .main-content {\r\n      padding: 24px;\r\n      background: #f5f6fa;\r\n    }\r\n  `]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  // Font Awesome icons\r\n  faBars = faBars;\r\n  faUser = faUser;\r\n  faEdit = faEdit;\r\n  faBriefcase = faBriefcase;\r\n  faRobot = faRobot;\r\n  faUsers = faUsers;\r\n  faFileAlt = faFileAlt;\r\n  faComments = faComments;\r\n  faFileContract = faFileContract;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faBuilding = faBuilding;\r\n\r\n  userName: string = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    const currentUser = this.authService.getCurrentUser();\r\n    if (currentUser) {\r\n      this.userName = currentUser.name;\r\n    }\r\n  }\r\n\r\n  toggleSidenav(): void {\r\n    // Implement sidenav toggle logic\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout().subscribe({\r\n      next: () => {\r\n        // The AuthService will handle navigation to login page\r\n      },\r\n      error: (error) => {\r\n        console.error('Error during logout:', error);\r\n        // Even if there's an error, we should still clear the session\r\n        this.authService.handleUnauthorized();\r\n      }\r\n    });\r\n  }\r\n} ","import { Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nexport const EMPLOYER_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'jobs-posted',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'job-posting/:id',\r\n        loadComponent: () => import('./edit-job/edit-job.component').then(m => m.EditJobComponent)\r\n      },\r\n      {\r\n        path: 'profile',\r\n        loadComponent: () => import('./profile/profile.component').then(m => m.ProfileComponent)\r\n      },\r\n      {\r\n        path: 'profile-update',\r\n        loadComponent: () => import('./profile-update/profile-update.component').then(m => m.ProfileUpdateComponent)\r\n      },\r\n      {\r\n        path: 'jobs-posted',\r\n        loadComponent: () => import('./jobs-posted/jobs-posted.component').then(m => m.JobsPostedComponent)\r\n      },\r\n      {\r\n        path: 'job-posting',\r\n        loadComponent: () => import('./job-posting/job-posting.component').then(m => m.JobPostingComponent)\r\n      },\r\n      {\r\n        path: 'job-generation',\r\n        loadComponent: () => import('./job-generation/job-generation.component').then(m => m.JobGenerationComponent)\r\n      },\r\n      {\r\n        path: 'candidates',\r\n        loadComponent: () => import('./candidates/candidates.component').then(m => m.CandidatesComponent)\r\n      },\r\n      {\r\n        path: 'applications',\r\n        loadComponent: () => import('./applications/applications.component').then(m => m.ApplicationsComponent)\r\n      },\r\n      {\r\n        path: 'chatbot',\r\n        loadComponent: () => import('./chatbot/chatbot.component').then(m => m.ChatbotComponent)\r\n      },\r\n      {\r\n        path: 'ai-recommendations',\r\n        loadComponent: () => import('./ai-recommendations/ai-recommendations.component').then(m => m.AIRecommendationsComponent)\r\n      }\r\n    ]\r\n  }\r\n]; ","import { Routes } from '@angular/router';\r\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { JOB_SEEKER_ROUTES } from './components/job-seeker-components/job-seeker.routes';\r\nimport { authGuard } from './guards/auth.guard';\r\nimport { EMPLOYER_ROUTES } from './components/employer-components/employer.routes';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: LandingPageComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { \r\n    path: 'job-seeker', \r\n    children: JOB_SEEKER_ROUTES,\r\n    canActivate: [authGuard],\r\n    data: { role: 'job_seeker' }\r\n  },\r\n  {\r\n    path: 'employer',\r\n    children: EMPLOYER_ROUTES,\r\n    canActivate: [authGuard],\r\n    data: { role: 'employer' }\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n]; ","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const AuthInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  const token = authService.getToken();\r\n  \r\n  if (token) {\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n  }\r\n  \r\n  return next(req);\r\n}; ","import { ApplicationConfig } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\r\nimport { routes } from './app.routes';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideHttpClient(\r\n      withInterceptors([AuthInterceptor])\r\n    )\r\n  ]\r\n};\r\n","import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, CommonModule],\r\n  template: '<router-outlet></router-outlet>'\r\n})\r\nexport class AppComponent {\r\n  title = 'EmployBridge AI';\r\n}\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+BI,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,GAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAI;;;;AAF3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,IAAA;AACC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,KAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,WAAA;;;;;AAkBD,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;;AATJ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAuE,GAAA,OAAA,EAAA;AAEnE,IAAA,oBAAA,GAAA,OAAA,EAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8B,GAAA,IAAA;AACxB,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AACxB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA,EAAI,EACvB;AAER,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA+B,IAAA,iBAAA,EAAA;AAAuB,IAAA,uBAAA,EAAI;;;;AATnD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,eAAA,OAAA,uBAAA,EAAyB,OAAA,eAAA,IAAA;AAExB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,eAAA,IAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,eAAA,IAAA;AAIwC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,0BAAA,GAAA,GAAA,EAAA,YAAA,eAAA,MAAA,CAAA;AAEhB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,eAAA,OAAA;;;AD5C/B,IAAO,uBAAP,MAAO,sBAAoB;EAgDX;EA/CpB,WAAW;IACT;MACE,MAAM;MACN,OAAO;MACP,aAAa;;IAEf;MACE,MAAM;MACN,OAAO;MACP,aAAa;;IAEf;MACE,MAAM;MACN,OAAO;MACP,aAAa;;IAEf;MACE,MAAM;MACN,OAAO;MACP,aAAa;;;EAIjB,eAAe;IACb;MACE,MAAM;MACN,MAAM;MACN,QAAQ;MACR,SAAS;MACT,OAAO;;IAET;MACE,MAAM;MACN,MAAM;MACN,QAAQ;MACR,SAAS;MACT,OAAO;;IAET;MACE,MAAM;MACN,MAAM;MACN,QAAQ;MACR,SAAS;MACT,OAAO;;;EAIX,YAAoB,QAAc;AAAd,SAAA,SAAA;EAAiB;EAErC,gBAAgB,WAAiB;AAC/B,UAAM,UAAU,SAAS,eAAe,SAAS;AACjD,QAAI,SAAS;AACX,cAAQ,eAAe,EAAE,UAAU,SAAQ,CAAE;IAC/C;EACF;EAEA,kBAAe;AACb,SAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;EACjC;EAEA,mBAAgB;AACd,SAAK,OAAO,SAAS,CAAC,SAAS,CAAC;EAClC;;qCA/DW,uBAAoB,4BAAA,MAAA,CAAA;EAAA;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,aAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,GAAA,CAAA,MAAA,QAAA,GAAA,cAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,GAAA,CAAA,MAAA,SAAA,GAAA,eAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,sBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,MAAA,WAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,eAAA,cAAA,YAAA,EAAA,GAAA,CAAA,eAAA,gBAAA,YAAA,EAAA,GAAA,CAAA,QAAA,UAAA,GAAA,aAAA,GAAA,CAAA,GAAA,YAAA,gBAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,QAAA,GAAA,GAAA,CAAA,GAAA,aAAA,YAAA,GAAA,CAAA,GAAA,aAAA,aAAA,GAAA,CAAA,GAAA,aAAA,cAAA,GAAA,CAAA,GAAA,aAAA,aAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,OAAA,KAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,YAAA,SAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACTjC,MAAA,yBAAA,GAAA,UAAA,CAAA,EAAuB,GAAA,OAAA,CAAA;AACH,MAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,eAAS,IAAA,gBAAgB,MAAM;MAAC,CAAA;AAChD,MAAA,oBAAA,GAAA,KAAA,CAAA;AACA,MAAA,yBAAA,GAAA,MAAA;AAAM,MAAA,iBAAA,GAAA,cAAA;AAAY,MAAA,uBAAA,EAAO;AAE3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,KAAA,CAAA;AAClB,MAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,eAAS,IAAA,gBAAgB,MAAM;MAAC,CAAA;AAAE,MAAA,iBAAA,GAAA,MAAA;AAAI,MAAA,uBAAA;AACzC,MAAA,yBAAA,GAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,eAAS,IAAA,gBAAgB,OAAO;MAAC,CAAA;AAAE,MAAA,iBAAA,GAAA,OAAA;AAAK,MAAA,uBAAA;AAC3C,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,gBAAgB,cAAc;MAAC,CAAA;AAAE,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA;AACzD,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,gBAAgB,SAAS;MAAC,CAAA;AAAE,MAAA,iBAAA,IAAA,SAAA;AAAO,MAAA,uBAAA,EAAI;AAErD,MAAA,yBAAA,IAAA,OAAA,CAAA,EAA0B,IAAA,UAAA,CAAA;AACE,MAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,eAAS,IAAA,gBAAA;MAAiB,CAAA;AAAE,MAAA,iBAAA,IAAA,OAAA;AAAK,MAAA,uBAAA;AAC3D,MAAA,yBAAA,IAAA,UAAA,CAAA;AAA2B,MAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,eAAS,IAAA,iBAAA;MAAkB,CAAA;AAAE,MAAA,iBAAA,IAAA,SAAA;AAAO,MAAA,uBAAA,EAAS,EACpE;AAIR,MAAA,yBAAA,IAAA,WAAA,CAAA,EAAwC,IAAA,OAAA,CAAA,EACZ,IAAA,IAAA;AACpB,MAAA,iBAAA,IAAA,6BAAA;AAA2B,MAAA,uBAAA;AAC/B,MAAA,yBAAA,IAAA,GAAA;AAAG,MAAA,iBAAA,IAAA,mEAAA;AAAiE,MAAA,uBAAA;AACpE,MAAA,yBAAA,IAAA,UAAA,EAAA;AAA2B,MAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,eAAS,IAAA,iBAAA;MAAkB,CAAA;AAAE,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA,EAAS,EACxE;AAIR,MAAA,yBAAA,IAAA,WAAA,EAAA,EAA0C,IAAA,IAAA;AACpC,MAAA,iBAAA,IAAA,0BAAA;AAAwB,MAAA,uBAAA;AAC5B,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,OAAA,EAAA;AAKF,MAAA,uBAAA,EAAM;AAIR,MAAA,yBAAA,IAAA,WAAA,EAAA,EAAwD,IAAA,IAAA;AAClD,MAAA,iBAAA,IAAA,oBAAA;AAAkB,MAAA,uBAAA;AACtB,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,qBAAA,IAAA,sCAAA,IAAA,GAAA,OAAA,EAAA;AAaF,MAAA,uBAAA,EAAM;AAIR,MAAA,yBAAA,IAAA,WAAA,EAAA,EAA8C,IAAA,IAAA;AACxC,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA;AAChB,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA+B,IAAA,QAAA,EAAA,EACF,IAAA,OAAA,EAAA;AAEvB,MAAA,oBAAA,IAAA,SAAA,EAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,OAAA,EAAA;AACE,MAAA,oBAAA,IAAA,YAAA,EAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,UAAA,EAAA;AACE,MAAA,oBAAA,IAAA,KAAA,EAAA;AACA,MAAA,iBAAA,IAAA,gBAAA;AACF,MAAA,uBAAA,EAAS,EACJ,EACH;AAIR,MAAA,yBAAA,IAAA,UAAA,EAAA,EAAuB,IAAA,OAAA,EAAA,EACO,IAAA,OAAA,EAAA,EACE,IAAA,IAAA;AACtB,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA;AAChB,MAAA,yBAAA,IAAA,GAAA;AAAG,MAAA,iBAAA,IAAA,mDAAA;AAAiD,MAAA,uBAAA,EAAI;AAE1D,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,IAAA;AACtB,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA;AACf,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,gBAAgB,MAAM;MAAC,CAAA;AAAE,MAAA,iBAAA,IAAA,MAAA;AAAI,MAAA,uBAAA;AACzC,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,gBAAgB,OAAO;MAAC,CAAA;AAAE,MAAA,iBAAA,IAAA,OAAA;AAAK,MAAA,uBAAA;AAC3C,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,gBAAgB,cAAc;MAAC,CAAA;AAAE,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA;AACzD,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAG,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,gBAAgB,SAAS;MAAC,CAAA;AAAE,MAAA,iBAAA,IAAA,SAAA;AAAO,MAAA,uBAAA,EAAI;AAErD,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,IAAA;AACtB,MAAA,iBAAA,IAAA,iBAAA;AAAe,MAAA,uBAAA;AACnB,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,KAAA,EAAA;AACZ,MAAA,oBAAA,IAAA,KAAA,EAAA;AAAoC,MAAA,uBAAA;AAChD,MAAA,yBAAA,IAAA,KAAA,EAAA;AAAY,MAAA,oBAAA,IAAA,KAAA,EAAA;AAAqC,MAAA,uBAAA;AACjD,MAAA,yBAAA,IAAA,KAAA,EAAA;AAAY,MAAA,oBAAA,IAAA,KAAA,EAAA;AAAsC,MAAA,uBAAA;AAClD,MAAA,yBAAA,IAAA,KAAA,EAAA;AAAY,MAAA,oBAAA,IAAA,KAAA,EAAA;AAAqC,MAAA,uBAAA,EAAI,EACjD,EACF;AAER,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,GAAA;AACtB,MAAA,iBAAA,IAAA,8CAAA;AAA8C,MAAA,uBAAA,EAAI,EACjD;;;AAzE0C,MAAA,oBAAA,EAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,QAAA;AAYQ,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,YAAA;;oBDtC5C,cAAY,OAAA,GAAA,QAAA,CAAA,otPAAA,EAAA,CAAA;;;sEAKb,sBAAoB,CAAA;UANhC;sBACY,CAAC,YAAY,GAAC,UACf,oBAAkB,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAAA,QAAA,CAAA,wpMAAA,EAAA,CAAA;;;;6EAIjB,sBAAoB,EAAA,WAAA,wBAAA,UAAA,6DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGyBzB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,OAAA,GAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,UAAA,GAAA,GAAA;;;;;AAIJ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,GAAA;;;;;AAOA,IAAA,yBAAA,GAAA,MAAA;AAAuB,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA;;;;;AAC5B,IAAA,oBAAA,GAAA,KAAA,EAAA;;;AD/CF,IAAO,iBAAP,MAAO,gBAAc;EAOf;EACA;EACA;EARV,WAAqB;EACrB;EACA,UAAU;EACV,QAAuB;EAEvB,YACU,IACA,aACA,QAAc;AAFd,SAAA,KAAA;AACA,SAAA,cAAA;AACA,SAAA,SAAA;AAER,SAAK,YAAY,KAAK,GAAG,MAAM;MAC7B,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;MACnD,UAAU,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;MAC7D,UAAU,CAAC,YAAY;KACxB;EACH;EAEA,eAAe,MAAc;AAC3B,SAAK,WAAW;AAChB,SAAK,UAAU,WAAW,EAAE,UAAU,KAAI,CAAE;AAC5C,SAAK,QAAQ;EACf;EAEA,WAAQ;AACN,QAAI,KAAK,UAAU,OAAO;AACxB,WAAK,UAAU;AACf,WAAK,QAAQ;AAEb,WAAK,YAAY,MAAM,KAAK,UAAU,KAAK,EAAE,UAAU;QACrD,MAAM,CAAC,aAAY;AACjB,eAAK,UAAU;AAEf,cAAI,SAAS,KAAK,SAAS,cAAc;AACvC,iBAAK,OAAO,SAAS,CAAC,aAAa,CAAC;UACtC,WAAW,SAAS,KAAK,SAAS,YAAY;AAC5C,iBAAK,OAAO,SAAS,CAAC,WAAW,CAAC;UACpC,WAAW,SAAS,KAAK,SAAS,SAAS;AACzC,iBAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;UAC3C;QACF;QACA,OAAO,CAAC,UAAS;AACf,eAAK,UAAU;AACf,eAAK,QAAQ,MAAM,MAAM,WAAW;QACtC;OACD;IACH;EACF;EAEA,eAAe,WAAiB;AAC9B,UAAM,QAAQ,KAAK,UAAU,IAAI,SAAS;AAC1C,WAAO,QAAQ,MAAM,YAAY,MAAM,SAAS,MAAM,WAAW;EACnE;EAEA,gBAAgB,WAAiB;AAC/B,UAAM,QAAQ,KAAK,UAAU,IAAI,SAAS;AAC1C,QAAI,CAAC;AAAO,aAAO;AAEnB,QAAI,MAAM,SAAS,UAAU,GAAG;AAC9B,aAAO;IACT;AACA,QAAI,MAAM,SAAS,OAAO,GAAG;AAC3B,aAAO;IACT;AACA,QAAI,MAAM,SAAS,WAAW,GAAG;AAC/B,aAAO,qBAAqB,MAAM,SAAS,WAAW,EAAE,cAAc;IACxE;AACA,WAAO;EACT;;qCApEW,iBAAc,4BAAA,WAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,MAAA,CAAA;EAAA;yEAAd,iBAAc,WAAA,CAAA,CAAA,WAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,mBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,MAAA,SAAA,YAAA,EAAA,GAAA,CAAA,OAAA,OAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,YAAA,MAAA,YAAA,YAAA,EAAA,GAAA,CAAA,OAAA,UAAA,GAAA,CAAA,QAAA,UAAA,GAAA,cAAA,GAAA,UAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,SAAA,+BAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,cAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,YAAA,cAAA,SAAA,CAAA,GAAA,UAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACf3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAkD,GAAA,OAAA,CAAA,EACxB,GAAA,OAAA,CAAA,EACQ,GAAA,UAAA,CAAA;AAI1B,MAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,eAAS,IAAA,eAAe,YAAY;MAAC,CAAA;AACrC,MAAA,iBAAA,GAAA,cAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,UAAA,CAAA;AAGE,MAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,eAAS,IAAA,eAAe,OAAO;MAAC,CAAA;AAChC,MAAA,iBAAA,GAAA,SAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,UAAA,CAAA;AAGE,MAAA,qBAAA,SAAA,SAAA,kDAAA;AAAA,eAAS,IAAA,eAAe,UAAU;MAAC,CAAA;AACnC,MAAA,iBAAA,GAAA,YAAA;AACF,MAAA,uBAAA,EAAS;AAGX,MAAA,yBAAA,GAAA,IAAA;AAAI,MAAA,iBAAA,EAAA;AAC4D,MAAA,uBAAA;AAEhE,MAAA,yBAAA,IAAA,QAAA,CAAA;AAA8B,MAAA,qBAAA,YAAA,SAAA,oDAAA;AAAA,eAAY,IAAA,SAAA;MAAU,CAAA;AAClD,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,SAAA,CAAA;AAMA,MAAA,yBAAA,IAAA,SAAA,CAAA;AAAmB,MAAA,iBAAA,IAAA,eAAA;AAAa,MAAA,uBAAA;AAChC,MAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,OAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,SAAA,CAAA;AAMA,MAAA,yBAAA,IAAA,SAAA,EAAA;AAAsB,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AAC9B,MAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,OAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,OAAA,CAAA;AAIA,MAAA,yBAAA,IAAA,UAAA,EAAA;AAIE,MAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,QAAA,EAAA,EAAuB,IAAA,8BAAA,GAAA,GAAA,KAAA,EAAA;AAEzB,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,iBAAA,IAAA,0BAAA;AACA,MAAA,yBAAA,IAAA,KAAA,EAAA;AAAwB,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA,EAAI,EACtC,EACC,EACH;;;AAtEqB,MAAA,qBAAA,WAAA,IAAA,QAAA;AAKrB,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,UAAA,IAAA,aAAA,YAAA;AAMA,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,UAAA,IAAA,aAAA,OAAA;AAMA,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,UAAA,IAAA,aAAA,UAAA;AAMA,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,IAAA,aAAA,eAAA,qBAAA,IAAA,aAAA,UAAA,gBAAA,gBAAA;AAGE,MAAA,oBAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,SAAA;AAMA,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,eAAA,OAAA,CAAA;AAG0B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA,OAAA,CAAA;AAU1B,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,eAAA,UAAA,CAAA;AAG0B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA,UAAA,CAAA;AAKF,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAO1B,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,UAAA,WAAA,IAAA,OAAA;AACO,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,OAAA;AACiC,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;;oBDjDpC,cAAY,SAAA,MAAE,qBAAmB,oBAAA,sBAAA,iBAAA,sBAAA,mBAAA,oBAAA,iBAAE,cAAY,UAAA,GAAA,QAAA,CAAA,ipJAAA,EAAA,CAAA;;;sEAE9C,gBAAc,CAAA;UAP1B;uBACW,aAAW,YAGT,MAAI,SACP,CAAC,cAAc,qBAAqB,YAAY,GAAC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAA,QAAA,CAAA,k1HAAA,EAAA,CAAA;;;;6EAE/C,gBAAc,EAAA,WAAA,kBAAA,UAAA,+CAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGcnB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,MAAA,GAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,OAAA,GAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,UAAA,GAAA,GAAA;;;;;AAYF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,iBAAA,GAAA,GAAA;;;;;AAKJ,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAoB,IAAA,iBAAA,GAAA,0BAAA;AAAwB,IAAA,uBAAA,EAAQ;AAGtD,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AAIA,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAwB,IAAA,iBAAA,GAAA,qBAAA;AAAmB,IAAA,uBAAA,EAAQ;AAGrD,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,IAAA,SAAA,EAAA;AAIA,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAuB,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA,EAAQ;;;;;;AAKpD,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAqB,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA,EAAQ;AAG3C,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAsB,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA,EAAQ;AAG7C,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,SAAA,EAAA;AAAsB,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAQ;;;;;;AAI1C,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,GAAA;;;;;AAOA,IAAA,yBAAA,GAAA,MAAA;AAAuB,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;;;;;AAC9B,IAAA,oBAAA,GAAA,KAAA,EAAA;;;AD9HF,IAAO,kBAAP,MAAO,iBAAe;EAOhB;EACA;EACA;EARV,cAAc;EACd;EACA,UAAU;EACV,QAAuB;EAEvB,YACU,IACA,aACA,QAAc;AAFd,SAAA,KAAA;AACA,SAAA,cAAA;AACA,SAAA,SAAA;AAER,SAAK,aAAa,KAAK,GAAG,MAAM;MAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;MACzD,OAAO,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;MACnD,UAAU,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;MAC7D,iBAAiB,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MAC3C,MAAM,CAAC,YAAY;;MAEnB,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,WAAW,CAAC,EAAE;;MAEd,SAAS,CAAC,EAAE;MACZ,UAAU,CAAC,EAAE;MACb,UAAU,CAAC,EAAE;OACZ;MACD,YAAY,KAAK;KAClB;EACH;EAEA,aAAU;AACR,SAAK,cAAc,CAAC,KAAK;AACzB,SAAK,WAAW,WAAW;MACzB,MAAM,KAAK,cAAc,eAAe;KACzC;AACD,SAAK,QAAQ;EACf;EAEA,uBAAuB,MAAe;AACpC,UAAM,WAAW,KAAK,IAAI,UAAU,GAAG;AACvC,UAAM,kBAAkB,KAAK,IAAI,iBAAiB,GAAG;AACrD,WAAO,aAAa,kBAAkB,OAAO,EAAE,kBAAkB,KAAI;EACvE;EAEA,WAAQ;AACN,QAAI,KAAK,WAAW,OAAO;AACzB,WAAK,UAAU;AACf,WAAK,QAAQ;AAEb,YAAM,WAAW,iCACZ,KAAK,WAAW,QADJ;QAEf,MAAM,KAAK,cAAc,eAAe;;QAExC,iBAAiB;;AAGnB,WAAK,YAAY,SAAS,QAAQ,EAAE,UAAU;QAC5C,MAAM,CAAC,aAAY;AACjB,eAAK,UAAU;AAEf,cAAI,SAAS,KAAK,SAAS,cAAc;AACvC,iBAAK,OAAO,SAAS,CAAC,aAAa,CAAC;UACtC,WAAW,SAAS,KAAK,SAAS,YAAY;AAC5C,iBAAK,OAAO,SAAS,CAAC,WAAW,CAAC;UACpC;QACF;QACA,OAAO,CAAC,UAAS;AACf,eAAK,UAAU;AACf,eAAK,QAAQ,MAAM,MAAM,WAAW;QACtC;OACD;IACH;EACF;;EAGA,eAAe,WAAiB;AAC9B,UAAM,QAAQ,KAAK,WAAW,IAAI,SAAS;AAC3C,WAAO,QAAQ,MAAM,YAAY,MAAM,SAAS,MAAM,WAAW;EACnE;;EAGA,gBAAgB,WAAiB;AAC/B,UAAM,QAAQ,KAAK,WAAW,IAAI,SAAS;AAC3C,QAAI,CAAC;AAAO,aAAO;AAEnB,QAAI,MAAM,SAAS,UAAU,GAAG;AAC9B,aAAO;IACT;AACA,QAAI,MAAM,SAAS,OAAO,GAAG;AAC3B,aAAO;IACT;AACA,QAAI,MAAM,SAAS,WAAW,GAAG;AAC/B,aAAO,qBAAqB,MAAM,SAAS,WAAW,EAAE,cAAc;IACxE;AACA,QAAI,cAAc,qBAAqB,KAAK,WAAW,SAAS,kBAAkB,GAAG;AACnF,aAAO;IACT;AACA,WAAO;EACT;;qCAlGW,kBAAe,4BAAA,WAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,MAAA,CAAA;EAAA;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,oBAAA,GAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,QAAA,MAAA,QAAA,YAAA,EAAA,GAAA,CAAA,OAAA,MAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,QAAA,SAAA,mBAAA,SAAA,MAAA,SAAA,YAAA,EAAA,GAAA,CAAA,OAAA,OAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,YAAA,MAAA,YAAA,YAAA,EAAA,GAAA,CAAA,OAAA,UAAA,GAAA,CAAA,QAAA,YAAA,mBAAA,mBAAA,MAAA,mBAAA,YAAA,EAAA,GAAA,CAAA,OAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,cAAA,GAAA,UAAA,GAAA,CAAA,SAAA,+BAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,cAAA,QAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,UAAA,MAAA,QAAA,GAAA,CAAA,OAAA,QAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,cAAA,MAAA,YAAA,GAAA,CAAA,OAAA,YAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,aAAA,MAAA,WAAA,GAAA,CAAA,OAAA,WAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,WAAA,MAAA,WAAA,YAAA,EAAA,GAAA,CAAA,OAAA,SAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,YAAA,MAAA,YAAA,YAAA,EAAA,GAAA,CAAA,OAAA,UAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,YAAA,MAAA,YAAA,YAAA,EAAA,GAAA,CAAA,OAAA,UAAA,GAAA,CAAA,GAAA,YAAA,cAAA,SAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;ACb5B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAgG,GAAA,OAAA,CAAA,EACrE,GAAA,OAAA,CAAA,EACO,GAAA,UAAA,CAAA;AAI1B,MAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,eAAS,IAAA,WAAA;MAAY,CAAA;AACrB,MAAA,iBAAA,GAAA,cAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,UAAA,CAAA;AAGE,MAAA,qBAAA,SAAA,SAAA,mDAAA;AAAA,eAAS,IAAA,WAAA;MAAY,CAAA;AACrB,MAAA,iBAAA,GAAA,YAAA;AACF,MAAA,uBAAA,EAAS;AAGX,MAAA,yBAAA,GAAA,IAAA;AAAI,MAAA,iBAAA,CAAA;AAA2D,MAAA,uBAAA;AAE/D,MAAA,yBAAA,GAAA,QAAA,CAAA;AAA+B,MAAA,qBAAA,YAAA,SAAA,oDAAA;AAAA,eAAY,IAAA,SAAA;MAAU,CAAA;AAEnD,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,SAAA,CAAA;AAMA,MAAA,yBAAA,IAAA,SAAA,CAAA;AAAkB,MAAA,iBAAA,IAAA,WAAA;AAAS,MAAA,uBAAA;AAC3B,MAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,OAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,SAAA,CAAA;AAMA,MAAA,yBAAA,IAAA,SAAA,EAAA;AAAmB,MAAA,iBAAA,IAAA,eAAA;AAAa,MAAA,uBAAA;AAChC,MAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,OAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,SAAA,EAAA;AAMA,MAAA,yBAAA,IAAA,SAAA,EAAA;AAAsB,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AAC9B,MAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,OAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,CAAA;AACE,MAAA,oBAAA,IAAA,SAAA,EAAA;AAMA,MAAA,yBAAA,IAAA,SAAA,EAAA;AAA6B,MAAA,iBAAA,IAAA,kBAAA;AAAgB,MAAA,uBAAA;AAC7C,MAAA,qBAAA,IAAA,iCAAA,GAAA,GAAA,OAAA,CAAA;AAGF,MAAA,uBAAA;AAGA,MAAA,qBAAA,IAAA,0CAAA,IAAA,GAAA,gBAAA,EAAA,EAAkC,IAAA,0CAAA,IAAA,GAAA,gBAAA,EAAA,EA2BC,IAAA,iCAAA,GAAA,GAAA,OAAA,CAAA;AAiCnC,MAAA,yBAAA,IAAA,UAAA,EAAA;AAIE,MAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,QAAA,EAAA,EAAuB,IAAA,+BAAA,GAAA,GAAA,KAAA,EAAA;AAEzB,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,iBAAA,IAAA,4BAAA;AACA,MAAA,yBAAA,IAAA,KAAA,EAAA;AAAuB,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA,EAAI,EACnC,EACC,EACH;;;AAnJsB,MAAA,qBAAA,WAAA,0BAAA,IAAAA,MAAA,IAAA,aAAA,CAAA,IAAA,WAAA,CAAA;AAKtB,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,UAAA,IAAA,WAAA;AAMA,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,UAAA,CAAA,IAAA,WAAA;AAMA,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,IAAA,cAAA,sBAAA,iBAAA;AAEE,MAAA,oBAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,UAAA;AAOA,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,eAAA,MAAA,CAAA;AAG0B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA,MAAA,CAAA;AAU1B,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,eAAA,OAAA,CAAA;AAG0B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA,OAAA,CAAA;AAU1B,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,eAAA,UAAA,CAAA;AAG0B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA,UAAA,CAAA;AAU1B,MAAA,oBAAA,CAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,eAAA,iBAAA,CAAA;AAG0B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA,iBAAA,CAAA;AAMf,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,WAAA;AA2BA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,WAAA;AA6Ba,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAO1B,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,WAAA,WAAA,IAAA,OAAA;AACO,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,OAAA;AACiC,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;;oBDhIpC,cAAY,SAAA,MAAE,qBAAmB,oBAAA,sBAAA,iBAAA,sBAAA,mBAAA,oBAAA,iBAAE,cAAY,UAAA,GAAA,QAAA,CAAA,gxIAAA,EAAA,CAAA;;;sEAE9C,iBAAe,CAAA;UAP3B;uBACW,cAAY,YAGV,MAAI,SACP,CAAC,cAAc,qBAAqB,YAAY,GAAE,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAA,QAAA,CAAA,y/GAAA,EAAA,CAAA;;;;6EAEhD,iBAAe,EAAA,WAAA,mBAAA,UAAA,iDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AEI5B,IAAMC,OAAM,CAAC,GAAG;AAChB,IAAM,MAAM,CAAC,SAAS;AACtB,IAAM,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,oBAAoB,CAAC,GAAG,GAAG;AAC5D,IAAM,MAAM,CAAC,cAAc,sBAAsB,GAAG;AACpD,SAAS,0CAA0C,IAAI,KAAK;AAC1D,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,qBAAW,SAAS,SAAS,iEAAiE;AAC/F,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,mBAAmB,CAAC;AAAA,IACnD,CAAC;AACD,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,sBAAY,oBAAoB,OAAO,mBAAmB,CAAC;AAAA,EAChE;AACF;AACA,SAAS,0CAA0C,IAAI,KAAK;AAC1D,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,oBAAoB;AACzC,IAAG,uBAAa,GAAG,CAAC;AACpB,IAAG,uBAAa;AAAA,EAClB;AACF;AACA,IAAM,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,GAAG,GAAG;AAC9D,IAAM,MAAM,CAAC,eAAe,uBAAuB,GAAG;AACtD,SAAS,2CAA2C,IAAI,KAAK;AAC3D,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,2BAAiB;AAChC,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,qBAAW,SAAS,SAAS,kEAAkE;AAChG,MAAG,wBAAc,GAAG;AACpB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,mBAAmB,CAAC;AAAA,IACnD,CAAC;AACD,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,sBAAY,oBAAoB,OAAO,mBAAmB,CAAC;AAAA,EAChE;AACF;AACA,SAAS,2CAA2C,IAAI,KAAK;AAC3D,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,qBAAqB;AAC1C,IAAG,uBAAa,GAAG,CAAC;AACpB,IAAG,uBAAa;AAAA,EAClB;AACF;AACA,IAAM,MAAM;AACZ,SAAS,8BAA8B,UAAU;AAC/C,QAAM,MAAM,gDAAgD,QAAQ,IAAI;AAC1E;AAEA,IAAM,8BAA8B,IAAI,eAAe,+BAA+B;AAAA,EACpF,YAAY;AAAA,EACZ,SAAS;AACX,CAAC;AAKD,IAAM,uBAAuB,IAAI,eAAe,sBAAsB;AAMtE,SAAS,sCAAsC;AAC7C,SAAO;AACT;AACA,IAAM,mBAAN,MAAM,0BAAyB,cAAc;AAAA,EAC3C,YAAY,OAAO,QAAQ;AAAA,EAC3B,qBAAqB,OAAO,iBAAiB;AAAA,EAC7C,aAAa,OAAO,kBAAkB;AAAA,EACtC,cAAc;AACZ,UAAM,aAAa,OAAO,UAAU;AACpC,UAAM,mBAAmB,OAAO,gBAAgB;AAChD,UAAM,SAAS,OAAO,MAAM;AAC5B,UAAM,YAAY,kBAAkB,MAAM;AAAA,EAC5C;AAAA,EACA,qBAAqB;AACnB,SAAK,WAAW,sBAAsB,UAAU,MAAM;AACpD,WAAK,mBAAmB,aAAa;AAAA,IACvC,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,kBAAkB;AAMhB,QAAI,KAAK,UAAU,WAAW;AAC5B,aAAO;AAAA,IACT;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,WAAO,SAAS,QAAQ,MAAM,SAAS,UAAU,MAAM,UAAU,OAAO,QAAQ,IAAI,SAAS,UAAU,IAAI;AAAA,EAC7G;AAAA,EACA,OAAO,YAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,oBAAoB,CAAC;AAAA,IAClC,WAAW,CAAC,GAAG,oBAAoB;AAAA,IACnC,UAAU;AAAA,IACV,cAAc,SAAS,8BAA8B,IAAI,KAAK;AAC5D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,eAAe,IAAI,WAAW,gBAAgB,MAAM,IAAI,EAAE,gBAAgB,IAAI,WAAW,gBAAgB,OAAO,IAAI;AACnI,QAAG,sBAAY,6BAA6B,IAAI,gBAAgB,CAAC;AAAA,MACnE;AAAA,IACF;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IAClC,oBAAoBA;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU,SAAS,0BAA0B,IAAI,KAAK;AACpD,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,uBAAa,CAAC;AAAA,MACnB;AAAA,IACF;AAAA,IACA,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,0BAA0B;AAAA,QAC1B,2BAA2B;AAAA,QAC3B,qCAAqC;AAAA,MACvC;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AAIH,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,cAAc,OAAO,UAAU;AAAA,EAC/B,oBAAoB,OAAO,gBAAgB;AAAA,EAC3C,gBAAgB,OAAO,YAAY;AAAA,EACnC,YAAY,OAAO,QAAQ;AAAA,EAC3B,UAAU,OAAO,MAAM;AAAA,EACvB,YAAY,OAAO,SAAS;AAAA,EAC5B,wBAAwB,OAAO,oBAAoB;AAAA,EACnD,OAAO,OAAO,UAAU;AAAA,IACtB,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,aAAa,OAAO,sBAAsB;AAAA,IACxC,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,aAAa;AAAA,EACb,uCAAuC;AAAA,EACvC;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,SAAS,OAAO;AAElB,YAAQ,UAAU,QAAQ,QAAQ;AAClC,QAAI,UAAU,KAAK,WAAW;AAE5B,UAAI,KAAK,aAAa;AACpB,aAAK,wBAAwB,KAAK;AAAA,MACpC;AACA,WAAK,YAAY;AACjB,WAAK,kBAAkB,KAAK;AAAA,IAC9B;AAAA,EACF;AAAA,EACA,YAAY;AAAA;AAAA,EAEZ,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,KAAK,OAAO;AACd,SAAK,QAAQ;AACb,SAAK,sBAAsB;AAC3B,SAAK,aAAa,KAAK;AAAA,EACzB;AAAA,EACA,QAAQ;AAAA;AAAA,EAER,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,aAAa,OAAO;AACtB,SAAK,gBAAgB,sBAAsB,KAAK;AAAA,EAClD;AAAA,EACA,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhB,IAAI,YAAY;AACd,UAAM,QAAQ,KAAK;AAInB,QAAI,SAAS,MAAM;AACjB,UAAI,KAAK,SAAS,QAAQ;AACxB,eAAO;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,QAAI,UAAU,UAAU,UAAU,WAAW,SAAS,MAAM;AAC1D,cAAQ,sBAAsB,KAAK;AAAA,IACrC;AACA,SAAK,aAAa;AAAA,EACpB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,OAAO,OAAO;AAChB,SAAK,OAAO,sBAAsB,KAAK,CAAC;AAAA,EAC1C;AAAA,EACA,UAAU;AAAA;AAAA,EAEV;AAAA;AAAA,EAEA,oBAAoB,IAAI,QAAQ;AAAA;AAAA,EAEhC,gBAAgB,IAAI,QAAQ;AAAA;AAAA,EAE5B;AAAA;AAAA,IAEA,IAAI;AAAA;AAAA,MAA0B;AAAA,IAAI;AAAA;AAAA;AAAA,EAElC,gBAAgB,KAAK,aAAa,KAAK,OAAO,OAAK,CAAC,GAAG,IAAI,MAAM;AAAA,EAAC,CAAC,CAAC;AAAA;AAAA,EAEpE,cAAc,KAAK,kBAAkB,KAAK,OAAO,MAAM,KAAK,MAAM,GAAG,MAAM,MAAS,CAAC;AAAA;AAAA,EAErF,gBAAgB,KAAK,aAAa,KAAK,OAAO,OAAK,CAAC,CAAC,GAAG,IAAI,MAAM;AAAA,EAAC,CAAC,CAAC;AAAA;AAAA,EAErE,cAAc,KAAK,kBAAkB,KAAK,OAAO,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,MAAS,CAAC;AAAA;AAAA,EAEtF,aAAa,IAAI,QAAQ;AAAA;AAAA;AAAA,EAGzB,oBAAoB,IAAI,aAAa;AAAA;AAAA,EAErC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,IAAI,QAAQ;AAAA,EAC3B,YAAY,OAAO,QAAQ;AAAA,EAC3B,qBAAqB,OAAO,iBAAiB;AAAA,EAC7C,cAAc;AACZ,SAAK,aAAa,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,YAAU;AACrE,UAAI,QAAQ;AACV,YAAI,KAAK,MAAM;AACb,eAAK,uCAAuC,KAAK,KAAK;AAAA,QACxD;AACA,aAAK,WAAW;AAAA,MAClB,WAAW,KAAK,qBAAqB,GAAG;AACtC,aAAK,cAAc,KAAK,cAAc,SAAS;AAAA,MACjD;AAAA,IACF,CAAC;AAMD,SAAK,QAAQ,kBAAkB,MAAM;AACnC,YAAM,UAAU,KAAK,YAAY;AACjC,gBAAU,SAAS,SAAS,EAAE,KAAK,OAAO,WAAS;AACjD,eAAO,MAAM,YAAY,UAAU,CAAC,KAAK,gBAAgB,CAAC,eAAe,KAAK;AAAA,MAChF,CAAC,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,WAAS,KAAK,QAAQ,IAAI,MAAM;AACxE,aAAK,MAAM;AACX,cAAM,gBAAgB;AACtB,cAAM,eAAe;AAAA,MACvB,CAAC,CAAC;AACF,WAAK,iBAAiB,CAAC,KAAK,UAAU,OAAO,SAAS,iBAAiB,KAAK,sBAAsB,GAAG,KAAK,UAAU,OAAO,SAAS,iBAAiB,KAAK,sBAAsB,GAAG,KAAK,UAAU,OAAO,SAAS,oBAAoB,KAAK,sBAAsB,CAAC;AAAA,IACpQ,CAAC;AACD,SAAK,cAAc,UAAU,MAAM;AACjC,WAAK,aAAa,KAAK,KAAK,OAAO;AAAA,IACrC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,SAAS,SAAS;AAC5B,QAAI,CAAC,KAAK,sBAAsB,YAAY,OAAO,GAAG;AACpD,cAAQ,WAAW;AAEnB,WAAK,QAAQ,kBAAkB,MAAM;AACnC,cAAM,WAAW,MAAM;AACrB,sBAAY;AACZ,2BAAiB;AACjB,kBAAQ,gBAAgB,UAAU;AAAA,QACpC;AACA,cAAM,cAAc,KAAK,UAAU,OAAO,SAAS,QAAQ,QAAQ;AACnE,cAAM,mBAAmB,KAAK,UAAU,OAAO,SAAS,aAAa,QAAQ;AAAA,MAC/E,CAAC;AAAA,IACH;AACA,YAAQ,MAAM,OAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,UAAU,SAAS;AACrC,QAAI,iBAAiB,KAAK,YAAY,cAAc,cAAc,QAAQ;AAC1E,QAAI,gBAAgB;AAClB,WAAK,YAAY,gBAAgB,OAAO;AAAA,IAC1C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACX,QAAI,CAAC,KAAK,YAAY;AACpB;AAAA,IACF;AACA,UAAM,UAAU,KAAK,YAAY;AAIjC,YAAQ,KAAK,WAAW;AAAA,MACtB,KAAK;AAAA,MACL,KAAK;AACH;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,wBAAgB,MAAM;AACpB,gBAAM,gBAAgB,KAAK,WAAW,oBAAoB;AAC1D,cAAI,CAAC,iBAAiB,OAAO,QAAQ,UAAU,YAAY;AACzD,oBAAQ,MAAM;AAAA,UAChB;AAAA,QACF,GAAG;AAAA,UACD,UAAU,KAAK;AAAA,QACjB,CAAC;AACD;AAAA,MACF,KAAK;AACH,aAAK,oBAAoB,0CAA0C;AACnE;AAAA,MACF;AACE,aAAK,oBAAoB,KAAK,SAAS;AACvC;AAAA,IACJ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,aAAa;AACzB,QAAI,KAAK,cAAc,UAAU;AAC/B;AAAA,IACF;AACA,QAAI,KAAK,sCAAsC;AAC7C,WAAK,cAAc,SAAS,KAAK,sCAAsC,WAAW;AAAA,IACpF,OAAO;AACL,WAAK,YAAY,cAAc,KAAK;AAAA,IACtC;AACA,SAAK,uCAAuC;AAAA,EAC9C;AAAA;AAAA,EAEA,uBAAuB;AACrB,UAAM,WAAW,KAAK,KAAK;AAC3B,WAAO,CAAC,CAAC,YAAY,KAAK,YAAY,cAAc,SAAS,QAAQ;AAAA,EACvE;AAAA,EACA,kBAAkB;AAChB,SAAK,cAAc;AAGnB,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,wBAAwB,KAAK;AAAA,IACpC;AAGA,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,aAAa,KAAK,kBAAkB,OAAO,KAAK,YAAY,aAAa;AAC9E,WAAK,sBAAsB;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,eAAe,QAAQ,aAAW,QAAQ,CAAC;AAChD,SAAK,YAAY,QAAQ;AACzB,SAAK,SAAS,OAAO;AACrB,SAAK,UAAU;AACf,SAAK,kBAAkB,SAAS;AAChC,SAAK,cAAc,SAAS;AAC5B,SAAK,aAAa,SAAS;AAC3B,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,KAAK,WAAW;AACd,WAAO,KAAK,OAAO,MAAM,SAAS;AAAA,EACpC;AAAA;AAAA,EAEA,QAAQ;AACN,WAAO,KAAK,OAAO,KAAK;AAAA,EAC1B;AAAA;AAAA,EAEA,yBAAyB;AAIvB,WAAO,KAAK;AAAA;AAAA,MAAqB;AAAA;AAAA,MAAyB;AAAA,MAAM;AAAA,IAAO;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,SAAS,CAAC,KAAK,QAAQ,WAAW;AAGvC,QAAI,UAAU,WAAW;AACvB,WAAK,aAAa;AAAA,IACpB;AACA,UAAM,SAAS,KAAK;AAAA,MAAS;AAAA;AAAA,MAA0B,CAAC,UAAU,KAAK,qBAAqB;AAAA,MAAG,KAAK,cAAc;AAAA,IAAS;AAC3H,QAAI,CAAC,QAAQ;AACX,WAAK,aAAa;AAAA,IACpB;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAS,QAAQ,cAAc,aAAa;AAC1C,QAAI,WAAW,KAAK,SAAS;AAC3B,aAAO,QAAQ,QAAQ,SAAS,SAAS,OAAO;AAAA,IAClD;AACA,SAAK,UAAU;AACf,QAAI,KAAK,YAAY,qBAAqB;AAGxC,WAAK,gBAAgB,IAAI;AAAA,IAC3B,OAAO;AAEL,iBAAW,MAAM;AACf,aAAK,kBAAkB,KAAK;AAC5B,aAAK,cAAc,KAAK;AAAA,MAC1B,CAAC;AAAA,IACH;AACA,SAAK,YAAY,cAAc,UAAU,OAAO,qBAAqB,MAAM;AAC3E,QAAI,CAAC,UAAU,cAAc;AAC3B,WAAK,cAAc,WAAW;AAAA,IAChC;AAEA,SAAK,mBAAmB,aAAa;AACrC,SAAK,sBAAsB;AAC3B,WAAO,IAAI,QAAQ,aAAW;AAC5B,WAAK,aAAa,KAAK,KAAK,CAAC,CAAC,EAAE,UAAU,UAAQ,QAAQ,OAAO,SAAS,OAAO,CAAC;AAAA,IACpF,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,gBAAgB,aAAa;AAC3B,SAAK,YAAY,cAAc,UAAU,OAAO,wBAAwB,WAAW;AAAA,EACrF;AAAA,EACA,YAAY;AACV,WAAO,KAAK,YAAY,cAAc,eAAe;AAAA,EACvD;AAAA;AAAA,EAEA,wBAAwB;AACtB,QAAI,KAAK,YAAY;AAGnB,WAAK,WAAW,UAAU,CAAC,CAAC,KAAK,YAAY,eAAe,KAAK;AAAA,IACnE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB,aAAa;AAEnC,QAAI,CAAC,KAAK,UAAU,WAAW;AAC7B;AAAA,IACF;AACA,UAAM,UAAU,KAAK,YAAY;AACjC,UAAM,SAAS,QAAQ;AACvB,QAAI,gBAAgB,OAAO;AACzB,UAAI,CAAC,KAAK,SAAS;AACjB,aAAK,UAAU,KAAK,KAAK,cAAc,mBAAmB;AAC1D,eAAO,aAAa,KAAK,SAAS,OAAO;AAAA,MAC3C;AACA,aAAO,YAAY,OAAO;AAAA,IAC5B,WAAW,KAAK,SAAS;AACvB,WAAK,QAAQ,WAAW,aAAa,SAAS,KAAK,OAAO;AAAA,IAC5D;AAAA,EACF;AAAA;AAAA,EAEA,yBAAyB,WAAS;AAChC,UAAM,UAAU,KAAK,YAAY;AACjC,QAAI,MAAM,WAAW,SAAS;AAC5B,WAAK,QAAQ,IAAI,MAAM;AACrB,YAAI,MAAM,SAAS,iBAAiB;AAClC,eAAK,kBAAkB,KAAK,KAAK;AAAA,QACnC,OAAO;AAGL,cAAI,MAAM,SAAS,iBAAiB;AAClC,iBAAK,gBAAgB,KAAK;AAAA,UAC5B;AACA,eAAK,cAAc,KAAK,KAAK;AAAA,QAC/B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,OAAO,YAAO,SAAS,kBAAkB,mBAAmB;AAC1D,WAAO,KAAK,qBAAqB,YAAW;AAAA,EAC9C;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,YAAY,CAAC;AAAA,IAC1B,WAAW,SAAS,gBAAgB,IAAI,KAAK;AAC3C,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,KAAK,CAAC;AAAA,MACvB;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,WAAW,GAAG;AAAA,MACjE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,YAAY,MAAM,GAAG,YAAY;AAAA,IAC7C,UAAU;AAAA,IACV,cAAc,SAAS,uBAAuB,IAAI,KAAK;AACrD,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,SAAS,IAAI;AAC5B,QAAG,sBAAY,cAAc,CAAC,IAAI,cAAc,CAAC,IAAI,SAAS,WAAW,IAAI;AAC7E,QAAG,sBAAY,kBAAkB,IAAI,aAAa,KAAK,EAAE,mBAAmB,IAAI,SAAS,MAAM,EAAE,mBAAmB,IAAI,SAAS,MAAM,EAAE,mBAAmB,IAAI,SAAS,MAAM;AAAA,MACjL;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,UAAU;AAAA,MACV,MAAM;AAAA,MACN,cAAc;AAAA,MACd,WAAW;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,IACA,SAAS;AAAA,MACP,cAAc;AAAA,MACd,eAAe;AAAA,MACf,aAAa;AAAA,MACb,eAAe;AAAA,MACf,aAAa;AAAA,MACb,mBAAmB;AAAA,IACrB;AAAA,IACA,UAAU,CAAC,WAAW;AAAA,IACtB,oBAAoBA;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,iBAAiB,IAAI,GAAG,4BAA4B,CAAC;AAAA,IAChF,UAAU,SAAS,mBAAmB,IAAI,KAAK;AAC7C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,QAAG,uBAAa,CAAC;AACjB,QAAG,uBAAa;AAAA,MAClB;AAAA,IACF;AAAA,IACA,cAAc,CAAC,aAAa;AAAA,IAC5B,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,WAAW,CAAC;AAAA,IAClF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA;AAAA,QAET,gBAAgB;AAAA,QAChB,0BAA0B;AAAA,QAC1B,2BAA2B;AAAA,QAC3B,2BAA2B;AAAA,QAC3B,2BAA2B;AAAA;AAAA;AAAA;AAAA,QAI3B,sBAAsB;AAAA,QACtB,YAAY;AAAA,MACd;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,SAAS,CAAC,aAAa;AAAA,MACvB,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAOH,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EACvB,OAAO,OAAO,gBAAgB;AAAA,IAC5B,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,WAAW,OAAO,UAAU;AAAA,EAC5B,UAAU,OAAO,MAAM;AAAA,EACvB,qBAAqB,OAAO,iBAAiB;AAAA,EAC7C,iBAAiB,OAAO,uBAAuB;AAAA,IAC7C,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,sBAAsB;AAAA;AAAA,EAEtB;AAAA;AAAA,EAEA,WAAW,IAAI,UAAU;AAAA,EACzB;AAAA,EACA;AAAA;AAAA,EAEA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA;AAAA,EAEA,IAAI,MAAM;AACR,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,SAAS,OAAO;AAClB,SAAK,YAAY,sBAAsB,KAAK;AAAA,EAC9C;AAAA,EACA,YAAY,OAAO,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9C,IAAI,cAAc;AAChB,WAAO,KAAK,mBAAmB,KAAK,MAAM,KAAK,KAAK,mBAAmB,KAAK,IAAI;AAAA,EAClF;AAAA,EACA,IAAI,YAAY,OAAO;AACrB,SAAK,oBAAoB,SAAS,OAAO,OAAO,sBAAsB,KAAK;AAAA,EAC7E;AAAA,EACA;AAAA;AAAA,EAEA,gBAAgB,IAAI,aAAa;AAAA;AAAA,EAEjC;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAAA,EACA;AAAA;AAAA,EAEA,aAAa,IAAI,QAAQ;AAAA;AAAA,EAEzB,kBAAkB,IAAI,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9B,kBAAkB;AAAA,IAChB,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,wBAAwB,IAAI,QAAQ;AAAA;AAAA,EAEpC,IAAI,aAAa;AACf,WAAO,KAAK,gBAAgB,KAAK;AAAA,EACnC;AAAA,EACA,YAAY,OAAO,QAAQ;AAAA,EAC3B,cAAc;AACZ,UAAM,WAAW,OAAO,QAAQ;AAChC,UAAM,gBAAgB,OAAO,aAAa;AAG1C,SAAK,MAAM,OAAO,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AACjE,WAAK,iBAAiB;AACtB,WAAK,qBAAqB;AAAA,IAC5B,CAAC;AAGD,kBAAc,OAAO,EAAE,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM,KAAK,qBAAqB,CAAC;AACnG,QAAI,KAAK,mBAAmB,oBAAoB,SAAS,WAAW;AAClE,WAAK,QAAQ,kBAAkB,MAAM;AAGnC,mBAAW,MAAM;AACf,eAAK,SAAS,cAAc,UAAU,IAAI,uBAAuB;AACjE,eAAK,sBAAsB;AAAA,QAC7B,GAAG,GAAG;AAAA,MACR,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,SAAK,YAAY,QAAQ,KAAK,UAAU,KAAK,WAAW,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,YAAU;AACzG,WAAK,SAAS,MAAM,OAAO,OAAO,UAAQ,CAAC,KAAK,cAAc,KAAK,eAAe,IAAI,CAAC;AACvF,WAAK,SAAS,gBAAgB;AAAA,IAChC,CAAC;AACD,SAAK,SAAS,QAAQ,KAAK,UAAU,IAAI,CAAC,EAAE,UAAU,MAAM;AAC1D,WAAK,iBAAiB;AACtB,WAAK,SAAS,QAAQ,YAAU;AAC9B,aAAK,mBAAmB,MAAM;AAC9B,aAAK,qBAAqB,MAAM;AAChC,aAAK,iBAAiB,MAAM;AAAA,MAC9B,CAAC;AACD,UAAI,CAAC,KAAK,SAAS,UAAU,KAAK,cAAc,KAAK,MAAM,KAAK,KAAK,cAAc,KAAK,IAAI,GAAG;AAC7F,aAAK,qBAAqB;AAAA,MAC5B;AACA,WAAK,mBAAmB,aAAa;AAAA,IACvC,CAAC;AAED,SAAK,QAAQ,kBAAkB,MAAM;AACnC,WAAK,gBAAgB;AAAA,QAAK,aAAa,EAAE;AAAA;AAAA,QAEzC,UAAU,KAAK,UAAU;AAAA,MAAC,EAAE,UAAU,MAAM,KAAK,qBAAqB,CAAC;AAAA,IACzE,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,sBAAsB,SAAS;AACpC,SAAK,gBAAgB,SAAS;AAC9B,SAAK,SAAS,QAAQ;AACtB,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AAAA,EAC3B;AAAA;AAAA,EAEA,OAAO;AACL,SAAK,SAAS,QAAQ,YAAU,OAAO,KAAK,CAAC;AAAA,EAC/C;AAAA;AAAA,EAEA,QAAQ;AACN,SAAK,SAAS,QAAQ,YAAU,OAAO,MAAM,CAAC;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AAOrB,QAAI,OAAO;AACX,QAAI,QAAQ;AACZ,QAAI,KAAK,SAAS,KAAK,MAAM,QAAQ;AACnC,UAAI,KAAK,MAAM,QAAQ,QAAQ;AAC7B,gBAAQ,KAAK,MAAM,UAAU;AAAA,MAC/B,WAAW,KAAK,MAAM,QAAQ,QAAQ;AACpC,cAAM,QAAQ,KAAK,MAAM,UAAU;AACnC,gBAAQ;AACR,iBAAS;AAAA,MACX;AAAA,IACF;AACA,QAAI,KAAK,UAAU,KAAK,OAAO,QAAQ;AACrC,UAAI,KAAK,OAAO,QAAQ,QAAQ;AAC9B,iBAAS,KAAK,OAAO,UAAU;AAAA,MACjC,WAAW,KAAK,OAAO,QAAQ,QAAQ;AACrC,cAAM,QAAQ,KAAK,OAAO,UAAU;AACpC,iBAAS;AACT,gBAAQ;AAAA,MACV;AAAA,IACF;AAKA,WAAO,QAAQ;AACf,YAAQ,SAAS;AACjB,QAAI,SAAS,KAAK,gBAAgB,QAAQ,UAAU,KAAK,gBAAgB,OAAO;AAC9E,WAAK,kBAAkB;AAAA,QACrB;AAAA,QACA;AAAA,MACF;AAGA,WAAK,QAAQ,IAAI,MAAM,KAAK,sBAAsB,KAAK,KAAK,eAAe,CAAC;AAAA,IAC9E;AAAA,EACF;AAAA,EACA,YAAY;AAEV,QAAI,KAAK,aAAa,KAAK,UAAU,GAAG;AAEtC,WAAK,QAAQ,kBAAkB,MAAM,KAAK,gBAAgB,KAAK,CAAC;AAAA,IAClE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB,QAAQ;AACzB,WAAO,kBAAkB,KAAK,UAAU,KAAK,SAAS,OAAO,CAAC,EAAE,UAAU,MAAM;AAC9E,WAAK,qBAAqB;AAC1B,WAAK,mBAAmB,aAAa;AAAA,IACvC,CAAC;AACD,QAAI,OAAO,SAAS,QAAQ;AAC1B,aAAO,aAAa,KAAK,UAAU,KAAK,SAAS,OAAO,CAAC,EAAE,UAAU,MAAM,KAAK,mBAAmB,OAAO,MAAM,CAAC;AAAA,IACnH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB,QAAQ;AAG3B,WAAO,kBAAkB,KAAK,UAAU,KAAK,SAAS,OAAO,CAAC,EAAE,UAAU,MAAM;AAC9E,sBAAgB;AAAA,QACd,MAAM,MAAM,KAAK,iBAAiB;AAAA,MACpC,GAAG;AAAA,QACD,UAAU,KAAK;AAAA,MACjB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,iBAAiB,QAAQ;AACvB,WAAO,aAAa,KAAK,UAAU,MAAM,KAAK,SAAS,SAAS,KAAK,UAAU,CAAC,CAAC,EAAE,UAAU,MAAM;AACjG,WAAK,qBAAqB;AAC1B,WAAK,mBAAmB,aAAa;AAAA,IACvC,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,mBAAmB,OAAO;AACxB,UAAM,YAAY,KAAK,SAAS,cAAc;AAC9C,UAAM,YAAY;AAClB,QAAI,OAAO;AACT,gBAAU,IAAI,SAAS;AAAA,IACzB,OAAO;AACL,gBAAU,OAAO,SAAS;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA,EAEA,mBAAmB;AACjB,SAAK,SAAS,KAAK,OAAO;AAE1B,SAAK,SAAS,QAAQ,YAAU;AAC9B,UAAI,OAAO,YAAY,OAAO;AAC5B,YAAI,KAAK,QAAQ,SAAS,OAAO,cAAc,eAAe,YAAY;AACxE,wCAA8B,KAAK;AAAA,QACrC;AACA,aAAK,OAAO;AAAA,MACd,OAAO;AACL,YAAI,KAAK,UAAU,SAAS,OAAO,cAAc,eAAe,YAAY;AAC1E,wCAA8B,OAAO;AAAA,QACvC;AACA,aAAK,SAAS;AAAA,MAChB;AAAA,IACF,CAAC;AACD,SAAK,SAAS,KAAK,QAAQ;AAE3B,QAAI,KAAK,QAAQ,KAAK,KAAK,UAAU,OAAO;AAC1C,WAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,KAAK;AAAA,IACrB,OAAO;AACL,WAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,KAAK;AAAA,IACrB;AAAA,EACF;AAAA;AAAA,EAEA,YAAY;AACV,WAAO,KAAK,cAAc,KAAK,MAAM,KAAK,KAAK,OAAO,QAAQ,UAAU,KAAK,cAAc,KAAK,IAAI,KAAK,KAAK,KAAK,QAAQ;AAAA,EAC7H;AAAA,EACA,qBAAqB;AACnB,SAAK,cAAc,KAAK;AACxB,SAAK,8BAA8B;AAAA,EACrC;AAAA,EACA,gCAAgC;AAE9B,KAAC,KAAK,QAAQ,KAAK,IAAI,EAAE,OAAO,YAAU,UAAU,CAAC,OAAO,gBAAgB,KAAK,mBAAmB,MAAM,CAAC,EAAE,QAAQ,YAAU,OAAO,uBAAuB,CAAC;AAAA,EAChK;AAAA,EACA,qBAAqB;AACnB,WAAO,KAAK,cAAc,KAAK,MAAM,KAAK,KAAK,mBAAmB,KAAK,MAAM,KAAK,KAAK,cAAc,KAAK,IAAI,KAAK,KAAK,mBAAmB,KAAK,IAAI;AAAA,EACtJ;AAAA,EACA,cAAc,QAAQ;AACpB,WAAO,UAAU,QAAQ,OAAO;AAAA,EAClC;AAAA;AAAA,EAEA,mBAAmB,QAAQ;AACzB,QAAI,KAAK,qBAAqB,MAAM;AAClC,aAAO,CAAC,CAAC,UAAU,OAAO,SAAS;AAAA,IACrC;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO,YAAO,SAAS,2BAA2B,mBAAmB;AACnE,WAAO,KAAK,qBAAqB,qBAAoB;AAAA,EACvD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,sBAAsB,CAAC;AAAA,IACpC,gBAAgB,SAAS,kCAAkC,IAAI,KAAK,UAAU;AAC5E,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,kBAAkB,CAAC;AAC/C,QAAG,yBAAe,UAAU,WAAW,CAAC;AAAA,MAC1C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,WAAW,GAAG;AAC/D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc;AAAA,MACjE;AAAA,IACF;AAAA,IACA,WAAW,SAAS,yBAAyB,IAAI,KAAK;AACpD,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,kBAAkB,CAAC;AAAA,MACpC;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,eAAe,GAAG;AAAA,MACrE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,GAAG,sBAAsB;AAAA,IACrC,UAAU;AAAA,IACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,0CAA0C,IAAI,iBAAiB;AAAA,MAChF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,SAAS;AAAA,MACP,eAAe;AAAA,IACjB;AAAA,IACA,UAAU,CAAC,oBAAoB;AAAA,IAC/B,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,CAAC;AAAA,IACH,oBAAoB;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,GAAG,uBAAuB,GAAG,kBAAkB,GAAG,CAAC,GAAG,uBAAuB,GAAG,OAAO,CAAC;AAAA,IAClG,UAAU,SAAS,4BAA4B,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB,GAAG;AACtB,QAAG,qBAAW,GAAG,2CAA2C,GAAG,GAAG,OAAO,CAAC;AAC1E,QAAG,uBAAa,CAAC;AACjB,QAAG,uBAAa,GAAG,CAAC;AACpB,QAAG,qBAAW,GAAG,2CAA2C,GAAG,GAAG,oBAAoB;AAAA,MACxF;AACA,UAAI,KAAK,GAAG;AACV,QAAG,wBAAc,IAAI,cAAc,IAAI,EAAE;AACzC,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,CAAC,IAAI,WAAW,IAAI,EAAE;AAAA,MACzC;AAAA,IACF;AAAA,IACA,cAAc,CAAC,gBAAgB;AAAA,IAC/B,QAAQ,CAAC,igJAAigJ;AAAA,IAC1gJ,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,kDAAkD;AAAA,MACpD;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,SAAS,CAAC,gBAAgB;AAAA,MAC1B,UAAU;AAAA,MACV,QAAQ,CAAC,igJAAigJ;AAAA,IAC5gJ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA;AAAA;AAAA,QAGhB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,oBAAN,MAAM,2BAA0B,iBAAiB;AAAA,EAC/C,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,0BAA0B,mBAAmB;AAC3D,cAAQ,wCAAmC,sCAAoC,gCAAsB,kBAAiB,IAAI,qBAAqB,kBAAiB;AAAA,IAClK;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,qBAAqB,CAAC;AAAA,IACnC,WAAW,CAAC,GAAG,sBAAsB,qBAAqB;AAAA,IAC1D,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IAClC,oBAAoBA;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU,SAAS,2BAA2B,IAAI,KAAK;AACrD,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,uBAAa,CAAC;AAAA,MACnB;AAAA,IACF;AAAA,IACA,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,aAAN,MAAM,oBAAmB,UAAU;AAAA;AAAA,EAEjC,IAAI,kBAAkB;AACpB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,gBAAgB,OAAO;AACzB,SAAK,mBAAmB,sBAAsB,KAAK;AAAA,EACrD;AAAA,EACA,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnB,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,YAAY,OAAO;AACrB,SAAK,eAAe,qBAAqB,KAAK;AAAA,EAChD;AAAA,EACA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKf,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,eAAe,OAAO;AACxB,SAAK,kBAAkB,qBAAqB,KAAK;AAAA,EACnD;AAAA,EACA,kBAAkB;AAAA,EAClB,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,mBAAmB,mBAAmB;AACpD,cAAQ,iCAA4B,+BAA6B,gCAAsB,WAAU,IAAI,qBAAqB,WAAU;AAAA,IACtI;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,aAAa,CAAC;AAAA,IAC3B,WAAW,CAAC,YAAY,MAAM,GAAG,cAAc,aAAa;AAAA,IAC5D,UAAU;AAAA,IACV,cAAc,SAAS,wBAAwB,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,SAAS,IAAI;AAC5B,QAAG,sBAAY,OAAO,IAAI,kBAAkB,IAAI,cAAc,MAAM,IAAI,EAAE,UAAU,IAAI,kBAAkB,IAAI,iBAAiB,MAAM,IAAI;AACzI,QAAG,sBAAY,kBAAkB,IAAI,aAAa,KAAK,EAAE,mBAAmB,IAAI,SAAS,MAAM,EAAE,mBAAmB,IAAI,SAAS,MAAM,EAAE,mBAAmB,IAAI,SAAS,MAAM,EAAE,qBAAqB,IAAI,eAAe;AAAA,MAC3N;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,gBAAgB;AAAA,IAClB;AAAA,IACA,UAAU,CAAC,YAAY;AAAA,IACvB,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IAClC,oBAAoBA;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,iBAAiB,IAAI,GAAG,4BAA4B,CAAC;AAAA,IAChF,UAAU,SAAS,oBAAoB,IAAI,KAAK;AAC9C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,QAAG,uBAAa,CAAC;AACjB,QAAG,uBAAa;AAAA,MAClB;AAAA,IACF;AAAA,IACA,cAAc,CAAC,aAAa;AAAA,IAC5B,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,YAAY;AAAA;AAAA,QAEZ,gBAAgB;AAAA,QAChB,0BAA0B;AAAA,QAC1B,2BAA2B;AAAA,QAC3B,2BAA2B;AAAA,QAC3B,2BAA2B;AAAA,QAC3B,6BAA6B;AAAA,QAC7B,kBAAkB;AAAA,QAClB,qBAAqB;AAAA,MACvB;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,SAAS,CAAC,aAAa;AAAA,MACvB,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,sBAAN,MAAM,6BAA4B,mBAAmB;AAAA,EACnD,cAAc;AAAA;AAAA,EAEd,WAAW;AAAA,EACX,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,4BAA4B,mBAAmB;AAC7D,cAAQ,0CAAqC,wCAAsC,gCAAsB,oBAAmB,IAAI,qBAAqB,oBAAmB;AAAA,IAC1K;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,uBAAuB,CAAC;AAAA,IACrC,gBAAgB,SAAS,mCAAmC,IAAI,KAAK,UAAU;AAC7E,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,mBAAmB,CAAC;AAChD,QAAG,yBAAe,UAAU,YAAY,CAAC;AAAA,MAC3C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,WAAW,GAAG;AAC/D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc;AAAA,MACjE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,GAAG,wBAAwB,uBAAuB;AAAA,IAC9D,UAAU;AAAA,IACV,cAAc,SAAS,iCAAiC,IAAI,KAAK;AAC/D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,0CAA0C,IAAI,iBAAiB;AAAA,MAChF;AAAA,IACF;AAAA,IACA,UAAU,CAAC,qBAAqB;AAAA,IAChC,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,GAAG;AAAA,MACD,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IAClC,oBAAoB;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,GAAG,uBAAuB,GAAG,kBAAkB,GAAG,CAAC,GAAG,uBAAuB,GAAG,OAAO,CAAC;AAAA,IAClG,UAAU,SAAS,6BAA6B,IAAI,KAAK;AACvD,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB,GAAG;AACtB,QAAG,qBAAW,GAAG,4CAA4C,GAAG,GAAG,OAAO,CAAC;AAC3E,QAAG,uBAAa,CAAC;AACjB,QAAG,uBAAa,GAAG,CAAC;AACpB,QAAG,qBAAW,GAAG,4CAA4C,GAAG,GAAG,qBAAqB;AAAA,MAC1F;AACA,UAAI,KAAK,GAAG;AACV,QAAG,wBAAc,IAAI,cAAc,IAAI,EAAE;AACzC,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,CAAC,IAAI,WAAW,IAAI,EAAE;AAAA,MACzC;AAAA,IACF;AAAA,IACA,cAAc,CAAC,iBAAiB;AAAA,IAChC,QAAQ,CAAC,GAAG;AAAA,IACZ,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,qBAAqB,CAAC;AAAA,IAC5F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,kDAAkD;AAAA,MACpD;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,GAAG;AAAA,QACD,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,SAAS,CAAC,iBAAiB;AAAA,MAC3B,UAAU;AAAA,MACV,QAAQ,CAAC,igJAAigJ;AAAA,IAC5gJ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA;AAAA;AAAA,QAGjB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO,YAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,SAAS,CAAC,iBAAiB,qBAAqB,qBAAqB,eAAe;AAAA,EACtF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB,qBAAqB,WAAW,oBAAoB,kBAAkB,YAAY,qBAAqB,iBAAiB;AAAA,MACnJ,SAAS,CAAC,qBAAqB,iBAAiB,WAAW,oBAAoB,kBAAkB,YAAY,qBAAqB,iBAAiB;AAAA,IACrJ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACj3CH,IAAMC,OAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC;AACvC,IAAMC,OAAM,CAAC,KAAK,iBAAiB;AACnC,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,OAAO,YAAO,SAAS,sBAAsB,mBAAmB;AAC9D,WAAO,KAAK,qBAAqB,gBAAe;AAAA,EAClD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,iBAAiB,CAAC;AAAA,IAC/B,WAAW,CAAC,GAAG,iBAAiB;AAAA,IAChC,UAAU,CAAC,eAAe;AAAA,EAC5B,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,aAAN,MAAM,YAAW;AAAA,EACf,cAAc,OAAO,UAAU;AAAA,EAC/B,YAAY,OAAO,QAAQ;AAAA,EAC3B,YAAY,OAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS3B;AAAA;AAAA,EAEA;AAAA,EACA,cAAc;AAAA,EAAC;AAAA,EACf,kBAAkB;AAChB,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,wBAAwB;AAC7B,WAAK,aAAa,QAAQ,UAAU,MAAM,KAAK,wBAAwB,CAAC;AAAA,IAC1E;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,0BAA0B;AACxB,QAAI,KAAK,aAAa,WAAW,OAAO,cAAc,eAAe,YAAY;AAG/E,YAAM,kBAAkB,MAAM,KAAK,KAAK,YAAY,cAAc,UAAU,EAAE,OAAO,UAAQ,EAAE,KAAK,aAAa,KAAK,UAAU,SAAS,iBAAiB,EAAE,EAAE,OAAO,UAAQ,KAAK,cAAc,KAAK,YAAY,KAAK,UAAU,eAAe,EAAE,EAAE,KAAK,UAAQ,CAAC,EAAE,KAAK,eAAe,KAAK,YAAY,KAAK,EAAE;AAC/S,UAAI,iBAAiB;AACnB,oCAA4B;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,YAAO,SAAS,mBAAmB,mBAAmB;AAC3D,WAAO,KAAK,qBAAqB,aAAY;AAAA,EAC/C;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,aAAa,CAAC;AAAA,IAC3B,gBAAgB,SAAS,0BAA0B,IAAI,KAAK,UAAU;AACpE,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,eAAe,CAAC;AAAA,MAC9C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,eAAe;AAAA,MAClE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,GAAG,aAAa;AAAA,IAC5B,UAAU;AAAA,IACV,cAAc,SAAS,wBAAwB,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,IAAI,QAAQ,SAAS,IAAI,QAAQ,EAAE;AACjD,QAAG,sBAAY,6BAA6B,IAAI,aAAa,SAAS,CAAC,EAAE,0BAA0B,IAAI,aAAa,WAAW,CAAC;AAAA,MAClI;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,UAAU,CAAC,YAAY;AAAA,IACvB,oBAAoBA;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU,SAAS,oBAAoB,IAAI,KAAK;AAC9C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgBD,IAAG;AACtB,QAAG,uBAAa,CAAC;AACjB,QAAG,uBAAa,GAAG,CAAC;AAAA,MACtB;AAAA,IACF;AAAA,IACA,QAAQ,CAAC,ogEAAogE;AAAA,IAC7gE,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,WAAW;AAAA,QACX,qCAAqC;AAAA,QACrC,kCAAkC;AAAA,MACpC;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,UAAU;AAAA,MACV,QAAQ,CAAC,ogEAAogE;AAAA,IAC/gE,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,QACpB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,SAAS,8BAA8B;AACrC,QAAM,MAAM,gMAA0M;AACxN;AACA,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO,YAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,SAAS,CAAC,iBAAiB,eAAe;AAAA,EAC5C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB,YAAY,aAAa;AAAA,MACpD,SAAS,CAAC,YAAY,eAAe,eAAe;AAAA,IACtD,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACoFG,IAAO,qBAAP,MAAO,oBAAkB;EAmBT;;EAjBpB,SAAS;EACT,SAAS;EACT,SAAS;EACT,WAAW;EACX,cAAc;EACd,UAAU;EACV,YAAY;EACZ,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EACb,UAAU;EACV,cAAc;EACd,kBAAkB;EAClB,eAAe;EAEf,WAAmB;EAEnB,YAAoB,aAAwB;AAAxB,SAAA,cAAA;EAA2B;EAE/C,WAAQ;AACN,UAAM,cAAc,KAAK,YAAY,eAAc;AACnD,QAAI,aAAa;AACf,WAAK,WAAW,YAAY;IAC9B;EACF;EAEA,gBAAa;EAEb;EAEA,SAAM;AACJ,SAAK,YAAY,OAAM,EAAG,UAAU;MAClC,MAAM,MAAK;MAEX;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,wBAAwB,KAAK;AAE3C,aAAK,YAAY,mBAAkB;MACrC;KACD;EACH;;qCA3CW,qBAAkB,4BAAA,WAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,0BAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,WAAA,EAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,SAAA,WAAA,GAAA,kBAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,cAAA,UAAA,SAAA,UAAA,GAAA,iBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,QAAA,QAAA,UAAA,IAAA,GAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,WAAA,oBAAA,QAAA,GAAA,CAAA,GAAA,YAAA,GAAA,MAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,kBAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,cAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,aAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,cAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,gBAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,gBAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,cAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,eAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,gBAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,WAAA,oBAAA,QAAA,GAAA,CAAA,GAAA,cAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AA7M3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAiC,GAAA,eAAA,CAAA,EAEuB,GAAA,UAAA,CAAA;AAC5B,MAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAS,IAAA,cAAA,CAAe;MAAA,CAAA;AAC9C,MAAA,oBAAA,GAAA,WAAA,CAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,QAAA,CAAA;AAAyB,MAAA,iBAAA,GAAA,cAAA;AAAY,MAAA,uBAAA;AACrC,MAAA,oBAAA,GAAA,QAAA,CAAA;AACA,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,QAAA,CAAA;AACG,MAAA,iBAAA,CAAA;AAAY,MAAA,uBAAA;AACpC,MAAA,yBAAA,IAAA,QAAA,CAAA;AAAwB,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA,EAAO;AAE3C,MAAA,yBAAA,IAAA,UAAA,EAAA;AAA8C,MAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAS,IAAA,OAAA,CAAQ;MAAA,CAAA;AAC7D,MAAA,oBAAA,IAAA,WAAA,CAAA;AACF,MAAA,uBAAA,EAAS;AAIX,MAAA,yBAAA,IAAA,yBAAA,EAAA,EAAiD,IAAA,eAAA,IAAA,CAAA,EACU,IAAA,cAAA,EACzC,IAAA,OAAA,EAAA,EAEa,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,SAAA;AAAO,MAAA,uBAAA;AACrC,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA,EAAO;AAEzB,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,gBAAA;AAAc,MAAA,uBAAA,EAAO;AAE7B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA,EAAO;AAEzB,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,WAAA;AAAS,MAAA,uBAAA,EAAO,EACpB;AAIN,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA;AACxC,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA,EAAO;AAE1B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA,EAAO,EACvB;AAIN,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA;AAC1C,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,iBAAA;AAAe,MAAA,uBAAA,EAAO;AAE9B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA,EAAO,EACrB;AAIN,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,OAAA;AAAK,MAAA,uBAAA;AACnC,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,uBAAA;AAAqB,MAAA,uBAAA,EAAO;AAEpC,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA,EAAO;AAE3B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA,EAAO,EACvB,EACA,EACO;AAIjB,MAAA,yBAAA,IAAA,uBAAA,EAAA;AACE,MAAA,oBAAA,IAAA,eAAA;AACF,MAAA,uBAAA,EAAsB,EACA;;;AAvFX,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,MAAA;AAKe,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,IAAA,QAAA;AAIf,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,YAAA;AAYM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,MAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,MAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,WAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,eAAA;AASA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,QAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,WAAA;AASA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,aAAA;AASA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,UAAA;;;IA3FrB;IACA;IAAY;IAAA;IAAA;IACZ;IAAgB;IAAA;IAAA;IAChB;IAAgB;IAChB;IAAe;IACf;IAAa;IAAA;IACb;IACA;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,iqEAAA,EAAA,CAAA;;;sEAgNR,oBAAkB,CAAA;UA5N9B;uBACW,4BAA0B,YACxB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8FT,QAAA,CAAA,6/DAAA,EAAA,CAAA;;;;6EAgHU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,6EAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;AChP/B,SAAS,sCAAsC,IAAI,KAAK;AACtD,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU,GAAG,OAAO,CAAC;AAAA,EAC1B;AACF;AACA,IAAM,mCAAmC,IAAI,eAAe,kCAAkC;AAM9F,IAAM,4BAA4B,IAAI,eAAe,6BAA6B;AAAA,EAChF,YAAY;AAAA,EACZ,SAAS;AACX,CAAC;AAMD,SAAS,oCAAoC;AAC3C,QAAM,YAAY,OAAO,QAAQ;AACjC,QAAM,YAAY,YAAY,UAAU,WAAW;AACnD,SAAO;AAAA;AAAA;AAAA,IAGL,aAAa,MAAM,YAAY,UAAU,WAAW,UAAU,SAAS;AAAA,EACzE;AACF;AACA,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,cAAc,OAAO,UAAU;AAAA,EAC/B,UAAU,OAAO,MAAM;AAAA,EACvB,qBAAqB,OAAO,iBAAiB;AAAA,EAC7C,YAAY,OAAO,SAAS;AAAA,EAC5B;AAAA,EACA,iBAAiB,OAAO,uBAAuB;AAAA,IAC7C,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,cAAc;AACZ,UAAM,WAAW,OAAO,kCAAkC;AAAA,MACxD,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,mBAAmB,KAAK,mBAAmB;AAChD,QAAI,UAAU;AACZ,UAAI,SAAS,OAAO;AAClB,aAAK,QAAQ,KAAK,gBAAgB,SAAS;AAAA,MAC7C;AACA,WAAK,OAAO,SAAS,QAAQ,KAAK;AAAA,IACpC;AAAA,EACF;AAAA;AAAA,EAEA,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASnB,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK;AAAA,EAC7B;AAAA,EACA,IAAI,MAAM,OAAO;AACf,SAAK,SAAS;AAAA,EAChB;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA;AAAA,EAEhB,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM,GAAG;AACX,SAAK,SAAS,MAAM,KAAK,CAAC;AAC1B,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA,EACA,SAAS;AAAA;AAAA,EAET,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB;AAAA,EAC9B;AAAA,EACA,IAAI,YAAY,GAAG;AACjB,SAAK,eAAe,MAAM,KAAK,CAAC;AAChC,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA,EACA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMf,eAAe,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQhC,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,KAAK,OAAO;AAGd,SAAK,QAAQ;AACb,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA,EACA,QAAQ;AAAA,EACR,kBAAkB;AAGhB,SAAK,QAAQ,kBAAkB,MAAM;AACnC,WAAK,wBAAwB,KAAK,UAAU,OAAO,KAAK,YAAY,eAAe,iBAAiB,KAAK,qBAAqB;AAAA,IAChI,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,wBAAwB;AAAA,EAC/B;AAAA;AAAA,EAEA,0BAA0B;AACxB,WAAO,UAAU,KAAK,iBAAiB,IAAI,IAAI,KAAK,QAAQ,GAAG;AAAA,EACjE;AAAA;AAAA,EAEA,yBAAyB;AACvB,WAAO,GAAG,KAAK,SAAS,WAAW,KAAK,cAAc,GAAG;AAAA,EAC3D;AAAA;AAAA,EAEA,mBAAmB;AACjB,WAAO,KAAK,SAAS,mBAAmB,KAAK,SAAS;AAAA,EACxD;AAAA;AAAA,EAEA,wBAAwB,WAAS;AAC/B,QAAI,KAAK,aAAa,UAAU,WAAW,KAAK,CAAC,MAAM,UAAU,CAAC,MAAM,OAAO,UAAU,SAAS,kCAAkC,GAAG;AACrI;AAAA,IACF;AACA,QAAI,KAAK,SAAS,iBAAiB,KAAK,SAAS,UAAU;AACzD,WAAK,QAAQ,IAAI,MAAM,KAAK,aAAa,KAAK;AAAA,QAC5C,OAAO,KAAK;AAAA,MACd,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,kBAAkB,CAAC;AAAA,IAChC,WAAW,CAAC,QAAQ,eAAe,iBAAiB,KAAK,iBAAiB,OAAO,YAAY,MAAM,GAAG,wBAAwB,qBAAqB;AAAA,IACnJ,UAAU;AAAA,IACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,iBAAiB,IAAI,iBAAiB,IAAI,OAAO,IAAI,KAAK,EAAE,QAAQ,IAAI,IAAI;AAC3F,QAAG,qBAAW,SAAS,IAAI,KAAK;AAChC,QAAG,sBAAY,2BAA2B,IAAI,gBAAgB,EAAE,wCAAwC,CAAC,IAAI,gBAAgB,EAAE,sCAAsC,IAAI,iBAAiB,CAAC;AAAA,MAC7L;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,MACP,OAAO,CAAC,GAAG,SAAS,SAAS,eAAe;AAAA,MAC5C,aAAa,CAAC,GAAG,eAAe,eAAe,eAAe;AAAA,MAC9D,MAAM;AAAA,IACR;AAAA,IACA,SAAS;AAAA,MACP,cAAc;AAAA,IAChB;AAAA,IACA,UAAU,CAAC,gBAAgB;AAAA,IAC3B,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,eAAe,QAAQ,GAAG,6BAA6B,GAAG,CAAC,GAAG,iCAAiC,GAAG,CAAC,GAAG,kCAAkC,GAAG,CAAC,eAAe,QAAQ,GAAG,4BAA4B,kCAAkC,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,eAAe,QAAQ,GAAG,4BAA4B,oCAAoC,CAAC;AAAA,IACpX,UAAU,SAAS,wBAAwB,IAAI,KAAK;AAClD,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,QAAG,oBAAU,GAAG,OAAO,CAAC;AACxB,QAAG,qBAAW,GAAG,uCAAuC,GAAG,GAAG,OAAO,CAAC;AACtE,QAAG,uBAAa;AAChB,QAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,QAAG,oBAAU,GAAG,QAAQ,CAAC;AACzB,QAAG,uBAAa;AAChB,QAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,QAAG,oBAAU,GAAG,QAAQ,CAAC;AACzB,QAAG,uBAAa;AAAA,MAClB;AACA,UAAI,KAAK,GAAG;AACV,QAAG,oBAAU;AACb,QAAG,sBAAY,cAAc,IAAI,uBAAuB,CAAC;AACzD,QAAG,oBAAU;AACb,QAAG,wBAAc,IAAI,SAAS,WAAW,IAAI,EAAE;AAC/C,QAAG,oBAAU;AACb,QAAG,sBAAY,aAAa,IAAI,wBAAwB,CAAC;AAAA,MAC3D;AAAA,IACF;AAAA,IACA,QAAQ,CAAC;AAAA,CAAkzO;AAAA,IAC3zO,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,iBAAiB;AAAA;AAAA;AAAA,QAGjB,YAAY;AAAA,QACZ,wBAAwB;AAAA,QACxB,eAAe;AAAA,QACf,SAAS;AAAA,QACT,WAAW;AAAA,QACX,mCAAmC;AAAA,QACnC,gDAAgD;AAAA,QAChD,8CAA8C;AAAA,MAChD;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC;AAAA,CAAkzO;AAAA,IAC7zO,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAEH,SAAS,MAAM,GAAG,MAAM,GAAG,MAAM,KAAK;AACpC,SAAO,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC;AACvC;AACA,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB,OAAO,YAAO,SAAS,6BAA6B,mBAAmB;AACrE,WAAO,KAAK,qBAAqB,uBAAsB;AAAA,EACzD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,SAAS,CAAC,eAAe;AAAA,EAC3B,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,sBAAsB,CAAC;AAAA,IAC7F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,cAAc;AAAA,MACxB,SAAS,CAAC,gBAAgB,eAAe;AAAA,IAC3C,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;ACnQG,IAAO,iBAAP,MAAO,gBAAc;EAGL;EAFZ,SAAS;EAEjB,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;;EAGxC,aAAU;AACR,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,UAAU;EACrD;;EAGA,cAAc,MAAuB;AACnC,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,YAAY,IAAI;EAC3D;;EAGA,eAAe,MAAwB;AACrC,WAAO,KAAK,KAAK,IAAyB,GAAG,KAAK,MAAM,qBAAqB,IAAI;EACnF;;EAGA,gBAAa;AACX,WAAO,KAAK,KAAK,OAA4B,GAAG,KAAK,MAAM,UAAU;EACvE;;EAGA,cAAW;AACT,WAAO,KAAK,KAAK,IAAY,KAAK,MAAM;EAC1C;;EAGA,YAAY,IAAU;AACpB,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACnD;;EAGA,eAAe,QAAgB,MAAmC;AAChE,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,iBAAiB,EAAE,QAAQ,KAAI,CAAE;EAC5E;;qCAtCW,iBAAc,mBAAA,UAAA,CAAA;EAAA;4EAAd,iBAAc,SAAd,gBAAc,WAAA,YAFb,OAAM,CAAA;;;sEAEP,gBAAc,CAAA;UAH1B;WAAW;MACV,YAAY;KACb;;;;;ACJK,IAAO,eAAP,MAAO,cAAY;EAGH;EAFZ,SAAS;;EAEjB,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;;EAGxC,eAAY;AACV,WAAO,KAAK,KAAK,IAAa,KAAK,MAAM;EAC3C;;EAGA,aAAa,IAAU;AACrB,WAAO,KAAK,KAAK,IAAW,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACpD;;EAGA,YAAY,OAAqB;AAC/B,WAAO,KAAK,KAAK,KAAY,KAAK,QAAQ,KAAK;EACjD;;EAGA,YAAY,IAAY,OAAqB;AAC3C,WAAO,KAAK,KAAK,IAAW,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,KAAK;EAC3D;;EAGA,YAAY,IAAU;AACpB,WAAO,KAAK,KAAK,OAAO,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EAChD;;EAGA,cAAc,QAAc;AAC1B,WAAO,KAAK,KAAK,IAAa,GAAG,KAAK,MAAM,SAAS,MAAM,EAAE;EAC/D;;EAGA,aAAa,QAAgB,SAAe;AAC1C,WAAO,KAAK,KAAK,KAAc,GAAG,KAAK,MAAM,SAAS,MAAM,IAAI,EAAE,QAAO,CAAE;EAC7E;;EAGA,gBAAgB,QAAgB,SAAe;AAC7C,WAAO,KAAK,KAAK,OAAgB,GAAG,KAAK,MAAM,SAAS,MAAM,IAAI,OAAO,EAAE;EAC7E;;EAGA,eAAe,UAAkB,gBAAuB;AAKtD,WAAO,KAAK,KAAK,KAId,GAAG,KAAK,MAAM,aAAa,EAAE,UAAU,eAAc,CAAE;EAC5D;;qCAxDW,eAAY,mBAAA,UAAA,CAAA;EAAA;4EAAZ,eAAY,SAAZ,cAAY,WAAA,YAFX,OAAM,CAAA;;;sEAEP,cAAY,CAAA;UAHxB;WAAW;MACV,YAAY;KACb;;;;;AC8BK,IAAO,YAAP,MAAO,WAAS;EAGA;EAFZ,SAAS;EAEjB,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;;EAGxC,SAAS,MAAU;AACjB,UAAM,WAAW,IAAI,SAAQ;AAC7B,aAAS,OAAO,MAAM,IAAI;AAE1B,WAAO,KAAK,KAAK,KAAuB,GAAG,KAAK,MAAM,WAAW,UAAU;MACzE,gBAAgB;MAChB,SAAS;KACV;EACH;;EAGA,MAAM,QAAc;AAClB,WAAO,KAAK,KAAK,IAAQ,GAAG,KAAK,MAAM,IAAI,MAAM,EAAE,EAAE,KACnD,WAAW,WAAQ;AACjB,UAAI,MAAM,WAAW,KAAK;AAExB,eAAO,GAAG,IAAI;MAChB;AACA,YAAM;IACR,CAAC,CAAC;EAEN;;EAGA,WAAQ;AACN,WAAO,KAAK,KAAK,OAA4B,KAAK,MAAM;EAC1D;;EAGA,oBAAoB,MAAU;AAC5B,UAAM,WAAW,IAAI,SAAQ;AAC7B,aAAS,OAAO,MAAM,IAAI;AAE1B,WAAO,KAAK,KAAK,KAA8B,GAAG,KAAK,MAAM,mBAAmB,QAAQ;EAC1F;;EAGA,eAAY;AACV,WAAO,KAAK,KAAK,KAA6B,GAAG,KAAK,MAAM,aAAa,CAAA,CAAE;EAC7E;;EAGA,WAAW,IAAU;AACnB,WAAO,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,aAAa,EAAE,IAAI;MACpD,cAAc;KACf;EACH;;EAGA,kBAAkB,OAAqB;AACrC,QAAI,MAAM,SAAS,cAAc,gBAAgB;AAC/C,YAAM,WAAW,KAAK,MAAM,MAAM,MAAM,UAAU,MAAM,SAAS,MAAM,OAAO;AAC9E,aAAO;IACT;AACA,WAAO;EACT;;EAGA,SAAS,MAAY,UAAgB;AACnC,UAAM,OAAO,SAAS,cAAc,GAAG;AACvC,SAAK,OAAO,OAAO,IAAI,gBAAgB,IAAI;AAC3C,SAAK,WAAW;AAChB,SAAK,MAAK;AACV,WAAO,IAAI,gBAAgB,KAAK,IAAI;EACtC;;qCAtEW,YAAS,mBAAA,UAAA,CAAA;EAAA;4EAAT,YAAS,SAAT,WAAS,WAAA,YAFR,OAAM,CAAA;;;sEAEP,WAAS,CAAA;UAHrB;WAAW;MACV,YAAY;KACb;;;;;ACeK,IAAO,oBAAP,MAAO,mBAAiB;EAGR;EAFZ,SAAS,GAAG,YAAY,MAAM;EAEtC,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAmB;EAE/B,aAAU;AAChB,UAAM,QAAQ,aAAa,QAAQ,OAAO;AAC1C,WAAO,IAAI,YAAW,EAAG,IAAI,iBAAiB,UAAU,KAAK,EAAE;EACjE;EAEA,mBAAmB,MAA4B;AAC7C,WAAO,KAAK,KAAK,KAAiB,KAAK,QAAQ,MAAM,EAAE,SAAS,KAAK,WAAU,EAAE,CAAE;EACrF;EAEA,qBAAkB;AAChB,WAAO,KAAK,KAAK,IAAkB,KAAK,QAAQ,EAAE,SAAS,KAAK,WAAU,EAAE,CAAE;EAChF;EAEA,cAAc,IAAU;AACtB,WAAO,KAAK,KAAK,IAAgB,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,EAAE,SAAS,KAAK,WAAU,EAAE,CAAE;EACzF;EAGA,eAAe,IAAY,MAAwB;AACjD,WAAO,KAAK,KAAK,MAAkB,GAAG,KAAK,MAAM,IAAI,EAAE,aAAa,MAAM,EAAE,SAAS,KAAK,WAAU,EAAE,CAAE;EAC1G;EAEA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,EAAE,SAAS,KAAK,WAAU,EAAE,CAAE;EACtF;;qCA7BW,oBAAiB,mBAAA,UAAA,CAAA;EAAA;4EAAjB,oBAAiB,SAAjB,mBAAiB,WAAA,YAFhB,OAAM,CAAA;;;sEAEP,mBAAiB,CAAA;UAH7B;WAAW;MACV,YAAY;KACb;;;;;AClBK,IAAO,oBAAP,MAAO,mBAAiB;EAGR;EAFZ,SAAS;EAEjB,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;;EAGxC,iBAAiB,MAA0B;AACzC,UAAM,gBAAgB,KAAK,YAAY,IAAI;AAC3C,WAAO,KAAK,KAAK,KAAiB,KAAK,QAAQ,aAAa;EAC9D;;EAGA,eAAe,QAAc;AAC3B,WAAO,KAAK,KAAK,IAAkB,GAAG,KAAK,MAAM,IAAI,MAAM,EAAE;EAC/D;;EAGA,iBAAiB,IAAY,MAA0B;AACrD,UAAM,gBAAgB,KAAK,YAAY,IAAI;AAC3C,WAAO,KAAK,KAAK,IAAgB,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,aAAa;EACxE;;EAGA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,OAA4B,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACrE;;EAGQ,YAAY,MAAS;AAC3B,UAAM,gBAAgB,mBAAK;AAE3B,QAAI,KAAK,WAAW;AAClB,oBAAc,YAAY,KAAK,WAAW,KAAK,SAAS;IAC1D;AAEA,QAAI,KAAK,SAAS;AAChB,oBAAc,UAAU,KAAK,WAAW,KAAK,OAAO;IACtD;AAEA,WAAO;EACT;EAEQ,WAAW,MAAU;AAC3B,WAAO,KAAK,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC;EACxC;;qCA5CW,oBAAiB,mBAAA,UAAA,CAAA;EAAA;4EAAjB,oBAAiB,SAAjB,mBAAiB,WAAA,YAFhB,OAAM,CAAA;;;sEAEP,mBAAiB,CAAA;UAH7B;WAAW;MACV,YAAY;KACb;;;;;ACIK,IAAO,mBAAP,MAAO,kBAAgB;EAGP;EAFZ,SAAS;EAEjB,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;;EAGxC,gBAAgB,MAAyB;AACvC,UAAM,gBAAgB,KAAK,YAAY,IAAI;AAC3C,WAAO,KAAK,KAAK,KAAgB,KAAK,QAAQ,aAAa;EAC7D;;EAGA,cAAc,QAAc;AAC1B,WAAO,KAAK,KAAK,IAAiB,GAAG,KAAK,MAAM,IAAI,MAAM,EAAE;EAC9D;;EAGA,gBAAgB,IAAY,MAAyB;AACnD,UAAM,gBAAgB,KAAK,YAAY,IAAI;AAC3C,WAAO,KAAK,KAAK,IAAe,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,aAAa;EACvE;;EAGA,gBAAgB,IAAU;AACxB,WAAO,KAAK,KAAK,OAA4B,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACrE;;EAGQ,YAAY,MAAS;AAC3B,UAAM,gBAAgB,mBAAK;AAE3B,QAAI,KAAK,WAAW;AAClB,oBAAc,YAAY,KAAK,WAAW,KAAK,SAAS;IAC1D;AAEA,QAAI,KAAK,SAAS;AAChB,oBAAc,UAAU,KAAK,WAAW,KAAK,OAAO;IACtD;AAEA,WAAO;EACT;EAEQ,WAAW,MAAU;AAC3B,WAAO,KAAK,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC;EACxC;;qCA5CW,mBAAgB,mBAAA,UAAA,CAAA;EAAA;4EAAhB,mBAAgB,SAAhB,kBAAgB,WAAA,YAFf,OAAM,CAAA;;;sEAEP,kBAAgB,CAAA;UAH5B;WAAW;MACV,YAAY;KACb;;;;;;;ACEK,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,yBAAA;AAAuB,IAAA,uBAAA,EAAI;;;;;;AAIhC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,0DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AADjD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAyCjB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6D,GAAA,OAAA,EAAA,EAC5B,GAAA,IAAA;AACzB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;AACjB,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAsB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA,EAAO;AAE9C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8B,GAAA,MAAA;AACtB,IAAA,iBAAA,CAAA;;;AAAmG,IAAA,uBAAA,EAAO;AAElH,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAkC,IAAA,iBAAA,EAAA;AAAmB,IAAA,uBAAA,EAAI;;;;AANnD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;AACkB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,OAAA;AAGhB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,sBAAA,GAAA,GAAA,OAAA,WAAA,UAAA,GAAA,OAAA,OAAA,UAAA,YAAA,sBAAA,IAAA,GAAA,OAAA,SAAA,UAAA,GAAA,EAAA;AAE0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,WAAA;;;;;AAEpC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,GAAA,gCAAA;AACF,IAAA,uBAAA;;;;;AA0BE,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAyD,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;;;;AAAnB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,WAAA;;;;;AAX3D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2D,GAAA,OAAA,EAAA,EAC3B,GAAA,IAAA;AACxB,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;AAClB,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAO;AAEtD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+B,GAAA,QAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AACjD,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,EAAA;;;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,KAAA,EAAA;AACF,IAAA,uBAAA;;;;AAVQ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,MAAA;AACsB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,WAAA;AAGG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,YAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,OAAA,WAAA,UAAA,GAAA,OAAA,OAAA,UAAA,YAAA,sBAAA,IAAA,GAAA,OAAA,SAAA,UAAA,GAAA,GAAA;AAG8B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;;;;;AAEpC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,GAAA,kCAAA;AACF,IAAA,uBAAA;;;;;AAyCY,IAAA,yBAAA,GAAA,IAAA;AAA8C,IAAA,iBAAA,CAAA;AAAY,IAAA,uBAAA;;;;AAAZ,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA;;;;;AAHlD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4D,GAAA,IAAA;AACtD,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AACf,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,GAAA,8EAAA,GAAA,GAAA,MAAA,EAAA;AACF,IAAA,uBAAA,EAAK;;;;AADsB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,UAAA;;;;;AAMzB,IAAA,yBAAA,GAAA,IAAA;AAA+C,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA;;;;;AAHnD,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4D,GAAA,IAAA;AACtD,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AACf,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,GAAA,8EAAA,GAAA,GAAA,MAAA,EAAA;AACF,IAAA,uBAAA,EAAK;;;;AADuB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,UAAA;;;;;AAflC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqE,GAAA,OAAA,EAAA,EACzC,GAAA,IAAA;AACpB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;AACnB,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA,EAAO;AAElD,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,yEAAA,GAAA,GAAA,OAAA,EAAA,EAA4D,GAAA,yEAAA,GAAA,GAAA,OAAA,EAAA;AAY9D,IAAA,uBAAA,EAAM;;;;AAhBA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,KAAA;AACmB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,QAAA;AAGE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,WAAA,SAAA,CAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,SAAA,WAAA,SAAA,CAAA;;;;;AAfjC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqE,GAAA,IAAA;AAC/D,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AACZ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,mEAAA,GAAA,GAAA,OAAA,EAAA;AAoBF,IAAA,uBAAA,EAAM;;;;AApByC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,QAAA;;;;;AA6BzC,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;AAOF,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;AAfV,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA8D,GAAA,IAAA;AACxD,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AACnB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAyB,GAAA,OAAA,EAAA,EACK,GAAA,IAAA;AACtB,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA;AAClB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,oEAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA,EAAM;AAER,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4B,IAAA,IAAA;AACtB,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,qEAAA,GAAA,GAAA,QAAA,EAAA;AAGF,IAAA,uBAAA,EAAM,EACF,EACF;;;;AAb0C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,eAAA,OAAA;AAQQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,eAAA,OAAA;;;;;AA/DhE,IAAA,yBAAA,GAAA,YAAA,EAAA,EAAqD,GAAA,iBAAA,EAClC,GAAA,gBAAA;AAEb,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,GAAA,eAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EACc,GAAA,OAAA,EAAA,EACI,GAAA,OAAA,EAAA,EACH,GAAA,OAAA,EAAA;AAEvB,IAAA,oBAAA,IAAA,OAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA4B,IAAA,iBAAA,EAAA;AAAiC,IAAA,uBAAA,EAAO;AAEtE,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,GAAA,EACrB,IAAA,QAAA;AAAQ,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAAU,IAAA,iBAAA,EAAA;AAA0B,IAAA,uBAAA;AAC5D,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,QAAA;AAAQ,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AAAU,IAAA,iBAAA,EAAA;AAAyB,IAAA,uBAAA;AAC1D,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,QAAA;AAAQ,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAAU,IAAA,iBAAA,EAAA;AAAsC,IAAA,uBAAA,EAAI,EACtE;AAGR,IAAA,qBAAA,IAAA,6DAAA,GAAA,GAAA,OAAA,EAAA,EAAqE,IAAA,6DAAA,IAAA,GAAA,OAAA,EAAA;AA+CvE,IAAA,uBAAA,EAAM,EACW;;;;AApEN,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;AASmB,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,SAAA,OAAA,WAAA,UAAA,GAAA;AAEI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,WAAA,UAAA,YAAA;AAGM,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,WAAA,aAAA,EAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,WAAA,YAAA,EAAA;AACD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,WAAA,mBAAA,QAAA;AAIL,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,SAAA,SAAA,CAAA;AA0BF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,cAAA;;;;;AAmC7B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,MAAA,GAAA;;;;;AAEF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,GAAA,uBAAA;AACF,IAAA,uBAAA;;;;;;AAMN,IAAA,yBAAA,GAAA,YAAA,EAAA,EAA6C,GAAA,iBAAA,EAC1B,GAAA,gBAAA;AAEb,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,GAAA,MAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EACK,GAAA,GAAA;AAChB,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA;AACxB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,EAAA;;AAAqC,IAAA,uBAAA;AACxC,IAAA,yBAAA,IAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,gFAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AACtD,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,eAAA;AACF,IAAA,uBAAA,EAAS,EACL,EACW;;;;AAbN,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AAMN,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,UAAA,OAAA,GAAA,UAAA,EAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,kBAAA,sBAAA,IAAA,GAAA,OAAA,GAAA,SAAA,GAAA,EAAA;AAEQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;;;;;AAgBb,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+D,GAAA,OAAA,EAAA,EAC/B,GAAA,IAAA;AACxB,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA;AAC/C,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI;AAEN,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,EAAA;;AACF,IAAA,uBAAA,EAAM;;;;;AAVA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,IAAA,KAAA;AACe,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,IAAA,SAAA,OAAA;AACD,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,CAAA;AACP,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,QAAA,MAAA,CAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,QAAA,GAAA;AAIO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,QAAA,SAAA,GAAA,GAAA;;;;;AAGJ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,GAAA,uBAAA;AACF,IAAA,uBAAA;;;;;AA/NR,IAAA,kCAAA,CAAA;AAEE,IAAA,yBAAA,GAAA,YAAA,CAAA;AACE,IAAA,oBAAA,GAAA,OAAA,CAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,OAAA,EAAA;AAEtB,IAAA,oBAAA,GAAA,WAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6B,GAAA,IAAA;AACvB,IAAA,iBAAA,CAAA;AAA8B,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA,EACP,IAAA,QAAA,EAAA;AACS,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA;AAC/C,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAyB,IAAA,iBAAA,IAAA,oBAAA;AAAkB,IAAA,uBAAA,EAAO,EAC9C,EACF,EACF,EACF;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,YAAA,EAAA,EAEO,IAAA,iBAAA,EACf,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,mBAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,OAAA,EAAA;AAEd,IAAA,qBAAA,IAAA,iDAAA,IAAA,IAAA,OAAA,EAAA,EAA6D,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA;AAa/D,IAAA,uBAAA,EAAM,EACW;AAIrB,IAAA,yBAAA,IAAA,YAAA,EAAA,EAAkC,IAAA,iBAAA,EACf,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,aAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,OAAA,EAAA;AAEd,IAAA,qBAAA,IAAA,iDAAA,IAAA,IAAA,OAAA,EAAA,EAA2D,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA;AAgB7D,IAAA,uBAAA,EAAM,EACW;AAIrB,IAAA,qBAAA,IAAA,sDAAA,IAAA,GAAA,YAAA,EAAA;AA2EA,IAAA,yBAAA,IAAA,YAAA,EAAA,EAAkC,IAAA,iBAAA,EACf,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,UAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,OAAA,EAAA;AAEd,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA,EAAoD,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA;AAMtD,IAAA,uBAAA,EAAM,EACW;AAIrB,IAAA,qBAAA,IAAA,sDAAA,IAAA,GAAA,YAAA,EAAA;AAoBA,IAAA,yBAAA,IAAA,YAAA,EAAA,EAAkC,IAAA,iBAAA,EACf,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,uBAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA;AACE,IAAA,qBAAA,IAAA,iDAAA,IAAA,IAAA,OAAA,EAAA,EAA+D,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA;AAiBjE,IAAA,uBAAA,EAAmB,EACV;;;;;AA3NE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,MAAA;AAGL,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,OAAA,QAAA,OAAA,OAAA,OAAA,KAAA,SAAA,YAAA;AAEO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,MAAA,OAAA,QAAA,OAAA,OAAA,OAAA,KAAA,aAAA,cAAA,GAAA;AAI2B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,mBAAA,GAAA;AAclB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AAMoC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA;AAUvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA,WAAA,CAAA;AAWG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AAMmC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;AAatC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,WAAA,CAAA;AAQuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AA8EpB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAMgC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA;AAGnC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA,WAAA,CAAA;AAQuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,EAAA;AAuBpB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAKmC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;AAcxC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA,WAAA,CAAA;;;AAwYd,IAAO,mBAAP,MAAO,kBAAgB;EAyBjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EA9BV,SAAS;EACT,cAAc;EACd,YAAY;EACZ,aAAa;EACb,UAAU;EACV,UAAU;EACV,UAAU;EACV,UAAU;EACV,kBAAkB;EAClB,aAAa;EAEb,OAAoB;EACpB,SAAgB,CAAA;EAChB,eAAsB,CAAA;EACtB,KAAU;EACV,aAAgC;EAChC,cAA4B,CAAA;EAC5B,aAA0B,CAAA;EAC1B,oBAAoB;EACpB,YAAY;EACZ,QAAuB;EAEvB,YACU,gBACA,cACA,oBACA,aACA,WACA,mBACA,mBACA,kBAAkC;AAPlC,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,qBAAA;AACA,SAAA,cAAA;AACA,SAAA,YAAA;AACA,SAAA,oBAAA;AACA,SAAA,oBAAA;AACA,SAAA,mBAAA;EACP;EAEH,WAAQ;AACN,SAAK,YAAW;EAClB;EAEA,eAAY;AACV,SAAK,QAAQ;AACb,SAAK,YAAW;EAClB;EAEQ,cAAW;AACjB,SAAK,YAAY;AACjB,SAAK,QAAQ;AAGb,UAAM,cAAc,KAAK,YAAY,eAAc;AACnD,QAAI,CAAC,aAAa;AAChB,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB;IACF;AAGA,SAAK,eAAe,WAAU,EAAG,UAAU;MACzC,MAAM,CAAC,YAAW;AAChB,aAAK,OAAO;AACZ,aAAK,2BAA0B;AAC/B,aAAK,eAAc;AACnB,aAAK,qBAAoB;AACzB,aAAK,WAAU;AACf,aAAK,eAAc;AACnB,aAAK,oBAAmB;AACxB,aAAK,mBAAkB;MACzB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,0BAA0B,KAAK;AAC7C,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEQ,sBAAmB;AACzB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,kBAAkB,eAAe,KAAK,EAAE,EAAE,UAAU;QACvD,MAAM,CAAC,gBAAe;AACpB,eAAK,cAAc;AACnB,eAAK,2BAA0B;QACjC;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,8BAA8B,KAAK;QACnD;OACD;IACH;EACF;EAEQ,qBAAkB;AACxB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,iBAAiB,cAAc,KAAK,EAAE,EAAE,UAAU;QACrD,MAAM,CAAC,eAAc;AACnB,eAAK,aAAa;AAClB,eAAK,2BAA0B;QACjC;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,6BAA6B,KAAK;QAClD;OACD;IACH;EACF;EAEQ,iBAAc;AACpB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,aAAa,cAAc,KAAK,EAAE,EAAE,UAAU;QACjD,MAAM,CAAC,WAAU;AACf,eAAK,SAAS;AACd,eAAK,2BAA0B;QACjC;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,yBAAyB,KAAK;QAC9C;OACD;IACH;EACF;EAEQ,uBAAoB;AAC1B,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,mBAAmB,oBAAoB,KAAK,EAAE,EAAE,UAAU;QAC7D,MAAM,CAAC,iBAAgB;AACrB,eAAK,eAAe;QACtB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,+BAA+B,KAAK;QACpD;OACD;IACH;EACF;EAEQ,aAAU;AAChB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,UAAU,MAAM,KAAK,EAAE,EAAE,UAAU;QACtC,MAAM,CAAC,OAAM;AACX,eAAK,KAAK;AACV,eAAK,2BAA0B;AAC/B,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,qBAAqB,KAAK;AACxC,eAAK,YAAY;QACnB;OACD;IACH,OAAO;AACL,WAAK,YAAY;IACnB;EACF;EAEQ,iBAAc;AACpB,SAAK,kBAAkB,mBAAkB,EAAG,UAAU;MACpD,MAAM,CAAC,gBAAe;AACpB,YAAI,YAAY,SAAS,GAAG;AAC1B,eAAK,aAAa,YAAY,CAAC;AAC/B,eAAK,2BAA0B;QACjC;AACA,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,8BAA8B,KAAK;AACjD,aAAK,YAAY;MACnB;KACD;EACH;EAEA,cAAc,QAAc;AAC1B,YAAQ,OAAO,YAAW,GAAI;MAC5B,KAAK;AACH,eAAO,KAAK;MACd,KAAK;AACH,eAAO,KAAK;MACd;AACE,eAAO,KAAK;IAChB;EACF;EAEQ,6BAA0B;AAChC,QAAI,aAAa;AACjB,UAAM,cAAc;AAEpB,QAAI,KAAK,MAAM;AAAM;AACrB,QAAI,KAAK,OAAO,SAAS;AAAG;AAC5B,QAAI,KAAK;AAAI;AACb,QAAI,KAAK,MAAM;AAAU;AACzB,QAAI,KAAK;AAAY;AACrB,QAAI,KAAK,YAAY,SAAS;AAAG;AACjC,QAAI,KAAK,WAAW,SAAS;AAAG;AAEhC,SAAK,oBAAoB,KAAK,MAAO,aAAa,cAAe,GAAG;EACtE;EAEA,aAAU;AACR,QAAI,KAAK,IAAI;AACX,WAAK,UAAU,WAAW,KAAK,GAAG,EAAE,EAAE,UAAU;QAC9C,MAAM,CAAC,SAAQ;AACb,eAAK,UAAU,SAAS,MAAM,KAAK,GAAG,QAAQ;QAChD;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,yBAAyB,KAAK;QAC9C;OACD;IACH;EACF;;qCA/MW,mBAAgB,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,gBAAA,CAAA;EAAA;yEAAhB,mBAAgB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,QAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,SAAA,aAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,SAAA,yBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,uBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,aAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,kBAAA,CAAA,GAAA,UAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAnnBzB,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,MAAA,qBAAA,GAAA,iCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,iCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,0CAAA,IAAA,IAAA,gBAAA,CAAA;AA0O7C,MAAA,uBAAA;;;AAhPQ,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMS,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IAtBjB;IAAY;IAAA;IAAA;IACZ;IAAa;IAAA;IAAA;IAAA;IACb;IACA;IAAe;IACf;IAAwB;IACxB;IAAiB;EAAA,GAAA,QAAA,CAAA,isOAAA,EAAA,CAAA;;;sEAsnBR,kBAAgB,CAAA;UA/nB5B;uBACW,eAAa,YACX,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoPT,QAAA,CAAA,44LAAA,EAAA,CAAA;;;;6EAgYU,kBAAgB,EAAA,WAAA,oBAAA,UAAA,yEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;ACtnBvB,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,yBAAA;AAAuB,IAAA,uBAAA,EAAI;;;;;;AAIhC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AADjD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAoBjB,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,oBAAA;AACF,IAAA,uBAAA;;;;;;AAeE,IAAA,yBAAA,GAAA,gBAAA,EAAA;AAAmD,IAAA,qBAAA,WAAA,SAAA,yFAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAW,OAAA,YAAA,QAAA,CAAkB;IAAA,CAAA;AAC9E,IAAA,iBAAA,CAAA;AACA,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACF,IAAA,uBAAA,EAAS;;;;;AAHT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;AAEW,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;;;;;AAUb,IAAA,yBAAA,GAAA,cAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAFyD,IAAA,qBAAA,SAAA,QAAA;AACvD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;AASN,IAAA,oBAAA,GAAA,eAAA,EAAA;;;;;AACA,IAAA,yBAAA,GAAA,MAAA;AAA4B,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;;;;;;AAxDhD,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA6D,IAAA,qBAAA,YAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,SAAA,CAAU;IAAA,CAAA;AACjF,IAAA,yBAAA,GAAA,UAAA,EAAU,GAAA,iBAAA,EACS,GAAA,gBAAA;AAEb,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,GAAA,kBAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EAEU,GAAA,IAAA;AACpB,IAAA,iBAAA,GAAA,mBAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAAwD,IAAA,WAAA;AAC3C,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AACf,IAAA,oBAAA,IAAA,SAAA,EAAA;AACA,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,aAAA,EAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAAwD,IAAA,WAAA;AAC3C,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AACnB,IAAA,oBAAA,IAAA,SAAA,EAAA;AACF,IAAA,uBAAA,EAAiB;AAInB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,IAAA;AACpB,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACV,IAAA,yBAAA,IAAA,kBAAA,EAAA,EAAwD,IAAA,WAAA;AAC3C,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACrB,IAAA,yBAAA,IAAA,iBAAA,MAAA,CAAA;AACE,IAAA,qBAAA,IAAA,wDAAA,GAAA,GAAA,gBAAA,EAAA;AAMF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,SAAA,EAAA;AAIO,IAAA,qBAAA,wBAAA,SAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAwB,OAAA,SAAA,MAAA,CAAgB;IAAA,CAAA;AAJ/C,IAAA,uBAAA;AAKA,IAAA,yBAAA,IAAA,oBAAA,IAAA,CAAA;AAA0C,IAAA,qBAAA,kBAAA,SAAA,mFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAkB,OAAA,cAAA,MAAA,CAAqB;IAAA,CAAA;AAC/E,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,cAAA,EAAA;;AAGF,IAAA,uBAAA,EAAmB,EACJ,EACb;AAER,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,UAAA,EAAA;AACiB,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,OAAA,CAAQ;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC1D,IAAA,yBAAA,IAAA,UAAA,EAAA;AACE,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,eAAA,EAAA,EAAgD,IAAA,gDAAA,GAAA,GAAA,QAAA,EAAA;AAElD,IAAA,uBAAA,EAAS,EACQ,EACV;;;;;;;AA3DsB,IAAA,qBAAA,aAAA,OAAA,WAAA;AAIlB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,MAAA;AAWK,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,SAAA,UAAA,OAAA,YAAA,IAAA,MAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAiBsB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;AAQ3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,mBAAA,WAAA,EAA4B,mBAAA,OAAA,EACJ,eAAA,OAAA,UAAA;AAIC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,sBAAA,IAAA,IAAA,OAAA,cAAA,CAAA;AASoB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,YAAA,WAAA,OAAA,YAAA;AAC1B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AACrB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,YAAA;;;AA8Ef,IAAO,yBAAP,MAAO,wBAAsB;EAiBvB;EACA;EACA;EACA;;EAlBV,SAAS;EACT,cAAc;EACd,SAAS;EACT,UAAU;EAEV;EACA;EACA,iBAA0B,CAAA;EAC1B,kBAA2B,CAAA;EAC3B;EACA,YAAY;EACZ,eAAe;EACf,QAAuB;EAEvB,YACU,IACA,gBACA,cACA,aAAwB;AAHxB,SAAA,KAAA;AACA,SAAA,iBAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AAER,SAAK,cAAc,KAAK,GAAG,MAAM;MAC/B,MAAM,CAAC,IAAI,WAAW,QAAQ;MAC9B,UAAU,CAAC,EAAE;KACd;AAED,SAAK,aAAa,KAAK,GAAG,QAAQ,EAAE;AACpC,SAAK,iBAAiB,KAAK,WAAW,aAAa,KACjD,UAAU,EAAE,GACZ,IAAI,WAAS,KAAK,cAAc,SAAS,EAAE,CAAC,CAAC;EAEjD;EAEA,WAAQ;AACN,SAAK,gBAAe;AACpB,SAAK,oBAAmB;EAC1B;EAEQ,kBAAe;AACrB,UAAM,cAAc,KAAK,YAAY,eAAc;AACnD,QAAI,CAAC,aAAa;AAChB,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB;IACF;AAEA,SAAK,eAAe,WAAU,EAAG,UAAU;MACzC,MAAM,CAAC,YAAW;AAChB,aAAK,YAAY,WAAW;UAC1B,MAAM,QAAQ;UACd,UAAU,QAAQ,YAAY;SAC/B;AACD,aAAK,eAAc;MACrB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,0BAA0B,KAAK;AAC7C,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEQ,iBAAc;AACpB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,aAAa,cAAc,KAAK,EAAE,EAAE,UAAU;QACjD,MAAM,CAAC,WAAU;AACf,eAAK,iBAAiB;AACtB,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,yBAAyB,KAAK;AAC5C,eAAK,YAAY;QACnB;OACD;IACH;EACF;EAEQ,sBAAmB;AACzB,SAAK,aAAa,aAAY,EAAG,UAAU;MACzC,MAAM,CAAC,WAAU;AACf,aAAK,kBAAkB;MACzB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,mCAAmC,KAAK;MACxD;KACD;EACH;EAEQ,cAAc,OAAqB;AACzC,UAAM,cAAc,OAAO,UAAU,WAAW,MAAM,YAAW,IAAK,MAAM,KAAK,YAAW;AAC5F,WAAO,KAAK,gBAAgB,OAAO,WACjC,MAAM,KAAK,YAAW,EAAG,SAAS,WAAW,KAC7C,CAAC,KAAK,eAAe,KAAK,cAAY,SAAS,OAAO,MAAM,EAAE,CAAC;EAEnE;EAEA,SAAS,OAAU;AACjB,UAAM,SAAS,MAAM,SAAS,IAAI,KAAI;AACtC,QAAI,OAAO;AAET,YAAM,gBAAgB,KAAK,gBAAgB,KAAK,OAAK,EAAE,KAAK,YAAW,MAAO,MAAM,YAAW,CAAE;AACjG,UAAI,eAAe;AACjB,aAAK,eAAe,KAAK,aAAa;MACxC,OAAO;AAEL,aAAK,aAAa,YAAY,EAAE,MAAM,MAAK,CAAE,EAAE,UAAU;UACvD,MAAM,CAAC,aAAY;AACjB,iBAAK,eAAe,KAAK,QAAQ;AACjC,iBAAK,gBAAgB,KAAK,QAAQ;UACpC;UACA,OAAO,CAAC,UAAS;AACf,oBAAQ,MAAM,6BAA6B,KAAK;UAClD;SACD;MACH;IACF;AACA,SAAK,WAAW,SAAS,EAAE;EAC7B;EAEA,cAAc,OAAU;AACtB,UAAM,QAAQ,MAAM,OAAO;AAC3B,QAAI,CAAC,KAAK,eAAe,KAAK,OAAK,EAAE,OAAO,MAAM,EAAE,GAAG;AACrD,WAAK,eAAe,KAAK,KAAK;IAChC;AACA,SAAK,WAAW,SAAS,EAAE;EAC7B;EAEA,YAAY,OAAY;AACtB,UAAM,QAAQ,KAAK,eAAe,QAAQ,KAAK;AAC/C,QAAI,SAAS,GAAG;AACd,WAAK,eAAe,OAAO,OAAO,CAAC;IACrC;EACF;EAEA,WAAQ;AACN,QAAI,KAAK,YAAY,OAAO;AAC1B,WAAK,eAAe;AACpB,YAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,UAAI,CAAC,MAAM;AACT,aAAK,QAAQ;AACb,aAAK,eAAe;AACpB;MACF;AAEA,YAAM,aAAgC;QACpC,MAAM,KAAK,YAAY,IAAI,MAAM,GAAG;QACpC,UAAU,KAAK,YAAY,IAAI,UAAU,GAAG;;AAI9C,WAAK,eAAe,cAAc,UAAU,EAAE,UAAU;QACtD,MAAM,MAAW;AACf,cAAI;AAEF,kBAAM,oBAAoB,MAAM,eAAe,KAAK,aAAa,cAAc,KAAK,EAAE,CAAC;AACvF,kBAAM,kBAAkB,KAAK,eAAe,IAAI,OAAK,EAAE,EAAE;AACzD,kBAAM,mBAAmB,kBAAkB,IAAI,OAAK,EAAE,EAAE;AAGxD,kBAAM,iBAAiB,kBAAkB,OAAO,OAAK,CAAC,gBAAgB,SAAS,EAAE,EAAE,CAAC;AAGpF,kBAAM,cAAc,KAAK,eAAe,OAAO,OAAK,CAAC,iBAAiB,SAAS,EAAE,EAAE,CAAC;AAEpF,oBAAQ,IAAI,qBAAqB,cAAc;AAC/C,oBAAQ,IAAI,kBAAkB,WAAW;AAGzC,uBAAW,SAAS,gBAAgB;AAClC,oBAAM,eAAe,KAAK,aAAa,gBAAgB,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3E;AAGA,uBAAW,SAAS,aAAa;AAC/B,oBAAM,eAAe,KAAK,aAAa,aAAa,KAAK,IAAI,MAAM,EAAE,CAAC;YACxE;AAEA,iBAAK,eAAe;AACpB,iBAAK,OAAM;UACb,SAAS,OAAO;AACd,oBAAQ,MAAM,0BAA0B,KAAK;AAC7C,iBAAK,QAAQ;AACb,iBAAK,eAAe;UACtB;QACF;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,2BAA2B,KAAK;AAC9C,eAAK,QAAQ;AACb,eAAK,eAAe;QACtB;OACD;IACH;EACF;EAEA,eAAY;AACV,SAAK,QAAQ;AACb,SAAK,gBAAe;EACtB;EAEA,SAAM;AACJ,WAAO,QAAQ,KAAI;EACrB;;qCA3MW,yBAAsB,4BAAA,WAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,YAAA,EAAA,GAAA,CAAA,QAAA,iBAAA,GAAA,CAAA,GAAA,0BAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,aAAA,YAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,cAAA,WAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,QAAA,eAAA,gBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,YAAA,eAAA,uBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,SAAA,SAAA,GAAA,CAAA,eAAA,sCAAA,GAAA,wBAAA,mBAAA,mBAAA,aAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,cAAA,IAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,UAAA,GAAA,UAAA,GAAA,CAAA,YAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,YAAA,IAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AApJ/B,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,MAAA,qBAAA,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,wCAAA,IAAA,IAAA,QAAA,CAAA;AAmE7C,MAAA,uBAAA;;;AAzEQ,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMC,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IA3BT;IAAY;IAAA;IAAA;IACZ;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IAAa;IAAA;IAAA;IAAA;IAAA;IACb;IAAkB;IAAA;IAAA;IAClB;IAAc;IACd;IAAe;IACf;IAAwB;IACxB;IAAc;IAAA;IAAA;IAAA;IACd;IAAqB;IAAA;IAAA;IACrB;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,gwCAAA,EAAA,CAAA;;;sEAuJR,wBAAsB,CAAA;UArKlC;uBACW,sBAAoB,YAClB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6ET,QAAA,CAAA,8vCAAA,EAAA,CAAA;;;;6EAwEU,wBAAsB,EAAA,WAAA,0BAAA,UAAA,uFAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;ACnLnC,SAAS,0CAA0C,IAAI,KAAK;AAAC;AA+B7D,IAAM,eAAN,MAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,OAAO;AAAA;AAAA,EAEP,aAAa;AAAA;AAAA,EAEb,cAAc;AAAA;AAAA,EAEd,gBAAgB;AAAA;AAAA,EAEhB,eAAe;AAAA;AAAA,EAEf,QAAQ;AAAA;AAAA,EAER,SAAS;AAAA;AAAA,EAET;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,OAAO;AAAA;AAAA,EAEP;AAAA;AAAA,EAEA,kBAAkB;AAAA;AAAA,EAElB,iBAAiB;AAAA;AAAA,EAEjB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASZ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjB,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AACF;AACA,SAAS,yCAAyC;AAChD,QAAM,MAAM,uEAAuE;AACrF;AAKA,IAAM,qBAAN,MAAM,4BAA2B,iBAAiB;AAAA,EAChD,cAAc,OAAO,UAAU;AAAA,EAC/B,oBAAoB,OAAO,gBAAgB;AAAA,EAC3C;AAAA,EACA,wBAAwB,OAAO,oBAAoB;AAAA,EACnD,UAAU,OAAO,MAAM;AAAA,EACvB,cAAc,OAAO,UAAU;AAAA,EAC/B,gBAAgB,OAAO,YAAY;AAAA,EACnC,YAAY,OAAO,SAAS;AAAA,EAC5B,YAAY,OAAO,QAAQ;AAAA,EAC3B,YAAY,OAAO,UAAU;AAAA,IAC3B,UAAU;AAAA,EACZ,CAAC;AAAA;AAAA,EAED;AAAA;AAAA,EAEA,aAAa;AAAA;AAAA,EAEb,uCAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvC,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxB,uBAAuB,CAAC;AAAA,EACxB,qBAAqB,OAAO,iBAAiB;AAAA,EAC7C,YAAY,OAAO,QAAQ;AAAA,EAC3B,eAAe;AAAA,EACf,cAAc;AACZ,UAAM;AAGN,SAAK,UAAU,OAAO,cAAc;AAAA,MAClC,UAAU;AAAA,IACZ,CAAC,KAAK,IAAI,aAAa;AACvB,QAAI,KAAK,QAAQ,gBAAgB;AAC/B,WAAK,qBAAqB,KAAK,KAAK,QAAQ,cAAc;AAAA,IAC5D;AAAA,EACF;AAAA,EACA,mBAAmB,IAAI;AACrB,SAAK,qBAAqB,KAAK,EAAE;AACjC,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA,EACA,sBAAsB,IAAI;AACxB,UAAM,QAAQ,KAAK,qBAAqB,QAAQ,EAAE;AAClD,QAAI,QAAQ,IAAI;AACd,WAAK,qBAAqB,OAAO,OAAO,CAAC;AACzC,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,SAAK,qBAAqB;AAC1B,SAAK,sBAAsB;AAC3B,SAAK,qBAAqB;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AACrB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,cAAc;AACZ,SAAK,eAAe;AACpB,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,QAAQ;AAC5B,QAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACvF,6CAAuC;AAAA,IACzC;AACA,UAAM,SAAS,KAAK,cAAc,sBAAsB,MAAM;AAC9D,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB,QAAQ;AAC3B,QAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACvF,6CAAuC;AAAA,IACzC;AACA,UAAM,SAAS,KAAK,cAAc,qBAAqB,MAAM;AAC7D,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkB,YAAU;AAC1B,QAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACvF,6CAAuC;AAAA,IACzC;AACA,UAAM,SAAS,KAAK,cAAc,gBAAgB,MAAM;AACxD,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,kBAAkB;AAChB,QAAI,CAAC,KAAK,eAAe,GAAG;AAC1B,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,SAAS,SAAS;AAC5B,QAAI,CAAC,KAAK,sBAAsB,YAAY,OAAO,GAAG;AACpD,cAAQ,WAAW;AAEnB,WAAK,QAAQ,kBAAkB,MAAM;AACnC,cAAM,WAAW,MAAM;AACrB,yBAAe;AACf,8BAAoB;AACpB,kBAAQ,gBAAgB,UAAU;AAAA,QACpC;AACA,cAAM,iBAAiB,KAAK,UAAU,OAAO,SAAS,QAAQ,QAAQ;AACtE,cAAM,sBAAsB,KAAK,UAAU,OAAO,SAAS,aAAa,QAAQ;AAAA,MAClF,CAAC;AAAA,IACH;AACA,YAAQ,MAAM,OAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,UAAU,SAAS;AACrC,QAAI,iBAAiB,KAAK,YAAY,cAAc,cAAc,QAAQ;AAC1E,QAAI,gBAAgB;AAClB,WAAK,YAAY,gBAAgB,OAAO;AAAA,IAC1C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,SAAS;AAClB,QAAI,KAAK,cAAc;AACrB;AAAA,IACF;AAIA,oBAAgB,MAAM;AACpB,YAAM,UAAU,KAAK,YAAY;AACjC,cAAQ,KAAK,QAAQ,WAAW;AAAA,QAC9B,KAAK;AAAA,QACL,KAAK;AAMH,cAAI,CAAC,KAAK,eAAe,GAAG;AAC1B,oBAAQ,MAAM,OAAO;AAAA,UACvB;AACA;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,gBAAM,sBAAsB,KAAK,YAAY,oBAAoB,OAAO;AAGxE,cAAI,CAAC,qBAAqB;AACxB,iBAAK,sBAAsB,OAAO;AAAA,UACpC;AACA;AAAA,QACF,KAAK;AACH,eAAK,oBAAoB,4CAA4C,OAAO;AAC5E;AAAA,QACF;AACE,eAAK,oBAAoB,KAAK,QAAQ,WAAW,OAAO;AACxD;AAAA,MACJ;AAAA,IACF,GAAG;AAAA,MACD,UAAU,KAAK;AAAA,IACjB,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,gBAAgB;AACd,UAAM,cAAc,KAAK,QAAQ;AACjC,QAAI,qBAAqB;AACzB,QAAI,OAAO,gBAAgB,UAAU;AACnC,2BAAqB,KAAK,UAAU,cAAc,WAAW;AAAA,IAC/D,WAAW,OAAO,gBAAgB,WAAW;AAC3C,2BAAqB,cAAc,KAAK,uCAAuC;AAAA,IACjF,WAAW,aAAa;AACtB,2BAAqB;AAAA,IACvB;AAEA,QAAI,KAAK,QAAQ,gBAAgB,sBAAsB,OAAO,mBAAmB,UAAU,YAAY;AACrG,YAAM,gBAAgB,kCAAkC;AACxD,YAAM,UAAU,KAAK,YAAY;AAKjC,UAAI,CAAC,iBAAiB,kBAAkB,KAAK,UAAU,QAAQ,kBAAkB,WAAW,QAAQ,SAAS,aAAa,GAAG;AAC3H,YAAI,KAAK,eAAe;AACtB,eAAK,cAAc,SAAS,oBAAoB,KAAK,qBAAqB;AAC1E,eAAK,wBAAwB;AAAA,QAC/B,OAAO;AACL,6BAAmB,MAAM;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AACA,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,QAAQ;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA,EAEA,sBAAsB,SAAS;AAE7B,QAAI,KAAK,YAAY,cAAc,OAAO;AACxC,WAAK,YAAY,cAAc,MAAM,OAAO;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB;AACf,UAAM,UAAU,KAAK,YAAY;AACjC,UAAM,gBAAgB,kCAAkC;AACxD,WAAO,YAAY,iBAAiB,QAAQ,SAAS,aAAa;AAAA,EACpE;AAAA;AAAA,EAEA,uBAAuB;AACrB,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,aAAa,KAAK,kBAAkB,OAAO,KAAK,YAAY,aAAa;AAG9E,UAAI,KAAK,WAAW;AAClB,aAAK,uCAAuC,kCAAkC;AAAA,MAChF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,wBAAwB;AAGtB,SAAK,YAAY,cAAc,EAAE,UAAU,MAAM;AAC/C,UAAI,KAAK,QAAQ,cAAc;AAC7B,aAAK,gBAAgB;AAAA,MACvB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,OAAO,YAAO,SAAS,2BAA2B,mBAAmB;AACnE,WAAO,KAAK,qBAAqB,qBAAoB;AAAA,EACvD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,sBAAsB,CAAC;AAAA,IACpC,WAAW,SAAS,yBAAyB,IAAI,KAAK;AACpD,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,iBAAiB,CAAC;AAAA,MACnC;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,gBAAgB,GAAG;AAAA,MACtE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,YAAY,MAAM,GAAG,sBAAsB;AAAA,IACvD,UAAU;AAAA,IACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,MAAM,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,IAAI,QAAQ,IAAI,EAAE,cAAc,IAAI,QAAQ,SAAS,EAAE,mBAAmB,IAAI,QAAQ,YAAY,OAAO,IAAI,qBAAqB,CAAC,CAAC,EAAE,cAAc,IAAI,QAAQ,SAAS,EAAE,oBAAoB,IAAI,QAAQ,mBAAmB,IAAI;AAAA,MACzR;AAAA,IACF;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,IACxC,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,mBAAmB,EAAE,CAAC;AAAA,IAChC,UAAU,SAAS,4BAA4B,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,GAAG,2CAA2C,GAAG,GAAG,eAAe,CAAC;AAAA,MACpF;AAAA,IACF;AAAA,IACA,cAAc,CAAC,eAAe;AAAA,IAC9B,QAAQ,CAAC,qGAAqG;AAAA,IAC9G,eAAe;AAAA,EACjB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,eAAe,kBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,SAAS,CAAC,eAAe;AAAA,MACzB,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,eAAe;AAAA,QACf,qBAAqB;AAAA,QACrB,0BAA0B;AAAA,QAC1B,qBAAqB;AAAA,QACrB,2BAA2B;AAAA,MAC7B;AAAA,MACA,UAAU;AAAA,MACV,QAAQ,CAAC,qGAAqG;AAAA,IAChH,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,QACtB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,IAAM,YAAN,MAAgB;AAAA,EACd;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,SAAS,IAAI,QAAQ;AAAA;AAAA,EAErB;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA,YAAY,YAAY,QAAQ;AAC9B,SAAK,aAAa;AAClB,SAAK,SAAS;AACd,SAAK,eAAe,OAAO;AAC3B,SAAK,gBAAgB,WAAW,cAAc;AAC9C,SAAK,gBAAgB,WAAW,cAAc;AAC9C,SAAK,uBAAuB,WAAW,qBAAqB;AAC5D,SAAK,KAAK,OAAO;AACjB,SAAK,cAAc,UAAU,WAAS;AACpC,UAAI,MAAM,YAAY,UAAU,CAAC,KAAK,gBAAgB,CAAC,eAAe,KAAK,GAAG;AAC5E,cAAM,eAAe;AACrB,aAAK,MAAM,QAAW;AAAA,UACpB,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,cAAc,UAAU,MAAM;AACjC,UAAI,CAAC,KAAK,cAAc;AACtB,aAAK,MAAM,QAAW;AAAA,UACpB,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,sBAAsB,WAAW,YAAY,EAAE,UAAU,MAAM;AAElE,UAAI,OAAO,8BAA8B,OAAO;AAC9C,aAAK,MAAM;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,QAAQ,SAAS;AACrB,QAAI,KAAK,mBAAmB;AAC1B,YAAM,gBAAgB,KAAK;AAC3B,WAAK,kBAAkB,wBAAwB,SAAS,eAAe;AAGvE,WAAK,oBAAoB,YAAY;AACrC,WAAK,WAAW,QAAQ;AACxB,oBAAc,KAAK,MAAM;AACzB,oBAAc,SAAS;AACvB,WAAK,oBAAoB,KAAK,oBAAoB;AAAA,IACpD;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB;AACf,SAAK,WAAW,eAAe;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,QAAQ,IAAI,SAAS,IAAI;AAClC,SAAK,WAAW,WAAW;AAAA,MACzB;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,cAAc,SAAS;AACrB,SAAK,WAAW,cAAc,OAAO;AACrC,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,iBAAiB,SAAS;AACxB,SAAK,WAAW,iBAAiB,OAAO;AACxC,WAAO;AAAA,EACT;AACF;AAGA,IAAM,yBAAyB,IAAI,eAAe,wBAAwB;AAAA,EACxE,YAAY;AAAA,EACZ,SAAS,MAAM;AACb,UAAM,UAAU,OAAO,OAAO;AAC9B,WAAO,MAAM,QAAQ,iBAAiB,MAAM;AAAA,EAC9C;AACF,CAAC;AAED,IAAM,cAAc,IAAI,eAAe,YAAY;AAEnD,IAAM,wBAAwB,IAAI,eAAe,qBAAqB;AAmBtE,IAAM,SAAN,MAAM,QAAO;AAAA,EACX,WAAW,OAAO,OAAO;AAAA,EACzB,YAAY,OAAO,QAAQ;AAAA,EAC3B,kBAAkB,OAAO,uBAAuB;AAAA,IAC9C,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,gBAAgB,OAAO,SAAQ;AAAA,IAC7B,UAAU;AAAA,IACV,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,oBAAoB,OAAO,gBAAgB;AAAA,EAC3C,eAAe,OAAO,YAAY;AAAA,EAClC,0BAA0B,CAAC;AAAA,EAC3B,6BAA6B,IAAI,QAAQ;AAAA,EACzC,0BAA0B,IAAI,QAAQ;AAAA,EACtC,sBAAsB,oBAAI,IAAI;AAAA,EAC9B,kBAAkB,OAAO,sBAAsB;AAAA;AAAA,EAE/C,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,EACpE;AAAA;AAAA,EAEA,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,MAAM,MAAM,KAAK,YAAY,SAAS,KAAK,mBAAmB,IAAI,KAAK,mBAAmB,EAAE,KAAK,UAAU,MAAS,CAAC,CAAC;AAAA,EACvI,cAAc;AAAA,EAAC;AAAA,EACf,KAAK,wBAAwB,QAAQ;AACnC,UAAM,WAAW,KAAK,mBAAmB,IAAI,aAAa;AAC1D,aAAS,kCACJ,WACA;AAEL,WAAO,KAAK,OAAO,MAAM,KAAK,aAAa,MAAM,aAAa;AAC9D,QAAI,OAAO,MAAM,KAAK,cAAc,OAAO,EAAE,MAAM,OAAO,cAAc,eAAe,YAAY;AACjG,YAAM,MAAM,mBAAmB,OAAO,EAAE,iDAAiD;AAAA,IAC3F;AACA,UAAM,gBAAgB,KAAK,kBAAkB,MAAM;AACnD,UAAM,aAAa,KAAK,SAAS,OAAO,aAAa;AACrD,UAAM,YAAY,IAAI,UAAU,YAAY,MAAM;AAClD,UAAM,kBAAkB,KAAK,iBAAiB,YAAY,WAAW,MAAM;AAC3E,cAAU,oBAAoB;AAC9B,SAAK,qBAAqB,wBAAwB,WAAW,iBAAiB,MAAM;AAEpF,QAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,WAAK,6CAA6C;AAAA,IACpD;AACA,SAAK,YAAY,KAAK,SAAS;AAC/B,cAAU,OAAO,UAAU,MAAM,KAAK,kBAAkB,WAAW,IAAI,CAAC;AACxE,SAAK,YAAY,KAAK,SAAS;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,mBAAe,KAAK,aAAa,YAAU,OAAO,MAAM,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,IAAI;AAChB,WAAO,KAAK,YAAY,KAAK,YAAU,OAAO,OAAO,EAAE;AAAA,EACzD;AAAA,EACA,cAAc;AAIZ,mBAAe,KAAK,yBAAyB,YAAU;AAErD,UAAI,OAAO,OAAO,mBAAmB,OAAO;AAC1C,aAAK,kBAAkB,QAAQ,KAAK;AAAA,MACtC;AAAA,IACF,CAAC;AAID,mBAAe,KAAK,yBAAyB,YAAU,OAAO,MAAM,CAAC;AACrE,SAAK,2BAA2B,SAAS;AACzC,SAAK,wBAAwB,SAAS;AACtC,SAAK,0BAA0B,CAAC;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,QAAQ;AACxB,UAAM,QAAQ,IAAI,cAAc;AAAA,MAC9B,kBAAkB,OAAO,oBAAoB,KAAK,SAAS,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAE,iBAAiB;AAAA,MACrH,gBAAgB,OAAO,kBAAkB,KAAK,gBAAgB;AAAA,MAC9D,YAAY,OAAO;AAAA,MACnB,aAAa,OAAO;AAAA,MACpB,WAAW,OAAO;AAAA,MAClB,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,MAClB,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,MAClB,OAAO,OAAO;AAAA,MACd,QAAQ,OAAO;AAAA,MACf,qBAAqB,OAAO;AAAA,IAC9B,CAAC;AACD,QAAI,OAAO,eAAe;AACxB,YAAM,gBAAgB,OAAO;AAAA,IAC/B;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB,SAAS,WAAW,QAAQ;AAC3C,UAAM,eAAe,OAAO,YAAY,OAAO,kBAAkB;AACjE,UAAM,YAAY,CAAC;AAAA,MACjB,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,GAAG;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,GAAG;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC;AACD,QAAI;AACJ,QAAI,OAAO,WAAW;AACpB,UAAI,OAAO,OAAO,cAAc,YAAY;AAC1C,wBAAgB,OAAO;AAAA,MACzB,OAAO;AACL,wBAAgB,OAAO,UAAU;AACjC,kBAAU,KAAK,GAAG,OAAO,UAAU,UAAU,MAAM,CAAC;AAAA,MACtD;AAAA,IACF,OAAO;AACL,sBAAgB;AAAA,IAClB;AACA,UAAM,kBAAkB,IAAI,gBAAgB,eAAe,OAAO,kBAAkB,SAAS,OAAO;AAAA,MAClG,QAAQ,gBAAgB,KAAK;AAAA,MAC7B;AAAA,IACF,CAAC,CAAC;AACF,UAAM,eAAe,QAAQ,OAAO,eAAe;AACnD,WAAO,aAAa;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,qBAAqB,wBAAwB,WAAW,iBAAiB,QAAQ;AAC/E,QAAI,kCAAkC,aAAa;AACjD,YAAM,WAAW,KAAK,gBAAgB,QAAQ,WAAW,iBAAiB,MAAS;AACnF,UAAI,UAAU;AAAA,QACZ,WAAW,OAAO;AAAA,QAClB;AAAA,MACF;AACA,UAAI,OAAO,iBAAiB;AAC1B,kBAAU,kCACL,UACC,OAAO,OAAO,oBAAoB,aAAa,OAAO,gBAAgB,IAAI,OAAO;AAAA,MAEzF;AACA,sBAAgB,qBAAqB,IAAI,eAAe,wBAAwB,MAAM,SAAS,QAAQ,CAAC;AAAA,IAC1G,OAAO;AACL,YAAM,WAAW,KAAK,gBAAgB,QAAQ,WAAW,iBAAiB,KAAK,SAAS;AACxF,YAAM,aAAa,gBAAgB,sBAAsB,IAAI,gBAAgB,wBAAwB,OAAO,kBAAkB,QAAQ,CAAC;AACvI,gBAAU,eAAe;AACzB,gBAAU,oBAAoB,WAAW;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,gBAAgB,QAAQ,WAAW,iBAAiB,kBAAkB;AACpE,UAAM,eAAe,OAAO,YAAY,OAAO,kBAAkB;AACjE,UAAM,YAAY,CAAC;AAAA,MACjB,SAAS;AAAA,MACT,UAAU,OAAO;AAAA,IACnB,GAAG;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC;AACD,QAAI,OAAO,WAAW;AACpB,UAAI,OAAO,OAAO,cAAc,YAAY;AAC1C,kBAAU,KAAK,GAAG,OAAO,UAAU,WAAW,QAAQ,eAAe,CAAC;AAAA,MACxE,OAAO;AACL,kBAAU,KAAK,GAAG,OAAO,SAAS;AAAA,MACpC;AAAA,IACF;AACA,QAAI,OAAO,cAAc,CAAC,gBAAgB,CAAC,aAAa,IAAI,gBAAgB,MAAM;AAAA,MAChF,UAAU;AAAA,IACZ,CAAC,IAAI;AACH,gBAAU,KAAK;AAAA,QACb,SAAS;AAAA,QACT,UAAU;AAAA,UACR,OAAO,OAAO;AAAA,UACd,QAAQ,GAAG;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,SAAS,OAAO;AAAA,MACrB,QAAQ,gBAAgB;AAAA,MACxB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,WAAW,WAAW;AACtC,UAAM,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAChD,QAAI,QAAQ,IAAI;AACd,WAAK,YAAY,OAAO,OAAO,CAAC;AAGhC,UAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,aAAK,oBAAoB,QAAQ,CAAC,eAAe,YAAY;AAC3D,cAAI,eAAe;AACjB,oBAAQ,aAAa,eAAe,aAAa;AAAA,UACnD,OAAO;AACL,oBAAQ,gBAAgB,aAAa;AAAA,UACvC;AAAA,QACF,CAAC;AACD,aAAK,oBAAoB,MAAM;AAC/B,YAAI,WAAW;AACb,eAAK,mBAAmB,EAAE,KAAK;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,+CAA+C;AAC7C,UAAM,mBAAmB,KAAK,kBAAkB,oBAAoB;AAEpE,QAAI,iBAAiB,eAAe;AAClC,YAAM,WAAW,iBAAiB,cAAc;AAChD,eAAS,IAAI,SAAS,SAAS,GAAG,IAAI,IAAI,KAAK;AAC7C,cAAM,UAAU,SAAS,CAAC;AAC1B,YAAI,YAAY,oBAAoB,QAAQ,aAAa,YAAY,QAAQ,aAAa,WAAW,CAAC,QAAQ,aAAa,WAAW,GAAG;AACvI,eAAK,oBAAoB,IAAI,SAAS,QAAQ,aAAa,aAAa,CAAC;AACzE,kBAAQ,aAAa,eAAe,MAAM;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,UAAM,SAAS,KAAK;AACpB,WAAO,SAAS,OAAO,mBAAmB,IAAI,KAAK;AAAA,EACrD;AAAA,EACA,OAAO,YAAO,SAAS,eAAe,mBAAmB;AACvD,WAAO,KAAK,qBAAqB,SAAQ;AAAA,EAC3C;AAAA,EACA,OAAO,aAAuB,gBAAG,6BAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,QAAO;AAAA,IAChB,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,QAAQ,CAAC;AAAA,IAC/E,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AAKH,SAAS,eAAe,OAAO,UAAU;AACvC,MAAI,IAAI,MAAM;AACd,SAAO,KAAK;AACV,aAAS,MAAM,CAAC,CAAC;AAAA,EACnB;AACF;AACA,IAAM,eAAN,MAAM,cAAa;AAAA,EACjB,OAAO,YAAO,SAAS,qBAAqB,mBAAmB;AAC7D,WAAO,KAAK,qBAAqB,eAAc;AAAA,EACjD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,WAAW,CAAC,MAAM;AAAA,IAClB,SAAS;AAAA,MAAC;AAAA,MAAe;AAAA,MAAc;AAAA;AAAA;AAAA,MAGvC;AAAA,IAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,eAAe,cAAc,YAAY,kBAAkB;AAAA,MACrE,SAAS;AAAA;AAAA;AAAA,QAGT;AAAA,QAAc;AAAA,MAAkB;AAAA,MAChC,WAAW,CAAC,MAAM;AAAA,IACpB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC75BH,SAAS,0CAA0C,IAAI,KAAK;AAAC;AAC7D,IAAM,kBAAN,MAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,OAAO;AAAA;AAAA,EAEP,aAAa;AAAA;AAAA,EAEb,cAAc;AAAA;AAAA,EAEd,gBAAgB;AAAA;AAAA,EAEhB,eAAe;AAAA;AAAA,EAEf,QAAQ;AAAA;AAAA,EAER,SAAS;AAAA;AAAA,EAET;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,OAAO;AAAA;AAAA,EAEP;AAAA;AAAA,EAEA,kBAAkB;AAAA;AAAA,EAElB,iBAAiB;AAAA;AAAA,EAEjB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKZ,eAAe;AAAA;AAAA,EAEf,iBAAiB;AAAA;AAAA,EAEjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AACF;AAGA,IAAM,aAAa;AAEnB,IAAM,gBAAgB;AAEtB,IAAM,gBAAgB;AAEtB,IAAM,0BAA0B;AAEhC,IAAM,2BAA2B;AACjC,IAAM,qBAAN,MAAM,4BAA2B,mBAAmB;AAAA,EAClD,iBAAiB,OAAO,uBAAuB;AAAA,IAC7C,UAAU;AAAA,EACZ,CAAC;AAAA;AAAA,EAED,yBAAyB,IAAI,aAAa;AAAA;AAAA,EAE1C,qBAAqB,KAAK,mBAAmB;AAAA;AAAA,EAE7C,sBAAsB;AAAA;AAAA,EAEtB,eAAe,KAAK,YAAY;AAAA;AAAA,EAEhC,0BAA0B,KAAK,qBAAqB,aAAa,KAAK,QAAQ,sBAAsB,KAAK,0BAA0B;AAAA;AAAA,EAEnI,yBAAyB,KAAK,qBAAqB,aAAa,KAAK,QAAQ,qBAAqB,KAAK,2BAA2B;AAAA;AAAA,EAElI,kBAAkB;AAAA,EAClB,mBAAmB;AAGjB,UAAM,iBAAiB;AAOvB,SAAK,oBAAoB;AAAA,EAC3B;AAAA;AAAA,EAEA,sBAAsB;AACpB,SAAK,uBAAuB,KAAK;AAAA,MAC/B,OAAO;AAAA,MACP,WAAW,KAAK;AAAA,IAClB,CAAC;AACD,QAAI,KAAK,oBAAoB;AAC3B,WAAK,aAAa,MAAM,YAAY,8BAA8B,GAAG,KAAK,uBAAuB,IAAI;AAIrG,WAAK,uBAAuB,MAAM,KAAK,aAAa,UAAU,IAAI,eAAe,UAAU,CAAC;AAC5F,WAAK,4BAA4B,KAAK,yBAAyB,KAAK,iBAAiB;AAAA,IACvF,OAAO;AACL,WAAK,aAAa,UAAU,IAAI,UAAU;AAK1C,cAAQ,QAAQ,EAAE,KAAK,MAAM,KAAK,kBAAkB,CAAC;AAAA,IACvD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB;AACpB,SAAK,uBAAuB,KAAK;AAAA,MAC/B,OAAO;AAAA,MACP,WAAW,KAAK;AAAA,IAClB,CAAC;AACD,SAAK,aAAa,UAAU,OAAO,UAAU;AAC7C,QAAI,KAAK,oBAAoB;AAC3B,WAAK,aAAa,MAAM,YAAY,8BAA8B,GAAG,KAAK,sBAAsB,IAAI;AAEpG,WAAK,uBAAuB,MAAM,KAAK,aAAa,UAAU,IAAI,aAAa,CAAC;AAChF,WAAK,4BAA4B,KAAK,wBAAwB,KAAK,kBAAkB;AAAA,IACvF,OAAO;AAkBL,cAAQ,QAAQ,EAAE,KAAK,MAAM,KAAK,mBAAmB,CAAC;AAAA,IACxD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,0BAA0B,OAAO;AAC/B,SAAK,uBAAuB;AAC5B,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,MAAM;AACxB,SAAK,uBAAuB;AAC5B,SAAK,mBAAmB,KAAK,uBAAuB;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB,MAAM;AACzB,SAAK,uBAAuB;AAC5B,SAAK,uBAAuB,KAAK;AAAA,MAC/B,OAAO;AAAA,MACP,WAAW,KAAK;AAAA,IAClB,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,yBAAyB;AACvB,SAAK,aAAa,UAAU,OAAO,eAAe,aAAa;AAAA,EACjE;AAAA,EACA,4BAA4B,UAAU,UAAU;AAC9C,QAAI,KAAK,oBAAoB,MAAM;AACjC,mBAAa,KAAK,eAAe;AAAA,IACnC;AAGA,SAAK,kBAAkB,WAAW,UAAU,QAAQ;AAAA,EACtD;AAAA;AAAA,EAEA,uBAAuB,UAAU;AAC/B,SAAK,QAAQ,kBAAkB,MAAM;AACnC,UAAI,OAAO,0BAA0B,YAAY;AAC/C,8BAAsB,QAAQ;AAAA,MAChC,OAAO;AACL,iBAAS;AAAA,MACX;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,uBAAuB;AACrB,QAAI,CAAC,KAAK,QAAQ,gBAAgB;AAChC,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAmB,WAAW;AAC5B,QAAI,KAAK,QAAQ,gBAAgB;AAC/B,WAAK,WAAW;AAAA,IAClB;AACA,SAAK,uBAAuB,KAAK;AAAA,MAC/B,OAAO;AAAA,MACP;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,UAAM,YAAY;AAClB,QAAI,KAAK,oBAAoB,MAAM;AACjC,mBAAa,KAAK,eAAe;AAAA,IACnC;AAAA,EACF;AAAA,EACA,sBAAsB,QAAQ;AAS5B,UAAM,MAAM,MAAM,sBAAsB,MAAM;AAC9C,QAAI,SAAS,cAAc,UAAU,IAAI,+BAA+B;AACxE,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,2BAA2B,mBAAmB;AAC5D,cAAQ,yCAAoC,uCAAqC,gCAAsB,mBAAkB,IAAI,qBAAqB,mBAAkB;AAAA,IACtK;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,sBAAsB,CAAC;AAAA,IACpC,WAAW,CAAC,YAAY,MAAM,GAAG,4BAA4B,YAAY;AAAA,IACzE,UAAU;AAAA,IACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,MAAM,IAAI,QAAQ,EAAE;AACtC,QAAG,sBAAY,cAAc,IAAI,QAAQ,SAAS,EAAE,QAAQ,IAAI,QAAQ,IAAI,EAAE,mBAAmB,IAAI,QAAQ,YAAY,OAAO,IAAI,qBAAqB,CAAC,CAAC,EAAE,cAAc,IAAI,QAAQ,SAAS,EAAE,oBAAoB,IAAI,QAAQ,mBAAmB,IAAI;AACzP,QAAG,sBAAY,2BAA2B,CAAC,IAAI,kBAAkB,EAAE,yCAAyC,IAAI,sBAAsB,CAAC;AAAA,MACzI;AAAA,IACF;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,IACxC,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,GAAG,kCAAkC,uBAAuB,GAAG,CAAC,GAAG,0BAA0B,qBAAqB,GAAG,CAAC,mBAAmB,EAAE,CAAC;AAAA,IACtJ,UAAU,SAAS,4BAA4B,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;AAC1C,QAAG,qBAAW,GAAG,2CAA2C,GAAG,GAAG,eAAe,CAAC;AAClF,QAAG,uBAAa,EAAE;AAAA,MACpB;AAAA,IACF;AAAA,IACA,cAAc,CAAC,eAAe;AAAA,IAC9B,QAAQ,CAAC,ylKAA6lK;AAAA,IACtmK,eAAe;AAAA,EACjB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,eAAe,kBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,SAAS,CAAC,eAAe;AAAA,MACzB,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,qBAAqB;AAAA,QACrB,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,0BAA0B;AAAA,QAC1B,qBAAqB;AAAA,QACrB,2BAA2B;AAAA,QAC3B,mCAAmC;AAAA,QACnC,iDAAiD;AAAA,MACnD;AAAA,MACA,UAAU;AAAA,MACV,QAAQ,CAAC,ylKAA6lK;AAAA,IACxmK,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,+BAA+B;AAOrC,SAAS,aAAa,MAAM;AAC1B,MAAI,QAAQ,MAAM;AAChB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,KAAK,SAAS,IAAI,GAAG;AACvB,WAAO,qBAAqB,KAAK,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC;AAAA,EAChE;AACA,MAAI,KAAK,SAAS,GAAG,GAAG;AACtB,WAAO,qBAAqB,KAAK,UAAU,GAAG,KAAK,SAAS,CAAC,CAAC,IAAI;AAAA,EACpE;AACA,MAAI,SAAS,KAAK;AAChB,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,IAAI;AAAA,CACH,SAAUE,iBAAgB;AACzB,EAAAA,gBAAeA,gBAAe,MAAM,IAAI,CAAC,IAAI;AAC7C,EAAAA,gBAAeA,gBAAe,SAAS,IAAI,CAAC,IAAI;AAChD,EAAAA,gBAAeA,gBAAe,QAAQ,IAAI,CAAC,IAAI;AACjD,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAI1C,IAAM,eAAN,MAAmB;AAAA,EACjB;AAAA,EACA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,eAAe,IAAI,QAAQ;AAAA;AAAA,EAE3B,gBAAgB,IAAI,QAAQ;AAAA;AAAA,EAE5B;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,SAAS,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB;AAAA,EACA,YAAY,MAAM,QAAQ,oBAAoB;AAC5C,SAAK,OAAO;AACZ,SAAK,qBAAqB;AAC1B,SAAK,eAAe,OAAO;AAC3B,SAAK,KAAK,KAAK;AAEf,SAAK,cAAc,sBAAsB;AAEzC,uBAAmB,uBAAuB,KAAK,OAAO,WAAS,MAAM,UAAU,QAAQ,GAAG,KAAK,CAAC,CAAC,EAAE,UAAU,MAAM;AACjH,WAAK,aAAa,KAAK;AACvB,WAAK,aAAa,SAAS;AAAA,IAC7B,CAAC;AAED,uBAAmB,uBAAuB,KAAK,OAAO,WAAS,MAAM,UAAU,QAAQ,GAAG,KAAK,CAAC,CAAC,EAAE,UAAU,MAAM;AACjH,mBAAa,KAAK,qBAAqB;AACvC,WAAK,mBAAmB;AAAA,IAC1B,CAAC;AACD,SAAK,WAAW,YAAY,EAAE,UAAU,MAAM;AAC5C,WAAK,cAAc,KAAK,KAAK,OAAO;AACpC,WAAK,cAAc,SAAS;AAC5B,WAAK,mBAAmB;AAAA,IAC1B,CAAC;AACD,UAAM,KAAK,cAAc,GAAG,KAAK,cAAc,EAAE,KAAK,OAAO,WAAS,MAAM,YAAY,UAAU,CAAC,KAAK,gBAAgB,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,WAAS;AACnK,UAAI,CAAC,KAAK,cAAc;AACtB,cAAM,eAAe;AACrB,wBAAgB,MAAM,MAAM,SAAS,YAAY,aAAa,OAAO;AAAA,MACvE;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cAAc;AAClB,SAAK,UAAU;AAEf,SAAK,mBAAmB,uBAAuB,KAAK,OAAO,WAAS,MAAM,UAAU,SAAS,GAAG,KAAK,CAAC,CAAC,EAAE,UAAU,WAAS;AAC1H,WAAK,cAAc,KAAK,YAAY;AACpC,WAAK,cAAc,SAAS;AAC5B,WAAK,KAAK,WAAW,eAAe;AAMpC,WAAK,wBAAwB,WAAW,MAAM,KAAK,mBAAmB,GAAG,MAAM,YAAY,GAAG;AAAA,IAChG,CAAC;AACD,SAAK,SAAS,eAAe;AAC7B,SAAK,mBAAmB,oBAAoB;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc;AACZ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc;AACZ,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACb,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB;AACd,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB;AACd,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,UAAU;AACvB,QAAI,WAAW,KAAK,KAAK,OAAO;AAChC,QAAI,aAAa,SAAS,QAAQ,SAAS,QAAQ;AACjD,eAAS,OAAO,SAAS,KAAK,SAAS,IAAI,IAAI,SAAS,MAAM,SAAS,KAAK;AAAA,IAC9E,OAAO;AACL,eAAS,mBAAmB;AAAA,IAC9B;AACA,QAAI,aAAa,SAAS,OAAO,SAAS,SAAS;AACjD,eAAS,MAAM,SAAS,IAAI,SAAS,GAAG,IAAI,SAAS,OAAO,SAAS,MAAM;AAAA,IAC7E,OAAO;AACL,eAAS,iBAAiB;AAAA,IAC5B;AACA,SAAK,KAAK,eAAe;AACzB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,QAAQ,IAAI,SAAS,IAAI;AAClC,SAAK,KAAK,WAAW,OAAO,MAAM;AAClC,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,cAAc,SAAS;AACrB,SAAK,KAAK,cAAc,OAAO;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,iBAAiB,SAAS;AACxB,SAAK,KAAK,iBAAiB,OAAO;AAClC,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AACnB,SAAK,SAAS,eAAe;AAC7B,SAAK,KAAK,MAAM,KAAK,SAAS;AAAA,MAC5B,aAAa,KAAK;AAAA,IACpB,CAAC;AACD,SAAK,oBAAoB;AAAA,EAC3B;AACF;AAOA,SAAS,gBAAgB,KAAK,iBAAiB,QAAQ;AACrD,MAAI,wBAAwB;AAC5B,SAAO,IAAI,MAAM,MAAM;AACzB;AAGA,IAAM,kBAAkB,IAAI,eAAe,kBAAkB;AAE7D,IAAM,6BAA6B,IAAI,eAAe,gCAAgC;AAEtF,IAAM,6BAA6B,IAAI,eAAe,kCAAkC;AAAA,EACtF,YAAY;AAAA,EACZ,SAAS,MAAM;AACb,UAAM,UAAU,OAAO,OAAO;AAC9B,WAAO,MAAM,QAAQ,iBAAiB,MAAM;AAAA,EAC9C;AACF,CAAC;AAsBD,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,WAAW,OAAO,OAAO;AAAA,EACzB,kBAAkB,OAAO,4BAA4B;AAAA,IACnD,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,kBAAkB,OAAO,0BAA0B;AAAA,EACnD,gBAAgB,OAAO,YAAW;AAAA,IAChC,UAAU;AAAA,IACV,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,eAAe,OAAO,YAAY;AAAA,EAClC,UAAU,OAAO,MAAM;AAAA,EACvB,0BAA0B,CAAC;AAAA,EAC3B,6BAA6B,IAAI,QAAQ;AAAA,EACzC,0BAA0B,IAAI,QAAQ;AAAA,EACtC,oBAAoB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,EACpE;AAAA;AAAA,EAEA,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,EACpE;AAAA,EACA,qBAAqB;AACnB,UAAM,SAAS,KAAK;AACpB,WAAO,SAAS,OAAO,mBAAmB,IAAI,KAAK;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,MAAM,MAAM,KAAK,YAAY,SAAS,KAAK,mBAAmB,IAAI,KAAK,mBAAmB,EAAE,KAAK,UAAU,MAAS,CAAC,CAAC;AAAA,EACvI,cAAc;AACZ,SAAK,wBAAwB;AAC7B,SAAK,uBAAuB;AAC5B,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,KAAK,wBAAwB,QAAQ;AACnC,QAAI;AACJ,aAAS,kCACH,KAAK,mBAAmB,IAAI,gBAAgB,IAC7C;AAEL,WAAO,KAAK,OAAO,MAAM,KAAK,aAAa,MAAM,iBAAiB;AAClE,WAAO,iBAAiB,OAAO,kBAAkB,KAAK,gBAAgB;AACtE,UAAM,SAAS,KAAK,QAAQ,KAAK,wBAAwB,iCACpD,SADoD;AAAA,MAEvD,kBAAkB,KAAK,SAAS,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAE,iBAAiB;AAAA;AAAA,MAE1F,cAAc;AAAA;AAAA;AAAA;AAAA,MAId,gBAAgB;AAAA;AAAA;AAAA,MAGhB,2BAA2B;AAAA,MAC3B,WAAW;AAAA,QACT,MAAM,KAAK;AAAA,QACX,WAAW,MAAM;AAAA;AAAA;AAAA;AAAA,UAIjB;AAAA,YACE,SAAS,KAAK;AAAA,YACd,UAAU;AAAA,UACZ;AAAA,UAAG;AAAA,YACD,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAC;AAAA,MACH;AAAA,MACA,iBAAiB,OAAO;AAAA,QACtB;AAAA,MACF;AAAA,MACA,WAAW,CAAC,KAAK,WAAW,oBAAoB;AAC9C,oBAAY,IAAI,KAAK,sBAAsB,KAAK,QAAQ,eAAe;AACvE,kBAAU,eAAe,QAAQ,QAAQ;AACzC,eAAO,CAAC;AAAA,UACN,SAAS,KAAK;AAAA,UACd,UAAU;AAAA,QACZ,GAAG;AAAA,UACD,SAAS,KAAK;AAAA,UACd,UAAU,UAAU;AAAA,QACtB,GAAG;AAAA,UACD,SAAS,KAAK;AAAA,UACd,UAAU;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,IACF,EAAC;AAGD,cAAU,eAAe,OAAO;AAChC,cAAU,oBAAoB,OAAO;AACrC,SAAK,YAAY,KAAK,SAAS;AAC/B,SAAK,YAAY,KAAK,SAAS;AAC/B,cAAU,YAAY,EAAE,UAAU,MAAM;AACtC,YAAM,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAChD,UAAI,QAAQ,IAAI;AACd,aAAK,YAAY,OAAO,OAAO,CAAC;AAChC,YAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,eAAK,mBAAmB,EAAE,KAAK;AAAA,QACjC;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,SAAK,cAAc,KAAK,WAAW;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,IAAI;AAChB,WAAO,KAAK,YAAY,KAAK,YAAU,OAAO,OAAO,EAAE;AAAA,EACzD;AAAA,EACA,cAAc;AAGZ,SAAK,cAAc,KAAK,uBAAuB;AAC/C,SAAK,2BAA2B,SAAS;AACzC,SAAK,wBAAwB,SAAS;AAAA,EACxC;AAAA,EACA,cAAc,SAAS;AACrB,QAAI,IAAI,QAAQ;AAChB,WAAO,KAAK;AACV,cAAQ,CAAC,EAAE,MAAM;AAAA,IACnB;AAAA,EACF;AAAA,EACA,OAAO,YAAO,SAAS,kBAAkB,mBAAmB;AAC1D,WAAO,KAAK,qBAAqB,YAAW;AAAA,EAC9C;AAAA,EACA,OAAO,aAAuB,gBAAG,6BAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,WAAU;AAAA,IACnB,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,WAAW,CAAC;AAAA,IAClF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AAKH,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,YAAY,OAAO,cAAc;AAAA,IAC/B,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,cAAc,OAAO,UAAU;AAAA,EAC/B,UAAU,OAAO,SAAS;AAAA;AAAA,EAE1B;AAAA;AAAA,EAEA,OAAO;AAAA;AAAA,EAEP;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EAAC;AAAA,EACf,WAAW;AACT,QAAI,CAAC,KAAK,WAAW;AAMnB,WAAK,YAAY,iBAAiB,KAAK,aAAa,KAAK,QAAQ,WAAW;AAAA,IAC9E;AAAA,EACF;AAAA,EACA,YAAY,SAAS;AACnB,UAAM,gBAAgB,QAAQ,iBAAiB,KAAK,QAAQ,uBAAuB;AACnF,QAAI,eAAe;AACjB,WAAK,eAAe,cAAc;AAAA,IACpC;AAAA,EACF;AAAA,EACA,eAAe,OAAO;AAKpB,oBAAgB,KAAK,WAAW,MAAM,YAAY,KAAK,MAAM,YAAY,IAAI,aAAa,SAAS,KAAK,YAAY;AAAA,EACtH;AAAA,EACA,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAAA,IACpE,UAAU;AAAA,IACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,SAAS,SAAS,wCAAwC,QAAQ;AAC9E,iBAAO,IAAI,eAAe,MAAM;AAAA,QAClC,CAAC;AAAA,MACH;AACA,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,cAAc,IAAI,aAAa,IAAI,EAAE,QAAQ,IAAI,IAAI;AAAA,MACtE;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,WAAW,CAAC,GAAG,cAAc,WAAW;AAAA,MACxC,MAAM;AAAA,MACN,cAAc,CAAC,GAAG,oBAAoB,cAAc;AAAA,MACpD,iBAAiB,CAAC,GAAG,kBAAkB,iBAAiB;AAAA,IAC1D;AAAA,IACA,UAAU,CAAC,gBAAgB;AAAA,IAC3B,UAAU,CAAI,8BAAoB;AAAA,EACpC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,WAAW;AAAA,QACX,qBAAqB;AAAA,QACrB,eAAe;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC3B,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,yBAAN,MAAM,wBAAuB;AAAA,EAC3B,aAAa,OAAO,cAAc;AAAA,IAChC,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,cAAc,OAAO,UAAU;AAAA,EAC/B,UAAU,OAAO,SAAS;AAAA,EAC1B,cAAc;AAAA,EAAC;AAAA,EACf,WAAW;AACT,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,iBAAiB,KAAK,aAAa,KAAK,QAAQ,WAAW;AAAA,IAC/E;AACA,QAAI,KAAK,YAAY;AACnB,cAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,aAAK,OAAO;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,cAAc;AAGZ,UAAM,WAAW,KAAK,YAAY;AAClC,QAAI,UAAU;AACZ,cAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,aAAK,UAAU;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,OAAO,YAAO,SAAS,+BAA+B,mBAAmB;AACvE,WAAO,KAAK,qBAAqB,yBAAwB;AAAA,EAC3D;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,EACR,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,wBAAwB,CAAC;AAAA,IAC/F,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AAIH,IAAM,iBAAN,MAAM,wBAAuB,uBAAuB;AAAA,EAClD,KAAK,OAAO,YAAY,EAAE,MAAM,uBAAuB;AAAA,EACvD,SAAS;AAGP,SAAK,WAAW,oBAAoB,qBAAqB,KAAK,EAAE;AAAA,EAClE;AAAA,EACA,YAAY;AACV,SAAK,YAAY,oBAAoB,wBAAwB,KAAK,EAAE;AAAA,EACtE;AAAA,EACA,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,uBAAuB,mBAAmB;AACxD,cAAQ,qCAAgC,mCAAiC,gCAAsB,eAAc,IAAI,qBAAqB,eAAc;AAAA,IACtJ;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAAA,IACpE,WAAW,CAAC,GAAG,wBAAwB,mBAAmB;AAAA,IAC1D,UAAU;AAAA,IACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,MAAM,IAAI,EAAE;AAAA,MAChC;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,IAAI;AAAA,IACN;AAAA,IACA,UAAU,CAAC,gBAAgB;AAAA,IAC3B,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,IAAI,CAAC;AAAA,MACH,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAIH,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO,YAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,GAAG,CAAC,oBAAoB,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;AAAA,IAChG,WAAW,CAAC,GAAG,0BAA0B,qBAAqB;AAAA,IAC9D,UAAU,CAAI,kCAAwB,CAAI,aAAa,CAAC,CAAC;AAAA,EAC3D,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,MACA,gBAAgB,CAAC,aAAa;AAAA,IAChC,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAKH,IAAM,mBAAN,MAAM,0BAAyB,uBAAuB;AAAA;AAAA;AAAA;AAAA,EAIpD;AAAA,EACA,SAAS;AACP,SAAK,WAAW,oBAAoB,4BAA4B,CAAC;AAAA,EACnE;AAAA,EACA,YAAY;AACV,SAAK,WAAW,oBAAoB,4BAA4B,EAAE;AAAA,EACpE;AAAA,EACA,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,yBAAyB,mBAAmB;AAC1D,cAAQ,uCAAkC,qCAAmC,gCAAsB,iBAAgB,IAAI,qBAAqB,iBAAgB;AAAA,IAC9J;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,GAAG,CAAC,oBAAoB,GAAG,CAAC,IAAI,oBAAoB,EAAE,CAAC;AAAA,IAChG,WAAW,CAAC,GAAG,0BAA0B,qBAAqB;AAAA,IAC9D,UAAU;AAAA,IACV,cAAc,SAAS,8BAA8B,IAAI,KAAK;AAC5D,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,sCAAsC,IAAI,UAAU,OAAO,EAAE,uCAAuC,IAAI,UAAU,QAAQ,EAAE,oCAAoC,IAAI,UAAU,KAAK;AAAA,MACpM;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,8CAA8C;AAAA,QAC9C,+CAA+C;AAAA,QAC/C,4CAA4C;AAAA,MAC9C;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAMH,SAAS,iBAAiB,SAAS,aAAa;AAC9C,MAAI,SAAS,QAAQ,cAAc;AACnC,SAAO,UAAU,CAAC,OAAO,UAAU,SAAS,0BAA0B,GAAG;AACvE,aAAS,OAAO;AAAA,EAClB;AACA,SAAO,SAAS,YAAY,KAAK,YAAU,OAAO,OAAO,OAAO,EAAE,IAAI;AACxE;AACA,IAAM,aAAa,CAAC,oBAAoB,gBAAgB,gBAAgB,kBAAkB,gBAAgB;AAC1G,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,OAAO,YAAO,SAAS,wBAAwB,mBAAmB;AAChE,WAAO,KAAK,qBAAqB,kBAAiB;AAAA,EACpD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,WAAW,CAAC,SAAS;AAAA,IACrB,SAAS,CAAC,cAAc,eAAe,cAAc,iBAAiB,eAAe;AAAA,EACvF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,cAAc,eAAe,cAAc,iBAAiB,GAAG,UAAU;AAAA,MACnF,SAAS,CAAC,iBAAiB,GAAG,UAAU;AAAA,MACxC,WAAW,CAAC,SAAS;AAAA,IACvB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;ACh/BG,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,gCAAA;AAA8B,IAAA,uBAAA,EAAI;;;;;;AAIvC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,uBAAA,CAAwB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AAD3D,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAUvB,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,4BAAA;AACF,IAAA,uBAAA;;;;;;AAPJ,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAiE,IAAA,qBAAA,YAAA,SAAA,oEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,SAAA,CAAU;IAAA,CAAA;AACrF,IAAA,yBAAA,GAAA,kBAAA,EAAA,EAAwD,GAAA,WAAA;AAC3C,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AACvB,IAAA,oBAAA,GAAA,YAAA,EAAA;AAEA,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,aAAA,EAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,UAAA,EAAA;AACS,IAAA,qBAAA,SAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAClD,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,GAAA,UAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,sBAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;;;AAnB2B,IAAA,qBAAA,aAAA,OAAA,eAAA;AAKnB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,UAAA,OAAA,gBAAA,IAAA,aAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAOD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;AAG6C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,gBAAA,OAAA;AAC7C,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;;;AAoEf,IAAO,2BAAP,MAAO,0BAAwB;EAkBzB;EACA;EACwB;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EA1BV;EACA,YAAY;EACZ,QAAuB;EACvB,oBAA4B;EAC5B;EACA,SAAgB,CAAA;EAChB;EACA;EACA,eAAsB,CAAA;;EAGtB,eAAe;EACf,UAAU;EACV,UAAU;EACV,UAAU;EAEV,YACU,IACA,WACwB,MACxB,oBACA,gBACA,UACA,mBACA,cACA,aACA,WAAoB;AATpB,SAAA,KAAA;AACA,SAAA,YAAA;AACwB,SAAA,OAAA;AACxB,SAAA,qBAAA;AACA,SAAA,iBAAA;AACA,SAAA,WAAA;AACA,SAAA,oBAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACA,SAAA,YAAA;AAER,SAAK,kBAAkB,KAAK,GAAG,MAAM;MACnC,aAAa,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC;KACnE;EACH;EAEA,WAAQ;AACN,SAAK,uBAAsB;EAC7B;EAEA,yBAAsB;AACpB,SAAK,YAAY;AACjB,SAAK,QAAQ;AAEb,SAAK,eAAe,WAAU,EAAG,UAAU;MACzC,MAAM,CAAC,YAAW;AAChB,aAAK,OAAO;AACZ,aAAK,2BAA0B;AAC/B,aAAK,eAAc;AACnB,aAAK,qBAAoB;AACzB,aAAK,WAAU;AACf,aAAK,eAAc;AASnB,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,2BAA2B,KAAK;AAC9C,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEQ,iBAAc;AACpB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,aAAa,cAAc,KAAK,EAAE,EAAE,UAAU;QACjD,MAAM,CAAC,WAAU;AACf,eAAK,SAAS;AACd,eAAK,2BAA0B;QACjC;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,yBAAyB,KAAK;QAE9C;OACD;IACH;EACF;EAEQ,uBAAoB;AAC1B,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,mBAAmB,oBAAoB,KAAK,EAAE,EAAE,UAAU;QAC7D,MAAM,CAAC,iBAAgB;AACrB,eAAK,eAAe;QACtB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,+BAA+B,KAAK;QAEpD;OACD;IACH;EACF;EAEQ,aAAU;AAChB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,UAAU,MAAM,KAAK,EAAE,EAAE,UAAU;QACtC,MAAM,CAAC,OAAM;AACX,eAAK,KAAK;AACV,eAAK,2BAA0B;AAC/B,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,qBAAqB,KAAK;AAExC,eAAK,YAAY;QACnB;OACD;IACH,OAAO;AACL,WAAK,YAAY;IACnB;EACF;EAEQ,iBAAc;AACpB,SAAK,kBAAkB,mBAAkB,EAAG,UAAU;MACpD,MAAM,CAAC,gBAAe;AACpB,YAAI,YAAY,SAAS,GAAG;AAE1B,eAAK,aAAa,YAAY,CAAC;AAC/B,eAAK,2BAA0B;QACjC;AACA,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,8BAA8B,KAAK;AAEjD,aAAK,YAAY;MACnB;KACD;EACH;EAEA,cAAc,QAAc;AAC1B,YAAQ,OAAO,YAAW,GAAI;MAC5B,KAAK;AACH,eAAO,KAAK;MACd,KAAK;AACH,eAAO,KAAK;MACd;AACE,eAAO,KAAK;IAChB;EACF;EAEQ,6BAA0B;AAChC,QAAI,aAAa;AACjB,UAAM,cAAc;AAEpB,QAAI,KAAK,MAAM;AAAM;AACrB,QAAI,KAAK,OAAO,SAAS;AAAG;AAC5B,QAAI,KAAK;AAAI;AACb,QAAI,KAAK,MAAM;AAAU;AACzB,QAAI,KAAK;AAAY;AAErB,SAAK,oBAAoB,KAAK,MAAO,aAAa,cAAe,GAAG;EACtE;EAEA,WAAQ;AACN,SAAK,UAAU,MAAK;EACtB;EACA,WAAQ;AACN,QAAI,KAAK,gBAAgB,OAAO;AAC9B,WAAK,YAAY;AACjB,WAAK,QAAQ;AAEb,YAAM,kBAAkB;QACtB,OAAO,KAAK,KAAK,IAAI;QACrB,aAAa,KAAK,gBAAgB,MAAM;QACxC,QAAQ;QACR,WAAW,oBAAI,KAAI;;AAGrB,WAAK,mBAAmB,kBAAkB,eAAe,EAAE,UAAU;QACnE,MAAM,MAAK;AACT,eAAK,YAAY;AACjB,eAAK,SAAS,KAAK,uCAAuC,SAAS;YACjE,UAAU;YACV,YAAY,CAAC,kBAAkB;WAChC;AACD,eAAK,UAAU,MAAK;QACtB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,iCAAiC,KAAK;AACpD,eAAK,YAAY;AACjB,eAAK,QAAQ;QACf;OACD;IACH;EACF;;qCAhMW,2BAAwB,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAoBzB,eAAe,GAAA,4BAAA,kBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,SAAA,CAAA;EAAA;yEApBd,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,4BAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,YAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,cAAA,WAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,eAAA,QAAA,KAAA,eAAA,oDAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,cAAA,IAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,UAAA,GAAA,UAAA,CAAA,GAAA,UAAA,SAAA,kCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAvGjC,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAwC,GAAA,OAAA,CAAA,EACb,GAAA,IAAA;AACnB,MAAA,iBAAA,CAAA;AAA4B,MAAA,uBAAA;AAChC,MAAA,yBAAA,GAAA,KAAA,CAAA;AAAmB,MAAA,iBAAA,CAAA;AAA6B,MAAA,uBAAA,EAAI;AAItD,MAAA,qBAAA,GAAA,yCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,yCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,0CAAA,IAAA,GAAA,QAAA,CAAA;AA2B7C,MAAA,uBAAA;;;AAtCQ,MAAA,oBAAA,CAAA;AAAA,MAAA,6BAAA,cAAA,IAAA,KAAA,IAAA,OAAA,EAAA;AACe,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,IAAA,KAAA,IAAA,SAAA,OAAA;AAIf,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMC,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IA/BT;IAAY;IACZ;IAAW;IAAA;IAAA;IAAA;IACX;IAAmB;IAAA;IACnB;IACA;IAAkB;IAAA;IAAA;IAClB;IAAc;IACd;IAAe;IACf;IAAwB;IACxB;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,8jCAAA,EAAA,CAAA;;;sEA0GR,0BAAwB,CAAA;UAvHpC;uBACW,wBAAsB,YACpB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA0CT,QAAA,CAAA,mlCAAA,EAAA,CAAA;;UAkFE;WAAO,eAAe;;;;6EApBd,0BAAwB,EAAA,WAAA,4BAAA,UAAA,2FAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;AC3G/B,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,qCAAA;AAAmC,IAAA,uBAAA,EAAI;;;;;;AAI5C,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AADjD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;;AAK3B,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0F,GAAA,IAAA;AACpF,IAAA,iBAAA,GAAA,sBAAA;AAAoB,IAAA,uBAAA;AACxB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,6FAAA;AAA2F,IAAA,uBAAA;AAC9F,IAAA,yBAAA,GAAA,UAAA,EAAA;AAA0C,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,kBAAA,CAAmB;IAAA,CAAA;AACpE,IAAA,iBAAA,GAAA,iBAAA;AACF,IAAA,uBAAA,EAAS;;;;;AA0CC,IAAA,yBAAA,GAAA,YAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;AAMF,IAAA,yBAAA,GAAA,YAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;;AA3CV,IAAA,yBAAA,GAAA,YAAA,EAAA,EAA4D,GAAA,iBAAA,EACzC,GAAA,gBAAA;AAEb,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,mBAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAoB;AAGtB,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EACS,IAAA,OAAA,EAAA;AAErB,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,OAAA,EAAA;AAErB,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,IAAA;AACtB,IAAA,iBAAA,IAAA,iBAAA;AAAe,IAAA,uBAAA;AACnB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,4DAAA,GAAA,GAAA,YAAA,EAAA;AAIF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAClB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,4DAAA,GAAA,GAAA,YAAA,EAAA;AAIF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;AAAyB,IAAA,uBAAA,EAAI;AAG1D,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,UAAA,EAAA;AAC0B,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,SAAA,GAAA,CAAsB;IAAA,CAAA;AACvE,IAAA,iBAAA,IAAA,aAAA;AACF,IAAA,uBAAA,EAAS,EACQ;;;;;AApDN,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,IAAA,OAAA,GAAA;AAGS,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,IAAA,SAAA,MAAA,GAAA;AAOW,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,IAAA,UAAA,GAAA;AAGS,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,IAAA,QAAA,GAAA;AAKiB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA,SAAA,UAAA,CAAA;AACjB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,YAAA,UAAA;AAO4B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,cAAA;AAQA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,aAAA;AAOL,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,IAAA,WAAA;;;;;AArDnC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+E,GAAA,IAAA;AACzE,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA;AACpB,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAoB,IAAA,iBAAA,GAAA,qCAAA;AAAmC,IAAA,uBAAA;AAEvD,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,gDAAA,IAAA,IAAA,YAAA,EAAA;AAyDF,IAAA,uBAAA,EAAM;;;;AAzDwB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;;;AAiNhC,IAAO,uBAAP,MAAO,sBAAoB;EAcrB;EACA;EACA;EACA;EACA;;EAhBV,cAAc;EACd,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAEhB,aAAyB,CAAA;EACzB,YAAY;EACZ,QAAuB;EAEvB,YACU,YACA,cACA,aACA,QACA,QAAiB;AAJjB,SAAA,aAAA;AACA,SAAA,eAAA;AACA,SAAA,cAAA;AACA,SAAA,SAAA;AACA,SAAA,SAAA;EACP;EAEH,WAAQ;AACN,SAAK,eAAc;EACrB;EAEQ,iBAAc;AACpB,SAAK,YAAY;AACjB,SAAK,QAAQ;AAEb,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,CAAC,MAAM;AACT,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB;IACF;AAGA,SAAK,aAAa,cAAc,KAAK,EAAE,EAAE,UAAU;MACjD,MAAM,CAAC,eAAc;AAEnB,aAAK,WAAW,WAAU,EAAG,UAAU;UACrC,MAAM,CAAC,SAAQ;AACb,iBAAK,aAAa,KAAK,oBAAoB,MAAM,UAAU;AAC3D,iBAAK,YAAY;UACnB;UACA,OAAO,CAAC,UAAS;AACf,oBAAQ,MAAM,uBAAuB,KAAK;AAC1C,iBAAK,QAAQ;AACb,iBAAK,YAAY;UACnB;SACD;MACH;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,8BAA8B,KAAK;AACjD,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEQ,oBAAoB,MAAa,YAAmB;AAC1D,WAAO,KAAK,IAAI,SAAM;AACpB,YAAM,iBAAiB,IAAI,kBAAkB,CAAA;AAC7C,YAAM,iBAAiB,WAAW,OAAO,WACvC,eAAe,KAAK,cAAY,SAAS,OAAO,MAAM,EAAE,CAAC;AAE3D,YAAM,gBAAgB,eAAe,OAAO,WAC1C,CAAC,WAAW,KAAK,eAAa,UAAU,OAAO,MAAM,EAAE,CAAC;AAG1D,YAAM,aAAa,eAAe,SAAS,IACvC,KAAK,MAAO,eAAe,SAAS,eAAe,SAAU,GAAG,IAChE;AAEJ,aAAO;QACL;QACA;QACA;QACA;;IAEJ,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,aAAa,EAAE,UAAU;EAC/C;EAEA,cAAc,OAAa;AACzB,QAAI,SAAS;AAAI,aAAO;AACxB,QAAI,SAAS;AAAI,aAAO;AACxB,WAAO;EACT;EAEA,YAAY,KAAQ;AAClB,UAAM,YAAY,KAAK,OAAO,KAAK,0BAA0B;MAC3D,OAAO;MACP,MAAM,EAAE,IAAG;KACZ;AAED,cAAU,YAAW,EAAG,UAAU,YAAS;AACzC,UAAI,QAAQ;AAEV,aAAK,eAAc;MACrB;IACF,CAAC;EACH;EAEA,oBAAiB;AACf,SAAK,OAAO,SAAS,CAAC,4BAA4B,CAAC;EACrD;EAEA,eAAY;AACV,SAAK,eAAc;EACrB;;qCA7GW,uBAAoB,4BAAA,UAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,SAAA,CAAA;EAAA;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,wBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,YAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,eAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AA7O7B,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,MAAA,qBAAA,GAAA,qCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,qCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,qCAAA,GAAA,GAAA,OAAA,CAAA,EAM+C,GAAA,qCAAA,GAAA,GAAA,OAAA,CAAA;AAyE5F,MAAA,uBAAA;;;AArFQ,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,SAAA,IAAA,WAAA,WAAA,CAAA;AASA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,SAAA,IAAA,WAAA,SAAA,CAAA;;;IAhCR;IAAY;IAAA;IAAA;IACZ;IAAa;IAAA;IAAA;IAAA;IAAA;IAAA;IACb;IAAe;IACf;IAAwB;IACxB;IAAc;IACd;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,2zFAAA,EAAA,CAAA;;;sEAgPR,sBAAoB,CAAA;UA1PhC;uBACW,oBAAkB,YAChB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyFT,QAAA,CAAA,g3EAAA,EAAA,CAAA;;;;6EAqJU,sBAAoB,EAAA,WAAA,wBAAA,UAAA,mFAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;AC/PjC,IAAMC,OAAM,CAAC,MAAM;AACnB,IAAMC,OAAM,CAAC,yBAAyB;AACtC,SAAS,4CAA4C,IAAI,KAAK;AAC5D,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC;AAC3D,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa,EAAE,EAAE;AAAA,EACtB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU,CAAC;AACd,IAAG,4BAAkB,OAAO,kBAAkB;AAAA,EAChD;AACF;AACA,IAAMC,OAAM,CAAC,aAAa;AAC1B,IAAMC,OAAM,CAAC,GAAG;AAChB,SAAS,qDAAqD,IAAI,KAAK;AACrE,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU,GAAG,KAAK;AAAA,EACvB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,cAAc,IAAI;AACxB,UAAM,qBAAgB,IAAI;AAC1B,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,qBAAW,gBAAgB,IAAI,kCAAkC,iCAAiC;AACrG,IAAG,sBAAY,aAAa,OAAO,uBAAuB,kBAAa,CAAC;AAAA,EAC1E;AACF;AACA,SAAS,+CAA+C,IAAI,KAAK;AAC/D,MAAI,KAAK,GAAG;AACV,IAAG,2BAAiB,GAAG,sDAAsD,GAAG,GAAG,OAAO,GAAM,gCAAsB;AAAA,EACxH;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,qBAAW,OAAO,UAAU;AAAA,EACjC;AACF;AACA,SAAS,iCAAiC,IAAI,KAAK;AACjD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,IAAG,qBAAW,GAAG,gDAAgD,GAAG,CAAC;AACrE,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU,CAAC;AACd,IAAG,wBAAc,OAAO,eAAe,IAAI,EAAE;AAAA,EAC/C;AACF;AACA,SAAS,iCAAiC,IAAI,KAAK;AACjD,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU,GAAG,2BAA2B,CAAC;AAAA,EAC9C;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,YAAY,OAAO,QAAQ,EAAE,iBAAiB,CAAC,EAAE,sBAAsB,OAAO,uBAAuB;AAAA,EACrH;AACF;AACA,IAAI;AAAA,CACH,SAAUC,YAAW;AACpB,EAAAA,WAAUA,WAAU,OAAO,IAAI,CAAC,IAAI;AACpC,EAAAA,WAAUA,WAAU,KAAK,IAAI,CAAC,IAAI;AACpC,GAAG,cAAc,YAAY,CAAC,EAAE;AAEhC,IAAI;AAAA,CACH,SAAUC,eAAc;AACvB,EAAAA,cAAaA,cAAa,QAAQ,IAAI,CAAC,IAAI;AAC3C,EAAAA,cAAaA,cAAa,UAAU,IAAI,CAAC,IAAI;AAC/C,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAOtC,IAAM,aAAa,IAAI,eAAe,YAAY;AAMlD,IAAM,mBAAmB,IAAI,eAAe,iBAAiB;AAM7D,IAAM,yBAAyB,IAAI,eAAe,sBAAsB;AAMxE,IAAM,0BAA0B,IAAI,eAAe,uBAAuB;AAsB1E,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB,OAAO,OAAO,iBAAiB;AAAA,EAC/B,UAAU,OAAO,MAAM;AAAA,EACvB,UAAU,OAAO,UAAU;AAAA,EAC3B,YAAY,OAAO,SAAS;AAAA,EAC5B;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,aAAa;AAAA;AAAA,EAEb,YAAY;AAAA;AAAA,EAEZ,2BAA2B;AAAA;AAAA,EAE3B,eAAe,OAAO,UAAU,EAAE;AAAA,EAClC,YAAY,OAAO,QAAQ;AAAA,EAC3B,cAAc;AAAA,EAAC;AAAA,EACf,kBAAkB;AAChB,UAAM,cAAc,KAAK,QAAQ,UAAU,KAAK,aAAa;AAG7D,QAAI,CAAC,aAAa;AAChB;AAAA,IACF;AACA,SAAK,QAAQ,SAAS;AACtB,SAAK,eAAe;AACpB,SAAK,iBAAiB,KAAK,aAAa;AAGxC,SAAK,QAAQ,kBAAkB,MAAM;AACnC,YAAM,QAAQ,KAAK;AACnB,YAAM,WAAW,KAAK;AACtB,WAAK,oBAAoB,CAAC,SAAS,OAAO,OAAO,eAAe,KAAK,cAAc,GAAG,SAAS,OAAO,OAAO,eAAe,KAAK,YAAY,GAAG,SAAS,OAAO,OAAO,aAAa,KAAK,UAAU,GAAG,SAAS,OAAO,OAAO,gBAAgB,KAAK,aAAa,GAAG,SAAS,OAAO,OAAO,SAAS,KAAK,QAAQ,GAAG,SAAS,OAAO,OAAO,QAAQ,KAAK,OAAO,CAAC;AAAA,IAChW,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,mBAAmB,QAAQ,aAAW,QAAQ,CAAC;AAAA,EACtD;AAAA,EACA,iBAAiB,WAAS;AACxB,QAAI,KAAK,aAAa,YAAY;AAChC;AAAA,IACF;AACA,UAAM,OAAO,KAAK,aAAa,sBAAsB;AACrD,UAAM,YAAY,KAAK,QAAQ,uBAAuB,OAAO,IAAI;AACjE,SAAK,aAAa;AAClB,QAAI,WAAW;AACb,WAAK,iBAAiB;AAAA,IACxB,OAAO;AACL,WAAK,YAAY,KAAK,eAAe;AAAA,IACvC;AAAA,EACF;AAAA,EACA,gBAAgB,MAAM;AACpB,SAAK,aAAa;AAClB,SAAK,YAAY,KAAK,eAAe;AAAA,EACvC;AAAA,EACA,WAAW,MAAM;AAGf,SAAK,YAAY,KAAK,eAAe;AACrC,SAAK,iBAAiB;AACtB,SAAK,aAAa,UAAU,IAAI,4BAA4B;AAAA,EAC9D;AAAA,EACA,UAAU,MAAM;AAEd,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,YAAY,KAAK,eAAe;AAAA,IACvC;AAEA,QAAI,KAAK,YAAY;AACnB,WAAK,iBAAiB;AAAA,IACxB;AACA,SAAK,aAAa,UAAU,OAAO,4BAA4B;AAAA,EACjE;AAAA,EACA,eAAe,WAAS;AACtB,QAAI,MAAM,WAAW,GAAG;AACtB;AAAA,IACF;AACA,SAAK,YAAY;AACjB,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,aAAa,MAAM;AACjB,SAAK,YAAY;AACjB,SAAK,YAAY,KAAK,gBAAgB;AAEtC,QAAI,CAAC,KAAK,aAAa,YAAY;AACjC,WAAK,YAAY,KAAK,eAAe;AAAA,IACvC;AAGA,QAAI,KAAK,UAAU,QAAQ;AACzB,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAAA;AAAA,EAEA,mBAAmB;AACjB,QAAI,CAAC,KAAK,iBAAiB,KAAK,eAAe,GAAG;AAChD,WAAK,kBAAkB,KAAK,YAAY;AAAA,QACtC,eAAe;AAAA,QACf,cAAc;AAAA,MAChB,CAAC;AACD,WAAK,iBAAiB,QAAQ,UAAU,IAAI,6BAA6B;AAAA,IAC3E;AAAA,EACF;AAAA;AAAA,EAEA,mBAAmB;AAEjB,QAAI,CAAC,KAAK,iBAAiB,KAAK,eAAe,GAAG;AAChD,WAAK,kBAAkB,KAAK,YAAY;AAAA,QACtC,eAAe;AAAA,QACf,cAAc;AAAA,MAChB,GAAG,IAAI;AACP,WAAK,iBAAiB,QAAQ,UAAU,IAAI,6BAA6B;AAAA,IAC3E;AAAA,EACF;AAAA;AAAA,EAEA,oBAAoB;AAClB,QAAI,CAAC,KAAK,iBAAiB,KAAK,gBAAgB,GAAG;AACjD,WAAK,mBAAmB,KAAK,YAAY;AAAA,QACvC,eAAe;AAAA,QACf,cAAc;AAAA,MAChB,CAAC;AACD,WAAK,kBAAkB,QAAQ,UAAU,IAAI,8BAA8B;AAAA,IAC7E;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB,WAAW;AAC1B,WAAO,WAAW,UAAU,YAAY,aAAa,WAAW,UAAU,YAAY;AAAA,EACxF;AAAA;AAAA,EAEA,YAAY,WAAW,0BAA0B;AAC/C,QAAI,KAAK,QAAQ,UAAU;AACzB;AAAA,IACF;AACA,SAAK,oBAAoB;AACzB,QAAI,KAAK,QAAQ,UAAU;AACzB,YAAM,UAAU,KAAK,QAAQ,UAAU,KAAK,kBAAkB,UAAU,QAAQ,UAAU,MAAM,UAAU,KAAK;AAC/G,cAAQ,oBAAoB;AAAA,IAC9B;AACA,QAAI,KAAK,QAAQ,sBAAsB,YAAY,CAAC,0BAA0B;AAC5E;AAAA,IACF;AACA,WAAO,KAAK,QAAQ,OAAO;AAAA,MACzB,WAAW,KAAK,QAAQ,kBAAkB;AAAA,QACxC,eAAe;AAAA,QACf,cAAc;AAAA,MAChB,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,WAAW;AACrB,eAAW,QAAQ;AACnB,QAAI,KAAK,oBAAoB,GAAG;AAC9B;AAAA,IACF;AACA,QAAI,CAAC,KAAK,QAAQ,UAAU;AAC1B,WAAK,oBAAoB;AAAA,IAC3B;AACA,UAAM,UAAU,KAAK,YAAY;AACjC,QAAI,CAAC,QAAQ,oBAAoB,GAAG;AAClC,WAAK,oBAAoB;AACzB,cAAQ,oBAAoB;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA,EAEA,sBAAsB;AACpB,SAAK,aAAa,UAAU,IAAI,mCAAmC;AAAA,EACrE;AAAA;AAAA,EAEA,sBAAsB;AACpB,SAAK,aAAa,UAAU,OAAO,mCAAmC;AAAA,EACxE;AAAA,EACA,cAAc;AACZ,WAAO,KAAK,QAAQ,UAAU,KAAK,kBAAkB,UAAU,QAAQ,UAAU,MAAM,UAAU,KAAK;AAAA,EACxG;AAAA;AAAA,EAEA,8BAA8B;AAC5B,WAAO,KAAK,0BAA0B;AAAA,EACxC;AAAA;AAAA,EAEA,WAAW;AACT,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EACA,sBAAsB;AACpB,WAAO,KAAK,iBAAiB,KAAK,eAAe,KAAK,KAAK,iBAAiB,KAAK,eAAe,KAAK,KAAK,iBAAiB,KAAK,gBAAgB;AAAA,EAClJ;AAAA,EACA,OAAO,YAAO,SAAS,6BAA6B,mBAAmB;AACrE,WAAO,KAAK,qBAAqB,uBAAsB;AAAA,EACzD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,yBAAyB,CAAC;AAAA,IACvC,WAAW,SAAS,2BAA2B,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,WAAW,CAAC;AAC3B,QAAG,sBAAYC,MAAK,CAAC;AACrB,QAAG,sBAAYC,MAAK,CAAC;AAAA,MACvB;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,UAAU,GAAG;AAC9D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,QAAQ,GAAG;AAC5D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,2BAA2B,GAAG;AAAA,MACjF;AAAA,IACF;AAAA,IACA,WAAW,CAAC,GAAG,qBAAqB,6BAA6B;AAAA,IACjE,QAAQ;AAAA,MACN,UAAU;AAAA,MACV,eAAe;AAAA,MACf,oBAAoB;AAAA,IACtB;AAAA,IACA,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,CAAC;AAAA,IACH,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,2BAA2B,EAAE,GAAG,CAAC,GAAG,uCAAuC,GAAG,CAAC,GAAG,wBAAwB,GAAG,CAAC,aAAa,IAAI,GAAG,uBAAuB,GAAG,mBAAmB,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,GAAG,kCAAkC,CAAC;AAAA,IACrR,UAAU,SAAS,8BAA8B,IAAI,KAAK;AACxD,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,GAAG,6CAA6C,GAAG,GAAG,OAAO,CAAC;AAC5E,QAAG,oBAAU,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC;AAAA,MAC1C;AACA,UAAI,KAAK,GAAG;AACV,QAAG,wBAAc,IAAI,WAAW,IAAI,EAAE;AACtC,QAAG,oBAAU,CAAC;AACd,QAAG,qBAAW,qBAAqB,IAAI;AAAA,MACzC;AAAA,IACF;AAAA,IACA,cAAc,CAAC,SAAS;AAAA,IACxB,QAAQ,CAAC,6SAA6S;AAAA,IACtT,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,sBAAsB,CAAC;AAAA,IAC7F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,MACX;AAAA,MACA,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,SAAS,CAAC,SAAS;AAAA,MACnB,UAAU;AAAA,MACV,QAAQ,CAAC,6SAA6S;AAAA,IACxT,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,IAClB,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC,MAAM;AAAA,IACf,CAAC;AAAA,IACD,0BAA0B,CAAC;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,CAAC,yBAAyB;AAAA,IAClC,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAUH,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,UAAU,OAAO,MAAM;AAAA,EACvB,OAAO,OAAO,iBAAiB;AAAA,EAC/B,cAAc,OAAO,UAAU;AAAA,EAC/B,OAAO,OAAO,gBAAgB;AAAA,IAC5B,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,uBAAuB,OAAO,2BAA2B;AAAA,IACvD,UAAU;AAAA,EACZ,CAAC;AAAA;AAAA,EAED;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,SAAS,GAAG;AACd,SAAK,YAAY;AACjB,UAAM,WAAW,KAAK,UAAU,UAAU,GAAG;AAC7C,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,QAAI,UAAU;AACZ,eAAS,WAAW,KAAK;AAAA,IAC3B;AACA,QAAI,YAAY;AACd,iBAAW,WAAW,KAAK;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,YAAY;AAAA;AAAA,EAEZ,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,SAAS,GAAG;AACd,SAAK,YAAY;AACjB,SAAK,yBAAyB;AAAA,EAChC;AAAA,EACA,YAAY;AAAA;AAAA,EAEZ,gBAAgB;AAAA;AAAA,EAEhB,IAAI,MAAM;AACR,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,IAAI,GAAG;AACT,UAAM,MAAM,MAAM,CAAC,IAAI,KAAK,OAAO;AACnC,QAAI,KAAK,SAAS,KAAK;AACrB,WAAK,WAAW,GAAG;AAAA,IACrB;AAAA,EACF;AAAA,EACA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQP;AAAA;AAAA,EAEA,gBAAgB;AAAA,EAChB,WAAW,KAAK;AACd,UAAM,UAAU,KAAK;AACrB,SAAK,OAAO;AACZ,SAAK,WAAW,KAAK,gBAAgB;AAAA,MACnC,KAAK;AAAA,MACL,KAAK;AAAA,IACP,CAAC,IAAI,KAAK,mBAAmB,GAAG;AAChC,SAAK,sBAAsB;AAAA,EAC7B;AAAA,EACA,gBAAgB,KAAK;AACnB,UAAM,WAAW,KAAK,UAAU,UAAU,GAAG;AAC7C,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,UAAM,cAAc,SAAS;AAC7B,UAAM,gBAAgB,WAAW;AACjC,eAAW,MAAM,IAAI;AACrB,aAAS,MAAM,KAAK,IAAI,IAAI,KAAK,WAAW,KAAK;AACjD,eAAW,MAAM,KAAK,IAAI,SAAS,KAAK,SAAS,KAAK;AACtD,eAAW,qBAAqB;AAChC,aAAS,qBAAqB;AAC9B,QAAI,MAAM,IAAI,MAAM,KAAK,gCAAgC,UAAU,UAAU,IAAI,KAAK,gCAAgC,YAAY,QAAQ;AAC1I,QAAI,gBAAgB,SAAS,OAAO;AAClC,WAAK,eAAe,QAAQ;AAAA,IAC9B;AACA,QAAI,kBAAkB,WAAW,OAAO;AACtC,WAAK,eAAe,UAAU;AAAA,IAChC;AAAA,EACF;AAAA,EACA,mBAAmB,KAAK;AACtB,UAAM,QAAQ,KAAK,UAAU,UAAU,GAAG;AAC1C,QAAI,OAAO;AACT,YAAM,WAAW,MAAM;AACvB,YAAM,MAAM;AACZ,YAAM,sBAAsB;AAC5B,WAAK,eAAe,KAAK;AACzB,UAAI,aAAa,MAAM,OAAO;AAC5B,aAAK,eAAe,KAAK;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,IAAI,MAAM;AACR,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,IAAI,GAAG;AACT,UAAM,MAAM,MAAM,CAAC,IAAI,KAAK,OAAO;AACnC,QAAI,KAAK,SAAS,KAAK;AACrB,WAAK,WAAW,GAAG;AAAA,IACrB;AAAA,EACF;AAAA,EACA,OAAO;AAAA,EACP,WAAW,KAAK;AACd,UAAM,UAAU,KAAK;AACrB,SAAK,OAAO;AACZ,SAAK,WAAW,KAAK,gBAAgB;AAAA,MACnC,KAAK;AAAA,MACL,KAAK;AAAA,IACP,CAAC,IAAI,KAAK,mBAAmB,GAAG;AAChC,SAAK,sBAAsB;AAAA,EAC7B;AAAA,EACA,gBAAgB,KAAK;AACnB,UAAM,WAAW,KAAK,UAAU,UAAU,GAAG;AAC7C,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,UAAM,cAAc,SAAS;AAC7B,UAAM,gBAAgB,WAAW;AACjC,aAAS,MAAM,IAAI;AACnB,eAAW,MAAM,KAAK,IAAI,IAAI,KAAK,SAAS,KAAK;AACjD,aAAS,MAAM,WAAW;AAC1B,aAAS,qBAAqB;AAC9B,eAAW,qBAAqB;AAChC,QAAI,MAAM,IAAI,MAAM,KAAK,gCAAgC,YAAY,QAAQ,IAAI,KAAK,gCAAgC,UAAU,UAAU;AAC1I,QAAI,gBAAgB,SAAS,OAAO;AAClC,WAAK,eAAe,QAAQ;AAAA,IAC9B;AACA,QAAI,kBAAkB,WAAW,OAAO;AACtC,WAAK,eAAe,UAAU;AAAA,IAChC;AAAA,EACF;AAAA,EACA,mBAAmB,KAAK;AACtB,UAAM,QAAQ,KAAK,UAAU,UAAU,GAAG;AAC1C,QAAI,OAAO;AACT,YAAM,WAAW,MAAM;AACvB,YAAM,MAAM;AACZ,YAAM,sBAAsB;AAC5B,WAAK,eAAe,KAAK;AACzB,UAAI,aAAa,MAAM,OAAO;AAC5B,aAAK,eAAe,KAAK;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,KAAK,GAAG;AACV,UAAM,OAAO,MAAM,CAAC,IAAI,KAAK,QAAQ;AACrC,QAAI,KAAK,UAAU,MAAM;AACvB,WAAK,YAAY,IAAI;AAAA,IACvB;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,EACR,YAAY,MAAM;AAChB,SAAK,QAAQ;AACb,SAAK,WAAW,KAAK,iBAAiB,IAAI,KAAK,oBAAoB;AACnE,SAAK,sBAAsB;AAAA,EAC7B;AAAA,EACA,mBAAmB;AACjB,UAAM,WAAW,KAAK,UAAU,UAAU,GAAG;AAC7C,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,UAAM,cAAc,SAAS;AAC7B,UAAM,gBAAgB,WAAW;AACjC,UAAM,iBAAiB,WAAW;AAClC,aAAS,MAAM,KAAK;AACpB,eAAW,MAAM,KAAK;AACtB,aAAS,OAAO,KAAK;AACrB,eAAW,OAAO,KAAK;AACvB,QAAI,KAAK,UAAU,QAAQ;AACzB,eAAS,QAAQ,SAAS;AAC1B,iBAAW,QAAQ,WAAW;AAAA,IAChC;AACA,aAAS,MAAM,KAAK,IAAI,KAAK,MAAM,WAAW,KAAK;AACnD,eAAW,MAAM,KAAK,IAAI,KAAK,MAAM,SAAS,KAAK;AACnD,eAAW,qBAAqB;AAChC,aAAS,qBAAqB;AAC9B,aAAS,QAAQ,iBAAiB,KAAK,gCAAgC,YAAY,QAAQ,IAAI,KAAK,gCAAgC,UAAU,UAAU;AACxJ,QAAI,gBAAgB,SAAS,OAAO;AAClC,WAAK,eAAe,QAAQ;AAAA,IAC9B;AACA,QAAI,kBAAkB,WAAW,OAAO;AACtC,WAAK,eAAe,UAAU;AAAA,IAChC;AAAA,EACF;AAAA,EACA,sBAAsB;AACpB,UAAM,QAAQ,KAAK,UAAU,UAAU,GAAG;AAC1C,QAAI,OAAO;AACT,YAAM,WAAW,MAAM;AACvB,YAAM,OAAO,KAAK;AAClB,UAAI,KAAK,UAAU,QAAQ;AACzB,cAAM,QAAQ,MAAM;AAAA,MACtB;AACA,YAAM,sBAAsB;AAC5B,UAAI,aAAa,MAAM,OAAO;AAC5B,aAAK,eAAe,KAAK;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc,WAAS,GAAG,KAAK;AAAA;AAAA,EAE/B;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA;AAAA;AAAA,EAGhB,0BAA0B;AAAA;AAAA,EAE1B,wBAAwB;AAAA;AAAA,EAExB;AAAA,EACA;AAAA,EACA,WAAW;AAAA;AAAA,EAEX,SAAS;AAAA,EACT,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,sBAAsB;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,YAAY,OAAO,QAAQ;AAAA,EAC3B,cAAc;AACZ,WAAO,sBAAsB,EAAE,KAAK,uBAAuB;AAC3D,UAAM,gBAAgB,OAAO,uBAAuB;AAAA,MAClD,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,kBAAkB,kBAAkB;AACzC,QAAI,KAAK,MAAM;AACb,WAAK,yBAAyB,KAAK,KAAK,OAAO,UAAU,MAAM,KAAK,aAAa,CAAC;AAClF,WAAK,SAAS,KAAK,KAAK,UAAU;AAAA,IACpC;AAAA,EACF;AAAA;AAAA,EAEA,cAAc;AAAA,EACd;AAAA,EACA,kBAAkB;AAChB,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,kBAAkB;AAAA,IACzB;AACA,UAAM,SAAS,KAAK,UAAU,UAAU,GAAG;AAC3C,UAAM,SAAS,KAAK,UAAU,UAAU,KAAK;AAC7C,SAAK,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC;AAC9B,SAAK,KAAK,cAAc;AACxB,QAAI,OAAO,cAAc,eAAe,WAAW;AACjD,sBAAgB,KAAK,UAAU,KAAK,UAAU,UAAU,GAAG,GAAG,KAAK,UAAU,UAAU,KAAK,CAAC;AAAA,IAC/F;AACA,UAAM,QAAQ,KAAK,UAAU,UAAU,GAAG;AAC1C,SAAK,gBAAgB,MAAM,QAAQ;AACnC,SAAK,gBAAgB,KAAK,gBAAgB,KAAK;AAC/C,SAAK,WAAW,KAAK,aAAa,QAAQ,MAAM,IAAI,KAAK,gBAAgB,MAAM;AAC/E,SAAK,eAAe,MAAM;AAC1B,SAAK,kBAAkB;AACvB,SAAK,uBAAuB;AAC5B,SAAK,mBAAmB;AACxB,SAAK,KAAK,cAAc;AAAA,EAC1B;AAAA,EACA,gBAAgB,QAAQ;AACtB,WAAO,UAAU;AACjB,WAAO,OAAO;AACd,SAAK,wBAAwB,MAAM;AACnC,SAAK,sBAAsB;AAC3B,WAAO,sBAAsB;AAAA,EAC/B;AAAA,EACA,aAAa,QAAQ,QAAQ;AAC3B,WAAO,UAAU;AACjB,WAAO,OAAO;AACd,WAAO,UAAU;AACjB,WAAO,OAAO;AACd,WAAO,cAAc;AACrB,WAAO,cAAc;AACrB,WAAO,oBAAoB;AAC3B,WAAO,oBAAoB;AAC3B,SAAK,yBAAyB;AAC9B,SAAK,sBAAsB;AAC3B,WAAO,sBAAsB;AAC7B,WAAO,sBAAsB;AAAA,EAC/B;AAAA,EACA,cAAc;AACZ,SAAK,uBAAuB,YAAY;AACxC,SAAK,iBAAiB,WAAW;AACjC,SAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA,EAEA,eAAe;AACb,SAAK,SAAS,KAAK,MAAM,UAAU;AACnC,SAAK,WAAW,KAAK,kBAAkB,IAAI,KAAK,qBAAqB;AACrE,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,oBAAoB;AAClB,UAAM,WAAW,KAAK,UAAU,UAAU,GAAG;AAC7C,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,aAAS,gBAAgB;AACzB,eAAW,gBAAgB;AAC3B,aAAS,aAAa,SAAS,uBAAuB;AACtD,eAAW,aAAa,WAAW,uBAAuB;AAC1D,aAAS,oBAAoB;AAC7B,eAAW,oBAAoB;AAC/B,aAAS,qBAAqB;AAC9B,eAAW,qBAAqB;AAChC,aAAS,sBAAsB;AAC/B,eAAW,sBAAsB;AAAA,EACnC;AAAA,EACA,uBAAuB;AACrB,UAAM,QAAQ,KAAK,UAAU,UAAU,GAAG;AAC1C,UAAM,sBAAsB;AAAA,EAC9B;AAAA;AAAA,EAEA,qBAAqB;AACnB,QAAI,OAAO,mBAAmB,eAAe,CAAC,gBAAgB;AAC5D;AAAA,IACF;AACA,SAAK,QAAQ,kBAAkB,MAAM;AACnC,WAAK,kBAAkB,IAAI,eAAe,MAAM;AAC9C,YAAI,KAAK,UAAU,GAAG;AACpB;AAAA,QACF;AACA,YAAI,KAAK,cAAc;AACrB,uBAAa,KAAK,YAAY;AAAA,QAChC;AACA,aAAK,UAAU;AAAA,MACjB,CAAC;AACD,WAAK,gBAAgB,QAAQ,KAAK,YAAY,aAAa;AAAA,IAC7D,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,YAAY;AACV,WAAO,KAAK,UAAU,UAAU,KAAK,EAAE,aAAa,KAAK,UAAU,UAAU,GAAG,EAAE;AAAA,EACpF;AAAA,EACA,UAAU,gBAAgB,UAAU,KAAK;AACvC,UAAM,QAAQ,KAAK,UAAU,aAAa;AAC1C,QAAI,CAAC,OAAO;AACV,aAAO,KAAK;AAAA,IACd;AACA,WAAO,MAAM;AAAA,EACf;AAAA,EACA,cAAc;AACZ,WAAO,CAAC,EAAE,KAAK,UAAU,UAAU,KAAK,GAAG,iBAAiB,KAAK,UAAU,UAAU,GAAG,GAAG;AAAA,EAC7F;AAAA;AAAA,EAEA,oBAAoB;AAClB,SAAK,eAAe,KAAK,YAAY,cAAc;AACnD,SAAK,cAAc,KAAK,YAAY,cAAc,sBAAsB,EAAE;AAAA,EAC5E;AAAA;AAAA,EAEA,sBAAsB,QAAQ;AAC5B,UAAM,aAAa,KAAK,aAAa,cAAc;AACnD,eAAW,OAAO,OAAO;AACzB,eAAW,QAAQ,OAAO;AAC1B,eAAW,kBAAkB,OAAO;AACpC,eAAW,YAAY,OAAO;AAAA,EAChC;AAAA;AAAA,EAEA,uBAAuB,OAAO;AAE5B,UAAM,SAAS,SAAS,KAAK,uBAAuB,KAAK,WAAW,SAAS;AAC7E,UAAM,aAAa,KAAK,SAAS,KAAK,eAAe,IAAI,SAAS;AAClE,WAAO,cAAc,UAAU;AAAA,EACjC;AAAA;AAAA,EAEA,oBAAoB,QAAQ;AAC1B,QAAI,CAAC,KAAK,qBAAqB;AAC7B;AAAA,IACF;AACA,SAAK,eAAe,MAAM;AAC1B,SAAK,eAAe,MAAM;AAC1B,SAAK,0BAA0B,MAAM;AAAA,EACvC;AAAA,EACA,gCAAgC,QAAQ,QAAQ;AAC9C,QAAI,CAAC,KAAK,qBAAqB;AAC7B;AAAA,IACF;AACA,WAAO,sBAAsB;AAC7B,WAAO,sBAAsB;AAAA,EAC/B;AAAA,EACA,eAAe,QAAQ;AACrB,QAAI,CAAC,KAAK,qBAAqB;AAC7B;AAAA,IACF;AACA,SAAK,wBAAwB,MAAM;AACnC,SAAK,kBAAkB;AACvB,SAAK,KAAK,cAAc;AAAA,EAC1B;AAAA,EACA,wBAAwB;AACtB,QAAI,CAAC,KAAK,qBAAqB;AAC7B;AAAA,IACF;AACA,SAAK,kBAAkB;AACvB,SAAK,uBAAuB;AAC5B,SAAK,KAAK,aAAa;AAAA,EACzB;AAAA,EACA,YAAY;AACV,QAAI,CAAC,KAAK,qBAAqB;AAC7B;AAAA,IACF;AACA,SAAK,kBAAkB;AACvB,QAAI,KAAK,UAAU;AACjB,YAAM,SAAS,KAAK,UAAU,UAAU,GAAG;AAC3C,YAAM,SAAS,KAAK,UAAU,UAAU,KAAK;AAC7C,aAAO,sBAAsB;AAC7B,aAAO,sBAAsB;AAC7B,aAAO,oBAAoB;AAC3B,aAAO,oBAAoB;AAC3B,aAAO,cAAc;AACrB,aAAO,cAAc;AACrB,aAAO,qBAAqB;AAC5B,aAAO,qBAAqB;AAAA,IAC9B,OAAO;AACL,YAAM,SAAS,KAAK,UAAU,UAAU,GAAG;AAC3C,UAAI,QAAQ;AACV,eAAO,sBAAsB;AAAA,MAC/B;AAAA,IACF;AACA,SAAK,kBAAkB;AACvB,SAAK,uBAAuB;AAC5B,SAAK,KAAK,cAAc;AAAA,EAC1B;AAAA;AAAA,EAEA,iBAAiB;AAAA;AAAA,EAEjB,wBAAwB;AACtB,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,UAAM,WAAW,KAAK,UAAU,UAAU,GAAG;AAC7C,QAAI,CAAC,cAAc,CAAC,UAAU;AAC5B,aAAO;AAAA,IACT;AACA,WAAO,SAAS,aAAa,WAAW,aAAa;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kCAAkC,QAAQ;AACxC,UAAM,UAAU,OAAO,WAAW;AAClC,UAAM,cAAc,KAAK,UAAU,OAAO,aAAa;AACvD,UAAM,eAAe,KAAK,UAAU,QAAQ,aAAa;AACzD,iBAAa,aAAa,UAAU,OAAO,wBAAwB;AACnE,gBAAY,aAAa,UAAU,OAAO,0BAA0B,KAAK,cAAc;AAAA,EACzF;AAAA;AAAA,EAEA,0BAA0B,QAAQ;AAChC,QAAI,CAAC,KAAK,YAAY,KAAK,YAAY,GAAG;AACxC;AAAA,IACF;AACA,QAAI,KAAK,mBAAmB,KAAK,sBAAsB,GAAG;AACxD,WAAK,iBAAiB,CAAC,KAAK;AAC5B,WAAK,kCAAkC,MAAM;AAAA,IAC/C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,eAAe,QAAQ;AACrB,QAAI,KAAK,YAAY,GAAG;AACtB;AAAA,IACF;AACA,UAAM,QAAQ,KAAK,UAAU,OAAO,kBAAkB,UAAU,MAAM,UAAU,MAAM,UAAU,KAAK;AACrG,UAAM,aAAa,MAAM,YAAY,cAAc,OAAO,UAAU;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,wBAAwB,QAAQ;AAC9B,QAAI,KAAK,YAAY,GAAG;AACtB;AAAA,IACF;AACA,UAAM,YAAY,KAAK,YAAY,OAAO,KAAK;AAC/C,SAAK,sBAAsB,OAAO,WAAW,IAAI,SAAS,IAAI,OAAO,aAAa,aAAa,kBAAkB,SAAS;AAC1H,QAAI,KAAK,UAAU;AACjB,aAAO,kBAAkB,UAAU,QAAQ,KAAK,0BAA0B,YAAY,KAAK,wBAAwB;AACnH,YAAM,cAAc,KAAK,UAAU,OAAO,aAAa;AACvD,gBAAU,SAAS,IAAI,YAAY,aAAa,UAAU,IAAI,gCAAgC,IAAI,YAAY,aAAa,UAAU,OAAO,gCAAgC;AAAA,IAC9K;AAAA,EACF;AAAA;AAAA,EAEA,2BAA2B;AACzB,UAAM,SAAS,KAAK,UAAU,UAAU,GAAG;AAC3C,UAAM,SAAS,KAAK,UAAU,UAAU,KAAK;AAC7C,QAAI,QAAQ;AACV,WAAK,wBAAwB,MAAM;AAAA,IACrC;AACA,QAAI,QAAQ;AACV,WAAK,wBAAwB,MAAM;AAAA,IACrC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,yBAAyB;AACvB,QAAI,CAAC,KAAK,iBAAiB,KAAK,YAAY,GAAG;AAC7C;AAAA,IACF;AACA,UAAM,OAAO,KAAK,SAAS,KAAK,QAAQ,IAAI,KAAK,QAAQ;AACzD,UAAM,WAAW,KAAK,MAAM,KAAK,MAAM,IAAI,IAAI;AAC/C,UAAM,cAAc,WAAW,KAAK,QAAQ,KAAK,MAAM,KAAK;AAC5D,SAAK,uBAAuB,KAAK,eAAe,KAAK;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,eAAe,QAAQ;AACrB,QAAI,KAAK,YAAY,GAAG;AACtB;AAAA,IACF;AACA,SAAK,WAAW,KAAK,oBAAoB,MAAM,IAAI,KAAK,uBAAuB,MAAM;AAAA,EACvF;AAAA,EACA,oBAAoB,QAAQ;AAC1B,UAAM,UAAU,OAAO,WAAW;AAClC,QAAI,CAAC,WAAW,CAAC,KAAK,cAAc;AAClC;AAAA,IACF;AACA,UAAM,mBAAmB,KAAK,IAAI,QAAQ,aAAa,OAAO,UAAU,IAAI,KAAK;AACjF,QAAI,OAAO,gBAAgB,KAAK,cAAc;AAC5C,WAAK,sBAAsB;AAAA,QACzB,MAAM;AAAA,QACN,OAAO,GAAG,KAAK,eAAe,QAAQ,UAAU;AAAA,QAChD,iBAAiB;AAAA,QACjB,WAAW,UAAU,gBAAgB;AAAA,MACvC,CAAC;AAAA,IACH,OAAO;AACL,WAAK,sBAAsB;AAAA,QACzB,MAAM,GAAG,QAAQ,UAAU;AAAA,QAC3B,OAAO;AAAA,QACP,iBAAiB;AAAA,QACjB,WAAW,UAAU,gBAAgB;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,uBAAuB,QAAQ;AAC7B,SAAK,SAAS,KAAK,sBAAsB;AAAA,MACvC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,WAAW,UAAU,IAAI,OAAO,cAAc;AAAA,IAChD,CAAC,IAAI,KAAK,sBAAsB;AAAA,MAC9B,MAAM;AAAA,MACN,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,WAAW,UAAU,OAAO,cAAc;AAAA,IAC5C,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,oBAAoB;AAClB,QAAI,CAAC,KAAK,iBAAiB,KAAK,SAAS,UAAa,KAAK,QAAQ,UAAa,KAAK,QAAQ,QAAW;AACtG;AAAA,IACF;AACA,UAAM,OAAO,KAAK,OAAO,IAAI,KAAK,OAAO;AACzC,SAAK,WAAW,KAAK,uBAAuB,IAAI,IAAI,KAAK,0BAA0B,IAAI;AAAA,EACzF;AAAA,EACA,0BAA0B,MAAM;AAC9B,UAAM,QAAQ,KAAK,UAAU;AAC7B,QAAI,YAAY,KAAK,IAAI,KAAK,OAAO,QAAQ,KAAK,OAAO,IAAI,GAAG,CAAC,IAAI;AACrE,QAAI,cAAc,KAAK,IAAI,KAAK,OAAO,KAAK,MAAM,SAAS,IAAI,GAAG,CAAC,IAAI;AACvE,SAAK,SAAS,cAAc;AAC5B,SAAK,aAAa,MAAM,SAAS,EAAE,KAAK,aAAa,MAAM,EAAE,OAAO,MAAM,WAAW,EAAE,KAAK,aAAa,QAAQ,CAAC;AAAA,EACpH;AAAA,EACA,uBAAuB,MAAM;AAC3B,UAAM,WAAW,KAAK,UAAU;AAChC,UAAM,aAAa,KAAK,UAAU,UAAU,KAAK;AACjD,UAAM,8BAA8B,KAAK,IAAI,KAAK,OAAO,aAAa,KAAK,OAAO,IAAI,GAAG,CAAC;AAC1F,UAAM,YAAY,KAAK,IAAI,KAAK,OAAO,WAAW,cAAc,IAAI,IAAI,GAAG,CAAC;AAC5E,UAAM,2BAA2B,KAAK,IAAI,KAAK,OAAO,KAAK,MAAM,YAAY,IAAI,GAAG,CAAC;AACrF,SAAK,aAAa,MAAM,2BAA2B,EAAE,KAAK,aAAa,QAAQ,EAAE,OAAO,MAAM,SAAS,EAAE,KAAK,aAAa,MAAM,GAAG,MAAM,wBAAwB,EAAE,KAAK,aAAa,QAAQ,CAAC;AAAA,EACjM;AAAA;AAAA,EAEA,UAAU,eAAe;AACvB,QAAI,kBAAkB,UAAU,OAAO,KAAK,QAAQ;AAClD,aAAO,KAAK;AAAA,IACd;AACA,QAAI,KAAK,SAAS,QAAQ;AACxB,aAAO,kBAAkB,UAAU,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,IAC/E;AACA;AAAA,EACF;AAAA;AAAA,EAEA,UAAU,eAAe;AACvB,WAAO,kBAAkB,UAAU,MAAM,KAAK,SAAS,OAAO,KAAK,SAAS;AAAA,EAC9E;AAAA,EACA,eAAe,eAAe;AAC5B,SAAK,gBAAgB,CAAC,KAAK,UAAU,OAAO,iBAAiB,CAAC,KAAK;AACnE,SAAK,YAAY,cAAc,UAAU,OAAO,iCAAiC,KAAK,aAAa;AAAA,EACrG;AAAA;AAAA,EAEA,uBAAuB,OAAO,MAAM;AAClC,UAAM,SAAS,KAAK,QAAQ;AAC5B,UAAM,UAAU,KAAK,IAAI;AACzB,UAAM,UAAU,KAAK,IAAI;AACzB,UAAM,KAAK,MAAM,UAAU;AAC3B,UAAM,KAAK,MAAM,UAAU;AAC3B,WAAO,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC;AAAA,EAC/D;AAAA,EACA,OAAO,YAAO,SAAS,kBAAkB,mBAAmB;AAC1D,WAAO,KAAK,qBAAqB,YAAW;AAAA,EAC9C;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,YAAY,CAAC;AAAA,IAC1B,gBAAgB,SAAS,yBAAyB,IAAI,KAAK,UAAU;AACnE,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,kBAAkB,CAAC;AAC/C,QAAG,yBAAe,UAAU,wBAAwB,CAAC;AAAA,MACvD;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,SAAS,GAAG;AAC7D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,UAAU;AAAA,MAC7D;AAAA,IACF;AAAA,IACA,WAAW,SAAS,gBAAgB,IAAI,KAAK;AAC3C,UAAI,KAAK,GAAG;AACV,QAAG,sBAAYC,MAAK,CAAC;AACrB,QAAG,sBAAY,yBAAyB,CAAC;AAAA,MAC3C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,eAAe,GAAG;AACnE,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,UAAU;AAAA,MAC7D;AAAA,IACF;AAAA,IACA,WAAW,CAAC,GAAG,kBAAkB,YAAY;AAAA,IAC7C,UAAU;AAAA,IACV,cAAc,SAAS,uBAAuB,IAAI,KAAK;AACrD,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,UAAU,IAAI,SAAS,UAAU;AAC/C,QAAG,sBAAY,qBAAqB,IAAI,QAAQ,EAAE,wBAAwB,IAAI,QAAQ,EAAE,wBAAwB,IAAI,QAAQ,EAAE,0BAA0B,IAAI,aAAa,EAAE,2BAA2B,IAAI,eAAe;AAAA,MAC3N;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,MACtD,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,MACtD,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,MACrE,KAAK,CAAC,GAAG,OAAO,OAAO,eAAe;AAAA,MACtC,OAAO;AAAA,MACP,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,gBAAgB;AAAA,MACrE,KAAK,CAAC,GAAG,OAAO,OAAO,eAAe;AAAA,MACtC,MAAM,CAAC,GAAG,QAAQ,QAAQ,eAAe;AAAA,MACzC,aAAa;AAAA,IACf;AAAA,IACA,UAAU,CAAC,WAAW;AAAA,IACtB,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,CAAC;AAAA,IACH,oBAAoBC;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,eAAe,EAAE,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,GAAG,2BAA2B,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,GAAG,wBAAwB,GAAG,CAAC,GAAG,YAAY,iBAAiB,oBAAoB,GAAG,CAAC,GAAG,SAAS,WAAW,CAAC;AAAA,IAChT,UAAU,SAAS,mBAAmB,IAAI,KAAK;AAC7C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,uBAAa,CAAC;AACjB,QAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,QAAG,oBAAU,GAAG,OAAO,CAAC;AACxB,QAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,QAAG,oBAAU,GAAG,OAAO,GAAG,CAAC;AAC3B,QAAG,uBAAa;AAChB,QAAG,qBAAW,GAAG,kCAAkC,GAAG,GAAG,OAAO,CAAC;AACjE,QAAG,uBAAa;AAChB,QAAG,qBAAW,GAAG,kCAAkC,GAAG,GAAG,2BAA2B,CAAC;AACrF,QAAG,oBAAU,GAAG,2BAA2B,CAAC;AAAA,MAC9C;AACA,UAAI,KAAK,GAAG;AACV,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,IAAI,gBAAgB,IAAI,EAAE;AAC3C,QAAG,oBAAU;AACb,QAAG,wBAAc,IAAI,WAAW,IAAI,EAAE;AACtC,QAAG,oBAAU;AACb,QAAG,qBAAW,YAAY,IAAI,QAAQ,EAAE,iBAAiB,CAAC,EAAE,sBAAsB,IAAI,qBAAqB;AAAA,MAC7G;AAAA,IACF;AAAA,IACA,cAAc,CAAC,oBAAoB;AAAA,IACnC,QAAQ,CAAC,2oSAAmpS;AAAA,IAC5pS,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,WAAW,CAAC;AAAA,IAClF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,WAAW;AAAA,QACX,6BAA6B;AAAA,QAC7B,gCAAgC;AAAA,QAChC,gCAAgC;AAAA,QAChC,kCAAkC;AAAA,QAClC,mCAAmC;AAAA,MACrC;AAAA,MACA,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,SAAS,CAAC,oBAAoB;AAAA,MAC9B,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,2oSAAmpS;AAAA,IAC9pS,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACtB,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,uBAAuB;AAAA,IAChC,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,wBAAwB;AAAA,QAC7B,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,KAAK,CAAC;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,KAAK,CAAC;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAEH,SAAS,gBAAgB,SAAS,iBAAiB,mBAAmB;AACpE,QAAM,aAAa,CAAC,WAAW,mBAAmB,aAAa,aAAa,qBAAqB;AACjG,QAAM,WAAW,iBAAiB,aAAa,aAAa,UAAU,sBAAsB,gBAAgB;AAC5G,MAAI,CAAC,cAAc,CAAC,UAAU;AAC5B,yCAAqC;AAAA,EACvC;AACF;AACA,SAAS,uCAAuC;AAC9C,QAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcV;AACJ;AAMA,IAAM,kCAAkC;AAAA,EACtC,SAAS;AAAA,EACT,aAAa,WAAW,MAAM,cAAc;AAAA,EAC5C,OAAO;AACT;AAKA,IAAM,wCAAwC;AAAA,EAC5C,SAAS;AAAA,EACT,aAAa,WAAW,MAAM,mBAAmB;AAAA,EACjD,OAAO;AACT;AASA,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,UAAU,OAAO,MAAM;AAAA,EACvB,cAAc,OAAO,UAAU;AAAA,EAC/B,OAAO,OAAO,iBAAiB;AAAA,EAC/B,UAAU,OAAO,UAAU;AAAA,EAC3B,YAAY,OAAO,QAAQ;AAAA,EAC3B;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,gBAAgB,KAAK,aAAa,OAAO,CAAC;AAAA,EACnD;AAAA,EACA,IAAI,MAAM,OAAO;AACf,YAAQ,MAAM,KAAK,IAAI,IAAI;AAC3B,UAAM,cAAc,QAAQ;AAC5B,QAAI,CAAC,KAAK,qBAAqB;AAC7B,WAAK,gBAAgB;AACrB;AAAA,IACF;AACA,QAAI,KAAK,WAAW;AAClB;AAAA,IACF;AACA,SAAK,UAAU,WAAW;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,OAAO;AACf,SAAK,aAAa,QAAQ;AAC1B,SAAK,sBAAsB;AAC3B,SAAK,QAAQ,eAAe,IAAI;AAChC,SAAK,KAAK,cAAc;AACxB,SAAK,QAAQ,KAAK,aAAa;AAAA,EACjC;AAAA;AAAA,EAEA,cAAc,IAAI,aAAa;AAAA;AAAA,EAE/B,YAAY,IAAI,aAAa;AAAA;AAAA,EAE7B,UAAU,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3B,IAAI,aAAa;AACf,QAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK;AACxC,WAAK,cAAc,KAAK;AACxB,aAAO,KAAK;AAAA,IACd;AACA,QAAI,KAAK,gBAAgB,QAAW;AAClC,WAAK,cAAc,KAAK,uBAAuB;AAAA,IACjD;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,WAAW,GAAG;AAChB,SAAK,cAAc;AAAA,EACrB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,UAAU;AAAA;AAAA,EAE1B,IAAI,MAAM;AACR,WAAO,gBAAgB,KAAK,aAAa,KAAK,CAAC;AAAA,EACjD;AAAA,EACA,IAAI,IAAI,GAAG;AACT,SAAK,aAAa,MAAM,IAAI;AAC5B,SAAK,KAAK,cAAc;AAAA,EAC1B;AAAA;AAAA,EAEA,IAAI,MAAM;AACR,WAAO,gBAAgB,KAAK,aAAa,KAAK,CAAC;AAAA,EACjD;AAAA,EACA,IAAI,IAAI,GAAG;AACT,SAAK,aAAa,MAAM,IAAI;AAC5B,SAAK,KAAK,cAAc;AAAA,EAC1B;AAAA,EACA,IAAI,OAAO;AACT,WAAO,gBAAgB,KAAK,aAAa,MAAM,CAAC;AAAA,EAClD;AAAA,EACA,IAAI,KAAK,GAAG;AACV,SAAK,aAAa,OAAO,IAAI;AAC7B,SAAK,KAAK,cAAc;AAAA,EAC1B;AAAA;AAAA,EAEA,IAAI,WAAW;AACb,WAAO,iBAAiB,KAAK,aAAa,QAAQ;AAAA,EACpD;AAAA,EACA,IAAI,SAAS,GAAG;AACd,SAAK,aAAa,WAAW;AAC7B,SAAK,KAAK,cAAc;AACxB,QAAI,KAAK,QAAQ,aAAa,KAAK,UAAU;AAC3C,WAAK,QAAQ,WAAW,KAAK;AAAA,IAC/B;AAAA,EACF;AAAA;AAAA,EAEA,IAAI,aAAa;AACf,QAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK;AACxC,aAAO,KAAK,QAAQ,SAAS,IAAI;AAAA,IACnC;AACA,YAAQ,KAAK,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ,MAAM,KAAK,QAAQ;AAAA,EAC5E;AAAA;AAAA,EAEA,IAAI,iBAAiB;AACnB,QAAI,CAAC,KAAK,QAAQ,cAAc;AAC9B,aAAO,KAAK,QAAQ,SAAS,IAAI;AAAA,IACnC;AACA,QAAI,KAAK,gBAAgB,GAAG;AAC1B,aAAO;AAAA,IACT;AACA,WAAO,KAAK,aAAa,KAAK,QAAQ;AAAA,EACxC;AAAA;AAAA,EAEA,eAAe,KAAK,YAAY;AAAA;AAAA,EAEhC,aAAa,OAAO,EAAE;AAAA;AAAA,EAEtB,cAAc;AAAA;AAAA,EAEd,kBAAkB;AAAA;AAAA,EAElB,YAAY;AAAA;AAAA,EAEZ,aAAa;AAAA;AAAA,EAEb,cAAc,GAAG;AACf,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,sBAAsB;AAAA;AAAA,EAEtB;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,aAAa,IAAI,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOzB,gBAAgB;AAAA;AAAA,EAEhB;AAAA;AAAA,EAEA,eAAe,MAAM;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAStB,wBAAwB;AAAA,EACxB,cAAc;AACZ,UAAM,WAAW,OAAO,SAAS;AACjC,SAAK,QAAQ,kBAAkB,MAAM;AACnC,WAAK,oBAAoB,CAAC,SAAS,OAAO,KAAK,cAAc,eAAe,KAAK,eAAe,KAAK,IAAI,CAAC,GAAG,SAAS,OAAO,KAAK,cAAc,eAAe,KAAK,eAAe,KAAK,IAAI,CAAC,GAAG,SAAS,OAAO,KAAK,cAAc,aAAa,KAAK,aAAa,KAAK,IAAI,CAAC,CAAC;AAAA,IAC/Q,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,kBAAkB,QAAQ,aAAW,QAAQ,CAAC;AACnD,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AACzB,SAAK,UAAU,SAAS;AACxB,SAAK,QAAQ,SAAS;AAAA,EACxB;AAAA;AAAA,EAEA,YAAY;AACV,SAAK,qBAAqB;AAE1B,QAAI,KAAK,aAAa,KAAK,QAAQ,UAAU;AAE3C,WAAK,QAAQ,WAAW;AAAA,IAC1B;AACA,SAAK,OAAO,KAAK,QAAQ;AACzB,SAAK,MAAM,KAAK,QAAQ;AACxB,SAAK,MAAM,KAAK,QAAQ;AACxB,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA,EAEA,SAAS;AACP,SAAK,sBAAsB;AAAA,EAC7B;AAAA,EACA,aAAa;AACX,SAAK,sBAAsB;AAC3B,QAAI,KAAK,kBAAkB,QAAW;AACpC,WAAK,QAAQ,KAAK,iBAAiB;AAAA,IACrC,OAAO;AACL,WAAK,aAAa,QAAQ,KAAK;AAC/B,WAAK,sBAAsB;AAC3B,WAAK,QAAQ,eAAe,IAAI;AAChC,WAAK,KAAK,cAAc;AAAA,IAC1B;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,UAAU;AACR,SAAK,cAAc,KAAK;AACxB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,WAAW;AACT,SAAK,QAAQ,eAAe,KAAK;AACjC,SAAK,QAAQ,eAAe,IAAI;AAChC,SAAK,cAAc,IAAI;AAAA,EACzB;AAAA,EACA,YAAY;AACV,SAAK,YAAY,KAAK,KAAK,KAAK;AAGhC,QAAI,KAAK,WAAW;AAClB,WAAK,sBAAsB;AAAA,QACzB,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,WAAW;AACT,SAAK,cAAc,KAAK,KAAK;AAG7B,QAAI,KAAK,QAAQ,QAAQ,CAAC,KAAK,WAAW;AACxC,WAAK,sBAAsB;AAAA,QACzB,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AACA,SAAK,QAAQ,eAAe,IAAI;AAAA,EAClC;AAAA,EACA,0BAA0B;AAGxB,QAAI,CAAC,KAAK,aAAa,CAAC,KAAK,YAAY;AACvC,WAAK,QAAQ,eAAe,IAAI;AAChC,WAAK,sBAAsB;AAAA,IAC7B;AACA,SAAK,QAAQ,WAAW,KAAK,aAAa;AAAA,EAC5C;AAAA,EACA,eAAe,OAAO;AACpB,QAAI,KAAK,YAAY,MAAM,WAAW,GAAG;AACvC;AAAA,IACF;AAGA,QAAI,KAAK,UAAU,KAAK;AACtB,YAAM,wBAAwB,KAAK,QAAQ,uBAAuB,OAAO,KAAK,QAAQ,UAAU,KAAK,aAAa,EAAE,aAAa,sBAAsB,CAAC;AACxJ,WAAK,YAAY;AACjB,WAAK,mBAAmB;AACxB,WAAK,QAAQ,kBAAkB;AAC/B;AAAA,IACF;AACA,SAAK,YAAY;AACjB,SAAK,cAAc,IAAI;AACvB,SAAK,mBAAmB;AACxB,SAAK,QAAQ,kBAAkB;AAG/B,QAAI,CAAC,KAAK,QAAQ,MAAM;AACtB,WAAK,6BAA6B,OAAO;AAAA,QACvC,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AACA,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,uBAAuB,KAAK;AACjC,WAAK,UAAU,KAAK;AAAA,QAClB,QAAQ;AAAA,QACR,QAAQ,KAAK;AAAA,QACb,OAAO,KAAK;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,uBAAuB,OAAO;AAK5B,SAAK,gBAAgB;AAMrB,eAAW,MAAM;AACf,WAAK,gBAAgB;AACrB,WAAK,UAAU,KAAK;AAAA,IACtB,GAAG,CAAC;AAAA,EACN;AAAA;AAAA,EAEA,UAAU,OAAO;AACf,UAAM,OAAO,MAAM,UAAU,KAAK,QAAQ;AAC1C,UAAM,QAAQ,KAAK,QAAQ;AAC3B,UAAM,OAAO,KAAK,QAAQ,SAAS,IAAI,IAAI,KAAK,QAAQ;AACxD,UAAM,WAAW,KAAK,OAAO,KAAK,QAAQ,MAAM,KAAK,QAAQ,OAAO,IAAI;AACxE,UAAM,aAAa,KAAK,QAAQ,SAAS,IAAI,OAAO,QAAQ,OAAO;AAEnE,UAAM,kBAAkB,KAAK,MAAM,aAAa,QAAQ,IAAI;AAC5D,UAAM,iBAAiB,mBAAmB,KAAK,QAAQ,MAAM,KAAK,QAAQ,OAAO,KAAK,QAAQ;AAC9F,UAAM,QAAQ,KAAK,MAAM,iBAAiB,IAAI,IAAI;AAClD,UAAM,YAAY,KAAK;AACvB,QAAI,UAAU,WAAW;AAIvB,WAAK,QAAQ,eAAe,IAAI;AAChC,WAAK,QAAQ,OAAO,IAAI,KAAK,sBAAsB,IAAI,KAAK,6BAA6B,OAAO;AAAA,QAC9F,eAAe,KAAK,QAAQ;AAAA,MAC9B,CAAC;AACD;AAAA,IACF;AACA,SAAK,QAAQ;AACb,SAAK,YAAY,KAAK,KAAK,KAAK;AAChC,SAAK,cAAc,KAAK,KAAK;AAC7B,SAAK,QAAQ,eAAe,IAAI;AAChC,SAAK,QAAQ,OAAO,IAAI,KAAK,sBAAsB,IAAI,KAAK,6BAA6B,OAAO;AAAA,MAC9F,eAAe,KAAK,QAAQ;AAAA,IAC9B,CAAC;AAAA,EACH;AAAA,EACA,eAAe,OAAO;AAGpB,QAAI,CAAC,KAAK,QAAQ,QAAQ,KAAK,WAAW;AACxC,WAAK,6BAA6B,KAAK;AAAA,IACzC;AAAA,EACF;AAAA,EACA,eAAe;AACb,QAAI,KAAK,WAAW;AAClB,WAAK,YAAY;AACjB,UAAI,KAAK,UAAU,QAAQ;AACzB,aAAK,cAAc,KAAK;AAAA,MAC1B;AACA,WAAK,QAAQ,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR,QAAQ,KAAK;AAAA,QACb,OAAO,KAAK;AAAA,MACd,CAAC;AAKD,iBAAW,MAAM,KAAK,qBAAqB,GAAG,KAAK,UAAU,MAAM,KAAK,CAAC;AAAA,IAC3E;AAAA,EACF;AAAA,EACA,OAAO,GAAG;AACR,UAAM,MAAM,KAAK;AACjB,UAAM,MAAM,KAAK,QAAQ,eAAe,KAAK;AAC7C,WAAO,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG;AAAA,EACvC;AAAA,EACA,yBAAyB;AACvB,QAAI,KAAK,QAAQ,QAAQ;AACvB,cAAQ,IAAI,KAAK,eAAe,KAAK,QAAQ,eAAe,KAAK,kBAAkB,KAAK,KAAK;AAAA,IAC/F;AACA,WAAO,KAAK,cAAc,KAAK,QAAQ,eAAe,KAAK,kBAAkB,KAAK,KAAK;AAAA,EACzF;AAAA,EACA,8BAA8B,OAAO;AACnC,WAAO,MAAM,UAAU,KAAK,QAAQ;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,uBAAuB;AACrB,SAAK,aAAa,MAAM,UAAU,KAAK,KAAK,QAAQ,aAAa;AACjE,SAAK,aAAa,MAAM,QAAQ,eAAe,KAAK,QAAQ,gBAAgB,KAAK,kBAAkB,CAAC;AACpG,SAAK,aAAa,MAAM,OAAO,IAAI,KAAK,QAAQ,gBAAgB,KAAK,eAAe;AAAA,EACtF;AAAA,EACA,sBAAsB,SAAS;AAC7B,SAAK,aAAa,KAAK,OAAO,KAAK,uBAAuB,CAAC;AAC3D,SAAK,eAAe,OAAO;AAAA,EAC7B;AAAA,EACA,6BAA6B,OAAO,SAAS;AAC3C,SAAK,aAAa,KAAK,OAAO,KAAK,8BAA8B,KAAK,CAAC;AACvE,SAAK,eAAe,OAAO;AAAA,EAC7B;AAAA,EACA,eAAe,SAAS;AACtB,SAAK,QAAQ,eAAe,CAAC,CAAC,SAAS,aAAa;AACpD,SAAK,QAAQ,oBAAoB,IAAI;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,OAAO;AAChB,QAAI,KAAK,yBAAyB,UAAU,MAAM;AAChD,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB,IAAI;AACnB,SAAK,cAAc;AACnB,SAAK,wBAAwB;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,IAAI;AACpB,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB,YAAY;AAC3B,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,QAAQ;AACN,SAAK,aAAa,MAAM;AAAA,EAC1B;AAAA,EACA,OAAO;AACL,SAAK,aAAa,KAAK;AAAA,EACzB;AAAA,EACA,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,SAAS,kBAAkB,EAAE,CAAC;AAAA,IAC3C,WAAW,CAAC,QAAQ,SAAS,GAAG,mBAAmB;AAAA,IACnD,UAAU;AAAA,IACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,UAAU,SAAS,2CAA2C;AAC1E,iBAAO,IAAI,UAAU;AAAA,QACvB,CAAC,EAAE,SAAS,SAAS,0CAA0C;AAC7D,iBAAO,IAAI,SAAS;AAAA,QACtB,CAAC,EAAE,QAAQ,SAAS,yCAAyC;AAC3D,iBAAO,IAAI,QAAQ;AAAA,QACrB,CAAC,EAAE,SAAS,SAAS,0CAA0C;AAC7D,iBAAO,IAAI,SAAS;AAAA,QACtB,CAAC;AAAA,MACH;AACA,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,kBAAkB,IAAI,WAAW,CAAC;AAAA,MACnD;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,OAAO,CAAC,GAAG,SAAS,SAAS,eAAe;AAAA,IAC9C;AAAA,IACA,SAAS;AAAA,MACP,aAAa;AAAA,MACb,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AAAA,IACA,UAAU,CAAC,gBAAgB;AAAA,IAC3B,UAAU,CAAI,6BAAmB,CAAC,iCAAiC;AAAA,MACjE,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,CAAC;AAAA,EACL,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,yBAAyB;AAAA,QACzB,YAAY;AAAA,QACZ,WAAW;AAAA;AAAA;AAAA,QAGX,UAAU;AAAA,QACV,WAAW;AAAA,MACb;AAAA,MACA,WAAW,CAAC,iCAAiC;AAAA,QAC3C,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,sBAAN,MAAM,6BAA4B,eAAe;AAAA,EAC/C,OAAO,OAAO,iBAAiB;AAAA;AAAA,EAE/B,aAAa;AACX,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW,KAAK,QAAQ,UAAU,KAAK,cAAc,UAAU,QAAQ,UAAU,GAAG;AAAA,IAC3F;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY;AACV,UAAM,UAAU,KAAK,WAAW;AAChC,QAAI,CAAC,KAAK,gBAAgB,SAAS;AACjC,aAAO,QAAQ;AAAA,IACjB;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY;AACV,UAAM,UAAU,KAAK,WAAW;AAChC,QAAI,KAAK,gBAAgB,SAAS;AAChC,aAAO,QAAQ;AAAA,IACjB;AACA,WAAO,KAAK,QAAQ,eAAe,KAAK;AAAA,EAC1C;AAAA,EACA,kBAAkB;AAChB,SAAK,eAAe,KAAK,eAAe,KAAK,QAAQ,UAAU,CAAC,KAAK,eAAe,CAAC,KAAK,QAAQ;AAAA,EACpG;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA,cAAc;AACZ,UAAM;AACN,SAAK,cAAc,KAAK,aAAa,aAAa,mBAAmB;AACrE,SAAK,gBAAgB;AACrB,SAAK,gBAAgB,KAAK,cAAc,UAAU,MAAM,UAAU;AAAA,EACpE;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,eAAe,KAAK,QAAQ,WAAW,KAAK,MAAM,KAAK;AAAA,EACrE;AAAA,EACA,WAAW;AACT,UAAM,SAAS;AACf,SAAK,eAAe;AACpB,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,qBAAqB;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,0BAA0B;AACxB,UAAM,wBAAwB;AAC9B,SAAK,WAAW,GAAG,cAAc;AAAA,EACnC;AAAA,EACA,eAAe,OAAO;AACpB,QAAI,KAAK,YAAY,MAAM,WAAW,GAAG;AACvC;AAAA,IACF;AACA,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,mBAAmB;AACjC,WAAK,SAAS,aAAa,UAAU,IAAI,wCAAwC;AAAA,IACnF;AACA,UAAM,eAAe,KAAK;AAAA,EAC5B;AAAA,EACA,eAAe;AACb,UAAM,aAAa;AACnB,QAAI,KAAK,UAAU;AACjB,iBAAW,MAAM;AACf,aAAK,SAAS,qBAAqB;AACnC,aAAK,SAAS,aAAa,UAAU,OAAO,wCAAwC;AAAA,MACtF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,eAAe,OAAO;AACpB,UAAM,eAAe,KAAK;AAC1B,QAAI,CAAC,KAAK,QAAQ,QAAQ,KAAK,WAAW;AACxC,WAAK,eAAe;AAAA,IACtB;AAAA,EACF;AAAA,EACA,UAAU,OAAO;AACf,UAAM,UAAU,KAAK;AACrB,SAAK,UAAU,cAAc;AAAA,EAC/B;AAAA,EACA,OAAO,GAAG;AACR,WAAO,KAAK,IAAI,KAAK,IAAI,GAAG,KAAK,UAAU,CAAC,GAAG,KAAK,UAAU,CAAC;AAAA,EACjE;AAAA,EACA,gBAAgB;AACd,UAAM,UAAU,KAAK,WAAW;AAChC,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,QAAI,KAAK,aAAa;AACpB,WAAK,MAAM,KAAK,IAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK;AACnD,WAAK,MAAM,KAAK,QAAQ;AAAA,IAC1B,OAAO;AACL,WAAK,MAAM,KAAK,QAAQ;AACxB,WAAK,MAAM,KAAK,IAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK;AAAA,IACrD;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,UAAM,WAAW,KAAK,QAAQ,gBAAgB,IAAI,KAAK,QAAQ,gBAAgB;AAC/E,UAAM,WAAW,KAAK,QAAQ,eAAe,KAAK,QAAQ,gBAAgB,WAAW,KAAK,kBAAkB;AAC5G,UAAM,aAAa,KAAK,QAAQ,MAAM,KAAK,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,MAAM,KAAK,QAAQ,OAAO;AACzH,UAAM,QAAQ,WAAW,aAAa;AACtC,SAAK,aAAa,MAAM,QAAQ,GAAG,KAAK;AACxC,SAAK,aAAa,MAAM,UAAU,KAAK,KAAK,QAAQ,aAAa;AAAA,EACnE;AAAA,EACA,uBAAuB;AACrB,UAAM,UAAU,KAAK,WAAW;AAChC,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,UAAM,WAAW,KAAK,QAAQ,eAAe,KAAK,kBAAkB;AACpE,UAAM,WAAW,KAAK,cAAc,KAAK,SAAS,KAAK,QAAQ,QAAQ,SAAS,IAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS;AAChI,UAAM,cAAc,KAAK,eAAe,KAAK,MAAM,aAAa,KAAK,QAAQ,MAAM,KAAK,QAAQ,QAAQ,WAAW,KAAK,QAAQ,KAAK,QAAQ,MAAM,KAAK,QAAQ;AAChK,UAAM,aAAa,KAAK,QAAQ,MAAM,KAAK,QAAQ,MAAM,cAAc;AAEvE,QAAI,gBAAgB,KAAK,QAAQ;AAIjC,QAAI,eAAe,GAAG;AACpB,sBAAgB;AAAA,IAClB,WAAW,eAAe,GAAG;AAC3B,sBAAgB;AAAA,IAClB;AACA,UAAM,QAAQ,WAAW,aAAa;AACtC,SAAK,aAAa,MAAM,QAAQ,GAAG,KAAK;AACxC,SAAK,aAAa,MAAM,UAAU;AAClC,QAAI,KAAK,cAAc;AACrB,WAAK,aAAa,MAAM,OAAO,IAAI,KAAK,QAAQ,gBAAgB,KAAK,eAAe;AACpF,WAAK,aAAa,MAAM,QAAQ;AAAA,IAClC,OAAO;AACL,WAAK,aAAa,MAAM,OAAO;AAC/B,WAAK,aAAa,MAAM,QAAQ,IAAI,KAAK,QAAQ,gBAAgB,KAAK,eAAe;AAAA,IACvF;AAAA,EACF;AAAA,EACA,sBAAsB;AACpB,SAAK,aAAa,UAAU,OAAO,2BAA2B,CAAC,KAAK,YAAY;AAAA,EAClF;AAAA,EACA,iBAAiB;AACf,UAAM,UAAU,KAAK,WAAW;AAChC,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,YAAQ,cAAc;AACtB,QAAI,KAAK,WAAW;AAClB,cAAQ,mBAAmB;AAAA,IAC7B,OAAO;AACL,cAAQ,qBAAqB;AAAA,IAC/B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,OAAO;AAChB,QAAI,KAAK,yBAAyB,UAAU,MAAM;AAChD,WAAK,QAAQ;AACb,WAAK,qBAAqB;AAC1B,WAAK,eAAe;AAAA,IACtB;AAAA,EACF;AAAA,EACA,UAAU,OAAO;AACf,UAAM,UAAU,KAAK;AACrB,SAAK,qBAAqB;AAC1B,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,OAAO,YAAO,SAAS,4BAA4B,mBAAmB;AACpE,WAAO,KAAK,qBAAqB,sBAAqB;AAAA,EACxD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,SAAS,uBAAuB,EAAE,GAAG,CAAC,SAAS,qBAAqB,EAAE,CAAC;AAAA,IACpF,UAAU,CAAC,qBAAqB;AAAA,IAChC,UAAU,CAAI,6BAAmB,CAAC,uCAAuC;AAAA,MACvE,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,EACpC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,qBAAqB,CAAC;AAAA,IAC5F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW,CAAC,uCAAuC;AAAA,QACjD,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AACH,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,OAAO,YAAO,SAAS,wBAAwB,mBAAmB;AAChE,WAAO,KAAK,qBAAqB,kBAAiB;AAAA,EACpD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,SAAS,CAAC,iBAAiB,eAAe;AAAA,EAC5C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB,iBAAiB,WAAW,gBAAgB,qBAAqB,oBAAoB;AAAA,MAChH,SAAS,CAAC,WAAW,gBAAgB,mBAAmB;AAAA,IAC1D,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;ACh5DG,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA,EAAI;;;;;;AAIxB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2C,GAAA,KAAA,EAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AAD7C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAMzB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+C,GAAA,GAAA;AAC1C,IAAA,iBAAA,GAAA,uCAAA;AAAqC,IAAA,uBAAA,EAAI;;;;;AAgCtC,IAAA,yBAAA,GAAA,YAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;AAKN,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,kBAAA,OAAA,YAAA,IAAA;;;;;;AApCN,IAAA,yBAAA,GAAA,YAAA,EAAA,EAAoD,GAAA,iBAAA,EACjC,GAAA,gBAAA;AACC,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;AAC7B,IAAA,yBAAA,GAAA,mBAAA;AACE,IAAA,oBAAA,GAAA,WAAA,CAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAoB;AAGtB,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EACS,GAAA,OAAA,EAAA;AAErB,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;AAAgB,IAAA,uBAAA,EAAO;AAE/B,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;;AAAyB,IAAA,uBAAA,EAAO;AAExC,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;AAAsB,IAAA,uBAAA,EAAO,EAC/B;AAGR,IAAA,yBAAA,IAAA,KAAA,EAAA;AAA2B,IAAA,iBAAA,EAAA;;AAAoC,IAAA,uBAAA;AAE/D,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA8B,IAAA,cAAA;AAE1B,IAAA,qBAAA,IAAA,2DAAA,GAAA,GAAA,YAAA,EAAA;AAGF,IAAA,uBAAA,EAAe;AAGjB,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,UAAA,EAAA;AACmB,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,OAAA,EAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AAChF,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyC,IAAA,qBAAA,SAAA,SAAA,yEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,OAAA,EAAA,CAAmB;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA,EAAS,EACxE;;;;;AAzCD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;AAEL,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,SAAA,MAAA,GAAA;AAOW,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,QAAA;AAGG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,OAAA,MAAA,CAAA;AAGG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA;AAIiB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,sBAAA,IAAA,IAAA,OAAA,aAAA,GAAA,GAAA,GAAA,KAAA;AAIK,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,cAAA;AAM1B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;;;;;AAxCZ,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,OAAA,EAAA,EAA+C,GAAA,+CAAA,IAAA,IAAA,YAAA,EAAA;AAiDjD,IAAA,uBAAA;;;;AAjDQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,KAAA,WAAA,CAAA;AAIoB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,IAAA;;;AAiK5B,IAAO,qBAAP,MAAO,oBAAkB;EAenB;EACA;EACA;;EAfV,WAAW;EACX,iBAAiB;EACjB,aAAa;EACb,kBAAkB;EAClB,cAAc;EACd,WAAW;EAEX;EACA,OAAc,CAAA;EACd,YAAY;EACZ,QAAuB;EAEvB,YACU,IACA,YACA,QAAiB;AAFjB,SAAA,KAAA;AACA,SAAA,aAAA;AACA,SAAA,SAAA;AAER,SAAK,aAAa,KAAK,GAAG,MAAM;MAC9B,OAAO,CAAC,EAAE;MACV,UAAU,CAAC,EAAE;MACb,WAAW,CAAC,IAAI;MAChB,gBAAgB,CAAC,EAAE;MACnB,QAAQ,CAAC,YAAY;KACtB;AAGD,SAAK,WAAW,IAAI,OAAO,GAAG,aAC3B,KACC,aAAa,GAAG,GAChB,qBAAoB,CAAE,EAEvB,UAAU,MAAM,KAAK,SAAQ,CAAE;EACpC;EAEA,WAAQ;AACN,SAAK,SAAQ;EACf;EAEA,WAAQ;AACN,SAAK,YAAY;AACjB,SAAK,QAAQ;AAEb,UAAM,UAAU,KAAK,WAAW;AAChC,SAAK,WAAW,WAAW,OAAO,EAAE,UAAU;MAC5C,MAAM,CAAC,SAAQ;AACb,aAAK,OAAO;AACZ,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,uBAAuB,KAAK;AAC1C,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEA,WAAQ;AACN,SAAK,SAAQ;EACf;EAEA,eAAY;AACV,SAAK,WAAW,MAAM;MACpB,OAAO;MACP,UAAU;MACV,WAAW;MACX,gBAAgB;MAChB,QAAQ;KACT;AACD,SAAK,SAAQ;EACf;EAEA,eAAe,OAAa;AAE1B,YAAQ,IAAI,qBAAqB,KAAK;EACxC;EAEA,YAAY,OAAa;AACvB,SAAK,WAAW,OAAO,KAAK,EAAE,UAAU;MACtC,MAAM,CAAC,QAAO;AACZ,cAAM,YAAY,KAAK,OAAO,KAAK,0BAA0B;UAC3D,OAAO;UACP,MAAM,EAAE,IAAG;SACZ;AAED,kBAAU,YAAW,EAAG,UAAU,YAAS;AACzC,cAAI,QAAQ;AAEV,iBAAK,SAAQ;UACf;QACF,CAAC;MACH;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,8BAA8B,KAAK;MACnD;KACD;EACH;;qCAjGW,qBAAkB,4BAAA,WAAA,GAAA,4BAAA,UAAA,GAAA,4BAAA,SAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,cAAA,WAAA,GAAA,cAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,SAAA,eAAA,gCAAA,GAAA,CAAA,aAAA,IAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,cAAA,SAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,YAAA,eAAA,wBAAA,GAAA,CAAA,YAAA,IAAA,QAAA,UAAA,mBAAA,aAAA,eAAA,gBAAA,GAAA,CAAA,mBAAA,gBAAA,GAAA,CAAA,SAAA,EAAA,GAAA,CAAA,SAAA,WAAA,GAAA,CAAA,SAAA,WAAA,GAAA,CAAA,SAAA,UAAA,GAAA,CAAA,SAAA,YAAA,GAAA,CAAA,mBAAA,QAAA,GAAA,CAAA,SAAA,YAAA,GAAA,CAAA,SAAA,QAAA,GAAA,CAAA,SAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,cAAA,IAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,QAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,WAAA,GAAA,MAAA,GAAA,CAAA,SAAA,YAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,SAAA,WAAA,YAAA,IAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,UAAA,GAAA,OAAA,GAAA,CAAA,SAAA,WAAA,YAAA,EAAA,GAAA,CAAA,GAAA,aAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AArP3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAkC,GAAA,YAAA,CAAA,EAEK,GAAA,kBAAA,EACjB,GAAA,QAAA,CAAA;AACe,MAAA,qBAAA,YAAA,SAAA,uDAAA;AAAA,eAAY,IAAA,SAAA;MAAU,CAAA;AACnD,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAwB,GAAA,kBAAA,CAAA,EACoC,GAAA,WAAA;AAC7C,MAAA,iBAAA,GAAA,aAAA;AAAW,MAAA,uBAAA;AACtB,MAAA,oBAAA,GAAA,SAAA,CAAA,EAAqF,GAAA,WAAA,CAAA;AAEvF,MAAA,uBAAA,EAAiB;AAGnB,MAAA,yBAAA,IAAA,uBAAA,CAAA,EAA0C,IAAA,4BAAA,EACZ,IAAA,iBAAA;AAExB,MAAA,oBAAA,IAAA,WAAA,CAAA;AACA,MAAA,iBAAA,IAAA,WAAA;AACF,MAAA,uBAAA,EAAkB;AAGpB,MAAA,yBAAA,IAAA,OAAA,CAAA,EAA0B,IAAA,kBAAA,EAAA,EAEa,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AACnB,MAAA,oBAAA,IAAA,SAAA,EAAA;AACF,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,kBAAA,EAAA,EAAqC,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,gBAAA;AAAc,MAAA,uBAAA;AACzB,MAAA,oBAAA,IAAA,SAAA,EAAA;AACF,MAAA,uBAAA;AAGA,MAAA,yBAAA,IAAA,kBAAA,EAAA,EAAqC,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,iBAAA;AAAe,MAAA,uBAAA;AAC1B,MAAA,yBAAA,IAAA,cAAA,EAAA,EAA6C,IAAA,cAAA,EAAA;AACtB,MAAA,iBAAA,IAAA,WAAA;AAAS,MAAA,uBAAA;AAC9B,MAAA,yBAAA,IAAA,cAAA,EAAA;AAA8B,MAAA,iBAAA,IAAA,WAAA;AAAS,MAAA,uBAAA;AACvC,MAAA,yBAAA,IAAA,cAAA,EAAA;AAA8B,MAAA,iBAAA,IAAA,WAAA;AAAS,MAAA,uBAAA;AACvC,MAAA,yBAAA,IAAA,cAAA,EAAA;AAA6B,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AACrC,MAAA,yBAAA,IAAA,cAAA,EAAA;AAA+B,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA,EAAa,EAC3C;AAIf,MAAA,yBAAA,IAAA,kBAAA,EAAA,EAAqC,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,SAAA;AAAO,MAAA,uBAAA;AAClB,MAAA,yBAAA,IAAA,cAAA,EAAA,EAAqC,IAAA,cAAA,EAAA;AACJ,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA;AACzC,MAAA,yBAAA,IAAA,cAAA,EAAA;AAA2B,MAAA,iBAAA,IAAA,QAAA;AAAM,MAAA,uBAAA;AACjC,MAAA,yBAAA,IAAA,cAAA,EAAA;AAAyB,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA,EAAa,EACtC,EACE;AAGnB,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA4B,IAAA,UAAA,EAAA;AACO,MAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,eAAS,IAAA,aAAA;MAAc,CAAA;AAAE,MAAA,iBAAA,IAAA,OAAA;AAAK,MAAA,uBAAA;AAC/D,MAAA,yBAAA,IAAA,UAAA,EAAA;AAAwD,MAAA,iBAAA,IAAA,eAAA;AAAa,MAAA,uBAAA,EAAS,EAC1E,EACc,EACjB,EACU;AAIrB,MAAA,qBAAA,IAAA,oCAAA,GAAA,GAAA,OAAA,EAAA,EAAiD,IAAA,oCAAA,GAAA,GAAA,OAAA,EAAA,EAMN,IAAA,oCAAA,GAAA,GAAA,OAAA,EAAA;AAyD7C,MAAA,uBAAA;;;AA9HY,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,UAAA;AAKS,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,QAAA;AAOE,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,QAAA;AAmDf,MAAA,oBAAA,EAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IA9FR;IAAY;IAAA;IAAA;IAAA;IACZ;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IAAa;IAAA;IAAA;IAAA;IAAA;IAAA;IACb;IAAkB;IAAA;IAAA;IAClB;IAAc;IACd;IAAe;IAAA;IACf;IAAe;IACf;IACA;IAAc;IAAA;IACd;IAAwB;IACxB;IACA;IAAkB;IAAA;IAAA;IAClB;IAAiB;EAAA,GAAA,QAAA,CAAA,g/DAAA,EAAA,CAAA;;;sEAwPR,oBAAkB,CAAA;UAxQ9B;uBACW,kBAAgB,YACd,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoIT,QAAA,CAAA,2zDAAA,EAAA,CAAA;;;;6EAkHU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,+EAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;AC/R/B,IAAMC,OAAM,CAAC,GAAG;AAChB,SAAS,+BAA+B,IAAI,KAAK;AAC/C,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,CAAC;AAAA,EACnB;AACF;AACA,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,cAAc,OAAO,UAAU;AAAA,EAC/B,cAAc;AAAA,EAAC;AAAA;AAAA,EAEf,QAAQ;AACN,SAAK,YAAY,cAAc,MAAM;AAAA,EACvC;AAAA,EACA,OAAO,YAAO,SAAS,sBAAsB,mBAAmB;AAC9D,WAAO,KAAK,qBAAqB,gBAAe;AAAA,EAClD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,iBAAiB,EAAE,CAAC;AAAA,IACrC,WAAW,CAAC,QAAQ,KAAK;AAAA,EAC3B,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,QAAQ;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AACH,IAAM,eAAN,MAAM,cAAa;AAAA,EACjB,WAAW,OAAO,WAAW;AAAA,EAC7B,cAAc;AAAA,EAAC;AAAA,EACf,OAAO,YAAO,SAAS,qBAAqB,mBAAmB;AAC7D,WAAO,KAAK,qBAAqB,eAAc;AAAA,EACjD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;AAAA,EACtC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AAcH,IAAM,aAAa;AAAA,EACjB,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAEA,IAAM,yBAAyB,IAAI,eAAe,wBAAwB;AAC1E,IAAM,UAAN,MAAM,SAAQ;AAAA,EACZ;AAAA,EACA,WAAW,OAAO,UAAU;AAAA,EAC5B;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,aAAa;AAAA;AAAA,EAEb,mBAAmB,IAAI,aAAa;AAAA;AAAA,EAEpC;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,WAAW;AAAA;AAAA,EAEX,WAAW;AAAA;AAAA,EAEX,IAAI,YAAY;AACd,WAAO,KAAK,sBAAsB,OAAO,KAAK,qBAAqB,IAAI,KAAK;AAAA,EAC9E;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,qBAAqB;AAAA,EACrB,uBAAuB;AACrB,WAAO,KAAK,cAAc,KAAK,YAAY,SAAS,KAAK,aAAa,KAAK;AAAA,EAC7E;AAAA;AAAA,EAEA,IAAI,WAAW;AACb,WAAO,KAAK,gBAAgB,OAAO,KAAK,iBAAiB,IAAI,KAAK;AAAA,EACpE;AAAA,EACA,IAAI,SAAS,OAAO;AAClB,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,eAAe;AAAA,EACf,mBAAmB;AACjB,WAAO,KAAK,eAAe,KAAK,YAAY,WAAW,KAAK;AAAA,EAC9D;AAAA,EACA,cAAc;AACZ,UAAM,iBAAiB,OAAO,wBAAwB;AAAA,MACpD,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,kBAAkB,iBAAiB,iBAAiB,CAAC;AAC1D,SAAK,+BAA+B,KAAK,gBAAgB,gCAAgC;AAAA,EAC3F;AAAA;AAAA,EAEA,SAAS;AACP,SAAK,SAAS,WAAW;AAAA,EAC3B;AAAA;AAAA,EAEA,QAAQ;AACN,SAAK,aAAa;AAClB,QAAI,KAAK,sBAAsB,MAAM;AACnC,WAAK,qBAAqB;AAAA,IAC5B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC7B,WAAK,eAAe;AAAA,IACtB;AACA,QAAI,KAAK,aAAa;AAIpB,WAAK,aAAa,QAAQ,UAAQ,KAAK,YAAY,CAAC;AACpD,WAAK,YAAY,MAAM;AAAA,IACzB;AAAA,EACF;AAAA,EACA,cAAc;AAGZ,SAAK,SAAS,cAAc;AAAA,EAC9B;AAAA,EACA,oBAAoB;AAClB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa;AAClB,WAAK,iBAAiB,KAAK,IAAI;AAAA,IACjC;AAAA,EACF;AAAA;AAAA,EAEA,aAAa;AAGX,WAAO,KAAK,gBAAgB,aAAa,KAAK,gBAAgB;AAAA,EAChE;AAAA,EACA,OAAO,YAAO,SAAS,gBAAgB,mBAAmB;AACxD,WAAO,KAAK,qBAAqB,UAAS;AAAA,EAC5C;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,UAAU,CAAC;AAAA,IACxB,gBAAgB,SAAS,uBAAuB,IAAI,KAAK,UAAU;AACjE,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,cAAc,CAAC;AAC3C,QAAG;AAAA,UAAe;AAAA;AAAA;AAAA;AAAA;AAAA,UAKlB;AAAA,UAAkB;AAAA,QAAC;AAAA,MACrB;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,YAAY,GAAG;AAChE,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc;AAAA,MACjE;AAAA,IACF;AAAA,IACA,WAAW,SAAS,cAAc,IAAI,KAAK;AACzC,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,aAAa,CAAC;AAAA,MAC/B;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,UAAU,GAAG;AAAA,MAChE;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,cAAc;AAAA,MACd,WAAW,CAAC,GAAG,cAAc,WAAW;AAAA,MACxC,gBAAgB,CAAC,GAAG,mBAAmB,gBAAgB;AAAA,MACvD,OAAO;AAAA,MACP,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,MACtD,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,MACtD,WAAW,CAAC,GAAG,aAAa,aAAa,gBAAgB;AAAA,MACzD,UAAU,CAAC,GAAG,YAAY,YAAY,gBAAgB;AAAA,IACxD;AAAA,IACA,SAAS;AAAA,MACP,kBAAkB;AAAA,IACpB;AAAA,IACA,UAAU,CAAC,SAAS;AAAA,IACpB,UAAU,CAAI,8BAAoB;AAAA,IAClC,oBAAoBC;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU,SAAS,iBAAiB,IAAI,KAAK;AAC3C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,qBAAW,GAAG,gCAAgC,GAAG,GAAG,aAAa;AAAA,MACtE;AAAA,IACF;AAAA,IACA,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,SAAS,CAAC;AAAA,IAChF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,eAAe,kBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,IAC3C,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,QAKN;AAAA,QAAkB;AAAA,UAChB,aAAa;AAAA,QACf;AAAA,MAAC;AAAA,IACH,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,QAClB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,aAAN,MAAM,YAAW;AAAA,EACf,OAAO,OAAO,gBAAgB;AAAA,IAC5B,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,qBAAqB,OAAO,iBAAiB;AAAA,EAC7C,cAAc,OAAO,UAAU;AAAA;AAAA,EAE/B,aAAa,IAAI,QAAQ;AAAA;AAAA,EAEzB;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA,QAAQ,IAAI,UAAU;AAAA;AAAA,EAEtB;AAAA;AAAA,EAEA,iBAAiB,IAAI,UAAU;AAAA;AAAA,EAE/B,SAAS;AAAA;AAAA,EAET,IAAI,gBAAgB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,cAAc,OAAO;AACvB,QAAI,KAAK,QAAQ;AAEf,UAAI,CAAC,KAAK,cAAc,KAAK,MAAM,OAAO,cAAc,eAAe,YAAY;AACjF,cAAM,MAAM,mEAAmE;AAAA,MACjF;AACA,UAAI,KAAK,mBAAmB,OAAO;AACjC,aAAK,UAAU,kBAAkB;AACjC,YAAI,CAAC,KAAK,6BAA6B,KAAK,MAAM,SAAS,KAAK,kBAAkB,KAAK,MAAM,QAAQ,EAAE,KAAK,EAAE,WAAW;AACvH,eAAK,yBAAyB,KAAK;AAAA,QACrC;AAAA,MACF;AAAA,IACF,OAAO;AACL,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAAA,EACA,iBAAiB;AAAA;AAAA,EAEjB,IAAI,WAAW;AACb,WAAO,KAAK,QAAQ,KAAK,MAAM,QAAQ,EAAE,KAAK,aAAa,IAAI;AAAA,EACjE;AAAA,EACA,IAAI,SAAS,MAAM;AACjB,SAAK,gBAAgB,QAAQ,KAAK,QAAQ,KAAK,MAAM,QAAQ,EAAE,QAAQ,IAAI,IAAI;AAAA,EACjF;AAAA;AAAA,EAEA,kBAAkB,IAAI,aAAa;AAAA;AAAA,EAEnC,sBAAsB,IAAI,aAAa;AAAA;AAAA,EAEvC,WAAW,OAAO,YAAY,EAAE,MAAM,cAAc;AAAA;AAAA,EAEpD,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,YAAY,OAAO;AAErB,SAAK,eAAe;AACpB,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,wBAAwB,UAAU,UAAU;AAAA,IAC/D;AAAA,EACF;AAAA,EACA,eAAe;AAAA,EACf,cAAc;AAAA,EAAC;AAAA,EACf,qBAAqB;AACnB,SAAK,OAAO,QAAQ,KAAK,UAAU,KAAK,MAAM,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,WAAS;AAC9F,WAAK,MAAM,MAAM,MAAM,OAAO,UAAQ,KAAK,aAAa,IAAI,CAAC;AAC7D,WAAK,MAAM,gBAAgB;AAAA,IAC7B,CAAC;AAAA,EACH;AAAA,EACA,kBAAkB;AAOhB,SAAK,YAAY,QAAQ,KAAK,UAAU,KAAK,WAAW,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,aAAW;AAC1G,WAAK,eAAe,MAAM,QAAQ,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM;AACzD,cAAM,mBAAmB,EAAE,YAAY,cAAc,wBAAwB,EAAE,YAAY,aAAa;AAIxG,eAAO,mBAAmB,KAAK,8BAA8B,KAAK;AAAA,MACpE,CAAC,CAAC;AACF,WAAK,eAAe,gBAAgB;AAAA,IACtC,CAAC;AAID,SAAK,cAAc,IAAI,gBAAgB,KAAK,cAAc,EAAE,SAAS,EAAE,eAAe,EAAE,wBAAwB,KAAK,iBAAiB,UAAU;AAIhJ,SAAK,YAAY,iBAAiB,KAAK,aAAa;AACpD,KAAC,KAAK,OAAO,KAAK,KAAK,SAAS,GAAG,GAAG,KAAK,UAAU,KAAK,iBAAiB,CAAC,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,eAAa,KAAK,aAAa,0BAA0B,SAAS,CAAC;AACxL,SAAK,YAAY,iBAAiB,KAAK,cAAc;AAErD,SAAK,MAAM,QAAQ,UAAU,MAAM;AACjC,UAAI,CAAC,KAAK,UAAU;AAClB,aAAK,iBAAiB,KAAK,IAAI,KAAK,iBAAiB,GAAG,CAAC;AAAA,MAC3D;AAAA,IACF,CAAC;AAID,QAAI,CAAC,KAAK,cAAc,KAAK,cAAc,GAAG;AAC5C,WAAK,iBAAiB;AAAA,IACxB;AAGA,QAAI,KAAK,UAAU,KAAK,iBAAiB,GAAG;AAC1C,YAAM,eAAe,KAAK,MAAM,QAAQ,EAAE,MAAM,GAAG,KAAK,cAAc;AACtE,iBAAW,QAAQ,cAAc;AAC/B,aAAK,kBAAkB;AAAA,MACzB;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,aAAa,QAAQ;AAC1B,SAAK,MAAM,QAAQ;AACnB,SAAK,eAAe,QAAQ;AAC5B,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AAAA,EAC3B;AAAA;AAAA,EAEA,OAAO;AACL,SAAK,gBAAgB,KAAK,IAAI,KAAK,iBAAiB,GAAG,KAAK,MAAM,SAAS,CAAC;AAAA,EAC9E;AAAA;AAAA,EAEA,WAAW;AACT,SAAK,gBAAgB,KAAK,IAAI,KAAK,iBAAiB,GAAG,CAAC;AAAA,EAC1D;AAAA;AAAA,EAEA,QAAQ;AACN,SAAK,yBAAyB,CAAC;AAC/B,SAAK,MAAM,QAAQ,UAAQ,KAAK,MAAM,CAAC;AACvC,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA,EAEA,gBAAgB,GAAG;AACjB,WAAO,GAAG,KAAK,QAAQ,UAAU,CAAC;AAAA,EACpC;AAAA;AAAA,EAEA,kBAAkB,GAAG;AACnB,WAAO,GAAG,KAAK,QAAQ,YAAY,CAAC;AAAA,EACtC;AAAA;AAAA,EAEA,gBAAgB;AACd,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA;AAAA,EAEA,uBAAuB,OAAO;AAC5B,UAAM,WAAW,QAAQ,KAAK;AAC9B,QAAI,WAAW,GAAG;AAChB,aAAO,KAAK,iBAAiB,MAAM,QAAQ,SAAS;AAAA,IACtD,WAAW,WAAW,GAAG;AACvB,aAAO,KAAK,iBAAiB,MAAM,QAAQ,aAAa;AAAA,IAC1D;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,kBAAkB,OAAO,QAAQ,WAAW,QAAQ;AAClD,UAAM,OAAO,KAAK,MAAM,QAAQ,EAAE,KAAK;AACvC,UAAM,gBAAgB,KAAK,eAAe,KAAK;AAC/C,WAAO,KAAK,+BAA+B,KAAK,0BAA0B,MAAM,aAAa,IAAI,KAAK,mBAAmB,MAAM,eAAe,KAAK;AAAA,EACrJ;AAAA,EACA,0BAA0B,MAAM,eAAe;AAC7C,QAAI,KAAK,WAAW,KAAK,KAAK,YAAY,CAAC,eAAe;AACxD,aAAO,WAAW;AAAA,IACpB,WAAW,CAAC,KAAK,aAAa,eAAe;AAC3C,aAAO,WAAW;AAAA,IACpB,OAAO;AACL,aAAO,KAAK,WAAW,WAAW,OAAO,WAAW;AAAA,IACtD;AAAA,EACF;AAAA,EACA,mBAAmB,MAAM,eAAe,QAAQ,WAAW,QAAQ;AACjE,QAAI,KAAK,WAAW,KAAK,KAAK,YAAY,CAAC,eAAe;AACxD,aAAO,WAAW;AAAA,IACpB,WAAW,KAAK,aAAa,CAAC,eAAe;AAC3C,aAAO,WAAW;AAAA,IACpB,WAAW,KAAK,aAAa,eAAe;AAC1C,aAAO;AAAA,IACT,WAAW,KAAK,YAAY,eAAe;AACzC,aAAO,WAAW;AAAA,IACpB,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,eAAe,OAAO;AACpB,WAAO,KAAK,mBAAmB;AAAA,EACjC;AAAA;AAAA,EAEA,iBAAiB;AACf,WAAO,KAAK,cAAc,KAAK,YAAY,kBAAkB,KAAK;AAAA,EACpE;AAAA,EACA,yBAAyB,UAAU;AACjC,UAAM,aAAa,KAAK,MAAM,QAAQ;AACtC,SAAK,gBAAgB,KAAK;AAAA,MACxB,eAAe;AAAA,MACf,yBAAyB,KAAK;AAAA,MAC9B,cAAc,WAAW,QAAQ;AAAA,MACjC,wBAAwB,WAAW,KAAK,cAAc;AAAA,IACxD,CAAC;AAKD,QAAI,KAAK,aAAa;AACpB,WAAK,eAAe,IAAI,KAAK,YAAY,cAAc,QAAQ,IAAI,KAAK,YAAY,iBAAiB,QAAQ;AAAA,IAC/G;AACA,SAAK,iBAAiB;AACtB,SAAK,oBAAoB,KAAK,KAAK,cAAc;AACjD,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,WAAW,OAAO;AAChB,UAAM,cAAc,eAAe,KAAK;AACxC,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,KAAK;AACrB,QAAI,SAAS,mBAAmB,QAAQ,CAAC,gBAAgB,YAAY,SAAS,YAAY,QAAQ;AAChG,WAAK,gBAAgB,QAAQ;AAC7B,YAAM,eAAe;AAAA,IACvB,OAAO;AACL,eAAS,eAAe,UAAU,EAAE,UAAU,KAAK;AAAA,IACrD;AAAA,EACF;AAAA,EACA,6BAA6B,OAAO;AAClC,QAAI,KAAK,UAAU,SAAS,GAAG;AAC7B,aAAO,KAAK,MAAM,QAAQ,EAAE,MAAM,GAAG,KAAK,EAAE,KAAK,UAAQ;AACvD,cAAM,UAAU,KAAK;AACrB,cAAM,eAAe,UAAU,QAAQ,WAAW,QAAQ,WAAW,CAAC,KAAK,aAAa,CAAC,KAAK;AAC9F,eAAO,gBAAgB,CAAC,KAAK,YAAY,CAAC,KAAK;AAAA,MACjD,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,QAAQ,KAAK,KAAK,UAAU,QAAQ,QAAQ;AAAA,EAC1D;AAAA;AAAA,EAEA,iBAAiB;AACf,UAAM,iBAAiB,KAAK,YAAY;AACxC,UAAM,iBAAiB,kCAAkC;AACzD,WAAO,mBAAmB,kBAAkB,eAAe,SAAS,cAAc;AAAA,EACpF;AAAA;AAAA,EAEA,cAAc,OAAO;AACnB,WAAO,QAAQ,OAAO,CAAC,KAAK,SAAS,QAAQ,KAAK,MAAM;AAAA,EAC1D;AAAA,EACA,OAAO,YAAO,SAAS,mBAAmB,mBAAmB;AAC3D,WAAO,KAAK,qBAAqB,aAAY;AAAA,EAC/C;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;AAAA,IAClC,gBAAgB,SAAS,0BAA0B,IAAI,KAAK,UAAU;AACpE,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,SAAS,CAAC;AACtC,QAAG,yBAAe,UAAU,eAAe,CAAC;AAAA,MAC9C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,SAAS;AAC1D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc;AAAA,MACjE;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,QAAQ,CAAC,GAAG,UAAU,UAAU,gBAAgB;AAAA,MAChD,eAAe,CAAC,GAAG,iBAAiB,iBAAiB,eAAe;AAAA,MACpE,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,SAAS;AAAA,MACP,iBAAiB;AAAA,MACjB,qBAAqB;AAAA,IACvB;AAAA,IACA,UAAU,CAAC,YAAY;AAAA,EACzB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,QACd,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,eAAe;AAAA,QACpB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,WAAW,OAAO,UAAU;AAAA;AAAA,EAE5B,OAAO;AAAA,EACP,cAAc;AAAA,EAAC;AAAA,EACf,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,UAAU,kBAAkB,EAAE,CAAC;AAAA,IAC5C,UAAU;AAAA,IACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,SAAS,SAAS,0CAA0C;AACxE,iBAAO,IAAI,SAAS,KAAK;AAAA,QAC3B,CAAC;AAAA,MACH;AACA,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,QAAQ,IAAI,IAAI;AAAA,MACpC;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,UAAU;AAAA,QACV,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAEH,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EACvB,WAAW,OAAO,UAAU;AAAA;AAAA,EAE5B,OAAO;AAAA,EACP,cAAc;AAAA,EAAC;AAAA,EACf,OAAO,YAAO,SAAS,2BAA2B,mBAAmB;AACnE,WAAO,KAAK,qBAAqB,qBAAoB;AAAA,EACvD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,UAAU,sBAAsB,EAAE,CAAC;AAAA,IAChD,UAAU;AAAA,IACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,SAAS,SAAS,8CAA8C;AAC5E,iBAAO,IAAI,SAAS,SAAS;AAAA,QAC/B,CAAC;AAAA,MACH;AACA,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,QAAQ,IAAI,IAAI;AAAA,MACpC;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,UAAU;AAAA,QACV,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO,YAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,SAAS,CAAC,UAAU;AAAA,EACtB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,YAAY,SAAS,YAAY,eAAe,cAAc,gBAAgB,kBAAkB;AAAA,MAC1G,SAAS,CAAC,SAAS,YAAY,eAAe,cAAc,gBAAgB,kBAAkB;AAAA,IAChG,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC1uBH,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,IAAG,6BAAmB,GAAG,CAAC;AAAA,EAC5B;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,oBAAoB,OAAO,cAAc,OAAO,KAAK,CAAC,EAAE,2BAA2B,OAAO,gBAAgB,CAAC;AAAA,EAC3H;AACF;AACA,SAAS,4CAA4C,IAAI,KAAK;AAC5D,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,QAAQ,CAAC;AAC9B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,oBAAU;AACb,IAAG,4BAAkB,OAAO,wBAAwB,OAAO,KAAK,CAAC;AAAA,EACnE;AACF;AACA,SAAS,0DAA0D,IAAI,KAAK;AAC1E,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,QAAQ,CAAC;AAC9B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,oBAAU;AACb,IAAG,4BAAkB,OAAO,MAAM,cAAc;AAAA,EAClD;AACF;AACA,SAAS,0DAA0D,IAAI,KAAK;AAC1E,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,QAAQ,CAAC;AAC9B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,oBAAU;AACb,IAAG,4BAAkB,OAAO,MAAM,aAAa;AAAA,EACjD;AACF;AACA,SAAS,4CAA4C,IAAI,KAAK;AAC5D,MAAI,KAAK,GAAG;AACV,IAAG,qBAAW,GAAG,2DAA2D,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,2DAA2D,GAAG,GAAG,QAAQ,CAAC;AAC1K,IAAG,yBAAe,GAAG,YAAY,CAAC;AAClC,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,wBAAc,OAAO,UAAU,SAAS,IAAI,OAAO,UAAU,SAAS,IAAI,EAAE;AAC/E,IAAG,oBAAU,CAAC;AACd,IAAG,4BAAkB,OAAO,wBAAwB,OAAO,KAAK,CAAC;AAAA,EACnE;AACF;AACA,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,IAAG,qBAAW,GAAG,6CAA6C,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,6CAA6C,GAAG,CAAC;AAAA,EACrI;AACA,MAAI,KAAK,GAAG;AACV,QAAI;AACJ,UAAM,SAAY,wBAAc;AAChC,IAAG,yBAAe,UAAU,OAAO,WAAW,WAAW,IAAI,CAAC;AAAA,EAChE;AACF;AACA,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,6BAAmB,GAAG,CAAC;AAC1B,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU;AACb,IAAG,qBAAW,oBAAoB,IAAI,QAAQ;AAAA,EAChD;AACF;AACA,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU;AACb,IAAG,4BAAkB,OAAO,KAAK;AAAA,EACnC;AACF;AACA,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU;AACb,IAAG,4BAAkB,OAAO,MAAM,aAAa;AAAA,EACjD;AACF;AACA,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,iBAAO,CAAC;AACX,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU;AACb,IAAG,4BAAkB,OAAO,YAAY;AAAA,EAC1C;AACF;AACA,IAAMC,OAAM,CAAC,GAAG;AAChB,SAAS,6CAA6C,IAAI,KAAK;AAAC;AAChE,SAAS,+BAA+B,IAAI,KAAK;AAC/C,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,CAAC;AACjB,IAAG,qBAAW,GAAG,8CAA8C,GAAG,GAAG,eAAe,CAAC;AAAA,EACvF;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU;AACb,IAAG,qBAAW,mBAAmB,OAAO,OAAO;AAAA,EACjD;AACF;AACA,IAAMC,OAAM,CAAC,mBAAmB;AAChC,IAAMC,OAAM,CAAC,IAAI,QAAQ;AAAA,EACvB,MAAM;AAAA,EACN,GAAG;AACL;AACA,SAAS,kCAAkC,IAAI,KAAK;AAClD,MAAI,KAAK,GAAG;AACV,IAAG,uBAAa,CAAC;AAAA,EACnB;AACF;AACA,SAAS,+CAA+C,IAAI,KAAK;AAC/D,MAAI,KAAK,GAAG;AACV,IAAG,oBAAU,GAAG,OAAO,CAAC;AAAA,EAC1B;AACF;AACA,SAAS,iCAAiC,IAAI,KAAK;AACjD,MAAI,KAAK,GAAG;AACV,IAAG,6BAAmB,GAAG,CAAC;AAC1B,IAAG,qBAAW,GAAG,gDAAgD,GAAG,GAAG,OAAO,CAAC;AAAA,EACjF;AACA,MAAI,KAAK,GAAG;AACV,UAAM,UAAU,IAAI;AACpB,UAAM,YAAY,IAAI;AACtB,UAAM,oBAAe,IAAI;AACzB,UAAM,oBAAe,IAAI;AACzB,IAAG,wBAAc,CAAC;AAClB,UAAM,kBAAqB,sBAAY,CAAC;AACxC,IAAG,qBAAW,oBAAoB,eAAe,EAAE,2BAA8B,0BAAgB,GAAGA,MAAK,SAAS,SAAS,CAAC;AAC5H,IAAG,oBAAU;AACb,IAAG,wBAAc,EAAE,sBAAiB,oBAAe,KAAK,IAAI,EAAE;AAAA,EAChE;AACF;AACA,SAAS,iCAAiC,IAAI,KAAK;AACjD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,GAAG,CAAC;AAChC,IAAG,6BAAmB,GAAG,CAAC;AAC1B,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,UAAU,IAAI;AACpB,UAAM,YAAY,IAAI;AACtB,UAAM,SAAY,wBAAc,CAAC;AACjC,IAAG,qBAAW,oCAAoC,OAAO,uBAAuB,SAAS,CAAC;AAC1F,IAAG,qBAAW,MAAM,OAAO,kBAAkB,SAAS,CAAC;AACvD,IAAG,sBAAY,mBAAmB,OAAO,gBAAgB,SAAS,CAAC,EAAE,SAAS,OAAO,kBAAkB,YAAY,OAAO,EAAE;AAC5H,IAAG,oBAAU,CAAC;AACd,IAAG,qBAAW,oBAAoB,QAAQ,OAAO;AAAA,EACnD;AACF;AACA,SAAS,2BAA2B,IAAI,KAAK;AAC3C,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;AAC1C,IAAG,2BAAiB,GAAG,kCAAkC,GAAG,GAAG,MAAM,MAAS,mCAAyB;AACvG,IAAG,uBAAa;AAChB,IAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,IAAG,2BAAiB,GAAG,kCAAkC,GAAG,GAAG,OAAO,GAAM,mCAAyB;AACrG,IAAG,uBAAa,EAAE;AAAA,EACpB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,oBAAU,CAAC;AACd,IAAG,qBAAW,OAAO,KAAK;AAC1B,IAAG,oBAAU,CAAC;AACd,IAAG,qBAAW,OAAO,KAAK;AAAA,EAC5B;AACF;AACA,SAAS,iCAAiC,IAAI,KAAK;AACjD,MAAI,KAAK,GAAG;AACV,IAAG,yBAAe,GAAG,OAAO,EAAE;AAC9B,IAAG,6BAAmB,GAAG,CAAC;AAC1B,IAAG,yBAAe,GAAG,OAAO,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE;AAC7D,IAAG,6BAAmB,GAAG,CAAC;AAC1B,IAAG,uBAAa,EAAE,EAAE,EAAE;AAAA,EACxB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,UAAU,IAAI;AACpB,UAAM,aAAa,IAAI;AACvB,UAAM,sBAAiB,IAAI;AAC3B,UAAM,sBAAiB,IAAI;AAC3B,UAAM,SAAY,wBAAc,CAAC;AACjC,UAAM,kBAAqB,sBAAY,CAAC;AACxC,IAAG,oBAAU;AACb,IAAG,qBAAW,oBAAoB,eAAe,EAAE,2BAA8B,0BAAgB,IAAIA,MAAK,SAAS,UAAU,CAAC;AAC9H,IAAG,oBAAU;AACb,IAAG,sBAAY,6BAA6B,EAAE,wBAAmB,sBAAiB,EAAE,EAAE,yCAAyC,OAAO,kBAAkB,UAAU;AAClK,IAAG,sBAAY,SAAS,OAAO,kBAAkB,aAAa,OAAO,EAAE;AACvE,IAAG,oBAAU,CAAC;AACd,IAAG,qBAAW,MAAM,OAAO,kBAAkB,UAAU,CAAC;AACxD,IAAG,sBAAY,mBAAmB,OAAO,gBAAgB,UAAU,CAAC;AACpE,IAAG,oBAAU,CAAC;AACd,IAAG,qBAAW,oBAAoB,QAAQ,OAAO;AAAA,EACnD;AACF;AACA,SAAS,2BAA2B,IAAI,KAAK;AAC3C,MAAI,KAAK,GAAG;AACV,IAAG,2BAAiB,GAAG,kCAAkC,GAAG,IAAI,OAAO,IAAO,mCAAyB;AAAA,EACzG;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,wBAAc;AAChC,IAAG,qBAAW,OAAO,KAAK;AAAA,EAC5B;AACF;AACA,SAAS,kCAAkC,IAAI,KAAK;AAClD,MAAI,KAAK,GAAG;AACV,UAAM,OAAU,2BAAiB;AACjC,IAAG,yBAAe,GAAG,mBAAmB,EAAE;AAC1C,IAAG,qBAAW,SAAS,SAAS,qEAAqE;AACnG,YAAM,WAAc,wBAAc,IAAI,EAAE;AACxC,aAAU,sBAAY,SAAS,OAAO,CAAC;AAAA,IACzC,CAAC,EAAE,WAAW,SAAS,qEAAqE,QAAQ;AAClG,MAAG,wBAAc,IAAI;AACrB,YAAM,SAAY,wBAAc;AAChC,aAAU,sBAAY,OAAO,WAAW,MAAM,CAAC;AAAA,IACjD,CAAC;AACD,IAAG,uBAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,WAAW,IAAI;AACrB,UAAM,QAAQ,IAAI;AAClB,UAAM,SAAY,wBAAc;AAChC,IAAG,sBAAY,iCAAiC,OAAO,gBAAgB,YAAY,EAAE,+BAA+B,OAAO,gBAAgB,UAAU;AACrJ,IAAG,qBAAW,YAAY,OAAO,eAAe,MAAM,QAAQ,IAAI,EAAE,EAAE,MAAM,OAAO,gBAAgB,KAAK,CAAC,EAAE,SAAS,KAAK,EAAE,SAAS,OAAO,kBAAkB,OAAO,SAAS,KAAK,CAAC,EAAE,SAAS,SAAS,aAAa,SAAS,KAAK,EAAE,YAAY,OAAO,kBAAkB,KAAK,EAAE,UAAU,OAAO,iBAAiB,OAAO,QAAQ,CAAC,EAAE,YAAY,SAAS,QAAQ,EAAE,gBAAgB,SAAS,YAAY,EAAE,iBAAiB,OAAO,cAAc,EAAE,iBAAiB,OAAO,iBAAiB,CAAC,OAAO,iBAAiB,OAAO,QAAQ,CAAC,EAAE,SAAS,SAAS,SAAS,OAAO,KAAK;AAC7iB,IAAG,sBAAY,iBAAiB,QAAQ,CAAC,EAAE,gBAAgB,OAAO,MAAM,MAAM,EAAE,iBAAiB,OAAO,kBAAkB,KAAK,CAAC,EAAE,iBAAiB,OAAO,iBAAiB,KAAK,EAAE,cAAc,SAAS,aAAa,IAAI,EAAE,mBAAmB,CAAC,SAAS,aAAa,SAAS,iBAAiB,SAAS,iBAAiB,IAAI,EAAE,iBAAiB,OAAO,iBAAiB,OAAO,QAAQ,IAAI,OAAO,IAAI;AAAA,EACzY;AACF;AACA,IAAM,eAAN,MAAM,sBAAqB,aAAa;AAAA,EACtC,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,qBAAqB,mBAAmB;AACtD,cAAQ,mCAA8B,iCAA+B,gCAAsB,aAAY,IAAI,qBAAqB,aAAY;AAAA,IAC9I;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;AAAA,IACpC,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAM,iBAAN,MAAM,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnB,UAAU,IAAI,QAAQ;AAAA;AAAA,EAEtB,gBAAgB;AAAA;AAAA,EAEhB,iBAAiB;AAAA;AAAA,EAEjB,gBAAgB;AAAA,EAChB,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,aAAuB,gBAAG,6BAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,gBAAe;AAAA,IACxB,YAAY;AAAA,EACd,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAMH,SAAS,kCAAkC,YAAY;AACrD,SAAO,cAAc,IAAI,eAAe;AAC1C;AAMA,IAAM,4BAA4B;AAAA,EAChC,SAAS;AAAA,EACT,MAAM,CAAC,CAAC,IAAI,SAAS,GAAG,IAAI,SAAS,GAAG,cAAc,CAAC;AAAA,EACvD,YAAY;AACd;AACA,IAAM,gBAAN,MAAM,uBAAsB,cAAc;AAAA,EACxC,QAAQ,OAAO,cAAc;AAAA,EAC7B,gBAAgB,OAAO,YAAY;AAAA,EACnC;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA;AAAA,EACA,cAAc;AACZ,UAAM;AACN,UAAM,cAAc,OAAO,sBAAsB;AACjD,gBAAY,KAAK,uBAAuB;AACxC,gBAAY,KAAK,qBAAqB;AACtC,UAAM,oBAAoB,OAAO,iBAAiB;AAClD,SAAK,oBAAoB,KAAK,MAAM,QAAQ,UAAU,MAAM,kBAAkB,aAAa,CAAC;AAAA,EAC9F;AAAA,EACA,kBAAkB;AAChB,SAAK,cAAc,QAAQ,KAAK,aAAa,IAAI;AAAA,EACnD;AAAA,EACA,cAAc;AACZ,SAAK,kBAAkB,YAAY;AACnC,SAAK,cAAc,eAAe,KAAK,WAAW;AAAA,EACpD;AAAA;AAAA,EAEA,MAAM,QAAQ,SAAS;AACrB,QAAI,QAAQ;AACV,WAAK,cAAc,SAAS,KAAK,aAAa,QAAQ,OAAO;AAAA,IAC/D,OAAO;AACL,WAAK,YAAY,cAAc,MAAM,OAAO;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA,EAEA,eAAe;AACb,WAAO,KAAK,iBAAiB,eAAe,OAAO,KAAK;AAAA,EAC1D;AAAA;AAAA,EAEA,iBAAiB;AACf,WAAO,KAAK,iBAAiB,eAAe,KAAK,QAAQ;AAAA,EAC3D;AAAA;AAAA,EAEA,kBAAkB;AAChB,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA;AAAA,EAEA,kBAAkB;AAChB,WAAO;AAAA,MACL,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,UAAU,KAAK;AAAA,IACjB;AAAA,EACF;AAAA,EACA,wBAAwB,OAAO;AAC7B,QAAI,SAAS,UAAU;AACrB,aAAO,GAAG,KAAK,QAAQ,CAAC;AAAA,IAC1B;AACA,QAAI,SAAS,QAAQ;AACnB,aAAO;AAAA,IACT;AACA,QAAI,SAAS,SAAS;AACpB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAO,SAAS,sBAAsB,mBAAmB;AAC9D,WAAO,KAAK,qBAAqB,gBAAe;AAAA,EAClD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,iBAAiB,CAAC;AAAA,IAC/B,WAAW,CAAC,QAAQ,OAAO,GAAG,iBAAiB;AAAA,IAC/C,UAAU;AAAA,IACV,cAAc,SAAS,2BAA2B,IAAI,KAAK;AACzD,UAAI,KAAK,GAAG;AACV,QAAG,qBAAW,UAAU,IAAI,SAAS,UAAU;AAAA,MACjD;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,cAAc;AAAA,MACd,eAAe;AAAA,MACf,OAAO;AAAA,MACP,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAe;AAAA,MACf,OAAO;AAAA,IACT;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,IACxC,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,aAAa,IAAI,GAAG,0BAA0B,uBAAuB,GAAG,oBAAoB,mBAAmB,GAAG,CAAC,GAAG,uBAAuB,GAAG,CAAC,GAAG,oBAAoB,yBAAyB,GAAG,CAAC,GAAG,gBAAgB,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,GAAG,0BAA0B,GAAG,CAAC,eAAe,MAAM,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,GAAG,kBAAkB,CAAC;AAAA,IACxY,UAAU,SAAS,uBAAuB,IAAI,KAAK;AACjD,UAAI,KAAK,GAAG;AACV,QAAG,oBAAU,GAAG,OAAO,CAAC;AACxB,QAAG,yBAAe,GAAG,KAAK,EAAE,GAAG,OAAO,CAAC;AACvC,QAAG,qBAAW,GAAG,sCAAsC,GAAG,GAAG,gBAAgB,CAAC,EAAE,GAAG,sCAAsC,GAAG,CAAC;AAC7H,QAAG,uBAAa,EAAE;AAClB,QAAG,yBAAe,GAAG,OAAO,CAAC;AAC7B,QAAG,qBAAW,GAAG,sCAAsC,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,sCAAsC,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,sCAAsC,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,sCAAsC,GAAG,GAAG,OAAO,CAAC;AAChP,QAAG,uBAAa;AAAA,MAClB;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,qBAAW,oBAAoB,IAAI,gBAAgB,CAAC,EAAE,qBAAqB,IAAI,aAAa;AAC/F,QAAG,oBAAU;AACb,QAAG,iCAAuB,wBAAwB,IAAI,OAAO,gBAAgB;AAC7E,QAAG,sBAAY,0BAA0B,IAAI,QAAQ;AACrD,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,IAAI,iBAAiB,IAAI,cAAc,IAAI,KAAK,IAAI,IAAI,CAAC;AAC1E,QAAG,oBAAU,CAAC;AACd,QAAG,sBAAY,yBAAyB,IAAI,MAAM,EAAE,2BAA2B,IAAI,QAAQ,EAAE,wBAAwB,IAAI,SAAS,OAAO;AACzI,QAAG,oBAAU;AACb,QAAG,yBAAe,UAAU,IAAI,eAAe,KAAK,IAAI,IAAI,aAAa,IAAI,IAAI,IAAI,OAAO;AAC5F,QAAG,oBAAU,CAAC;AACd,QAAG,wBAAc,IAAI,YAAY,IAAI,SAAS,UAAU,IAAI,EAAE;AAC9D,QAAG,oBAAU;AACb,QAAG,wBAAc,IAAI,UAAU,UAAU,IAAI,EAAE;AAAA,MACjD;AAAA,IACF;AAAA,IACA,cAAc,CAAC,WAAW,kBAAkB,OAAO;AAAA,IACnD,QAAQ,CAAC,6lIAA+lI;AAAA,IACxmI,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,WAAW;AAAA,QACX,QAAQ;AAAA,MACV;AAAA,MACA,eAAe,kBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,SAAS,CAAC,WAAW,kBAAkB,OAAO;AAAA,MAC9C,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,6lIAA+lI;AAAA,IAC1mI,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,cAAc,OAAO,WAAW;AAAA;AAAA,EAEhC;AAAA,EACA,cAAc;AAAA,EAAC;AAAA,EACf,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,eAAe,kBAAkB,EAAE,CAAC;AAAA,IACjD,QAAQ;AAAA,MACN,MAAM,CAAC,GAAG,kBAAkB,MAAM;AAAA,IACpC;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,YAAY,OAAO,WAAW;AAAA,EAC9B,cAAc;AAAA,EAAC;AAAA,EACf,OAAO,YAAO,SAAS,uBAAuB,mBAAmB;AAC/D,WAAO,KAAK,qBAAqB,iBAAgB;AAAA,EACnD;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,eAAe,kBAAkB,EAAE,CAAC;AAAA,EACnD,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AACH,IAAM,UAAN,MAAM,iBAAgB,QAAQ;AAAA,EAC5B,qBAAqB,OAAO,mBAAmB;AAAA,IAC7C,UAAU;AAAA,EACZ,CAAC;AAAA,EACD,oBAAoB,OAAO,gBAAgB;AAAA,EAC3C,cAAc,aAAa;AAAA;AAAA;AAAA,EAG3B,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQZ;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA,qBAAqB;AACnB,SAAK,cAAc,KAAK,SAAS,MAAM,QAAQ,KAAK,UAAU,MAAM;AAClE,aAAO,KAAK,SAAS,gBAAgB,KAAK,IAAI,WAAS,MAAM,iBAAiB,IAAI,GAAG,UAAU,KAAK,SAAS,aAAa,IAAI,CAAC;AAAA,IACjI,CAAC,CAAC,EAAE,UAAU,gBAAc;AAC1B,UAAI,cAAc,KAAK,gBAAgB,CAAC,KAAK,SAAS;AACpD,aAAK,UAAU,IAAI,eAAe,KAAK,aAAa,WAAW,KAAK,iBAAiB;AAAA,MACvF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,YAAY,YAAY;AAAA,EAC/B;AAAA;AAAA,EAEA,aAAa,SAAS,MAAM;AAC1B,UAAM,qBAAqB,KAAK,mBAAmB,aAAa,SAAS,IAAI;AAI7E,UAAM,mBAAmB,CAAC,EAAE,WAAW,QAAQ,WAAW,KAAK;AAC/D,WAAO,sBAAsB;AAAA,EAC/B;AAAA,EACA,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,gBAAgB,mBAAmB;AACjD,cAAQ,8BAAyB,4BAA0B,gCAAsB,QAAO,IAAI,qBAAqB,QAAO;AAAA,IAC1H;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,UAAU,CAAC;AAAA,IACxB,gBAAgB,SAAS,uBAAuB,IAAI,KAAK,UAAU;AACjE,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,cAAc,CAAC;AAC3C,QAAG,yBAAe,UAAU,gBAAgB,CAAC;AAAA,MAC/C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,YAAY,GAAG;AAChE,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,eAAe,GAAG;AAAA,MACrE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,UAAU,EAAE;AAAA,IACxB,QAAQ;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,UAAU,CAAC,SAAS;AAAA,IACpB,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,GAAG;AAAA,MACD,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IAClC,oBAAoBF;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,GAAG,iBAAiB,CAAC;AAAA,IAC/B,UAAU,SAAS,iBAAiB,IAAI,KAAK;AAC3C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,qBAAW,GAAG,gCAAgC,GAAG,GAAG,aAAa;AAAA,MACtE;AAAA,IACF;AAAA,IACA,cAAc,CAAC,eAAe;AAAA,IAC9B,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,SAAS,CAAC;AAAA,IAChF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,GAAG;AAAA,QACD,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,eAAe,kBAAkB;AAAA,MACjC,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,SAAS,CAAC,eAAe;AAAA,MACzB,MAAM;AAAA,QACJ,UAAU;AAAA;AAAA,MACZ;AAAA,MACA,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,QACrB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,aAAN,MAAM,oBAAmB,WAAW;AAAA,EAClC,UAAU,OAAO,MAAM;AAAA,EACvB,YAAY,OAAO,SAAS;AAAA,EAC5B,oBAAoB,OAAO,uBAAuB;AAAA,IAChD,UAAU;AAAA,EACZ,CAAC;AAAA,EACD;AAAA,EACA,eAAe,OAAO,KAAK;AAAA;AAAA,EAE3B,cAAc;AAAA;AAAA,EAEd;AAAA;AAAA,EAEA,SAAS;AAAA;AAAA,EAET,QAAQ,IAAI,UAAU;AAAA;AAAA,EAEtB;AAAA;AAAA,EAEA,gBAAgB,IAAI,aAAa;AAAA;AAAA,EAEjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhB,iBAAiB;AAAA;AAAA,EAEjB,iBAAiB,CAAC;AAAA;AAAA,EAElB,IAAI,oBAAoB;AACtB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,kBAAkB,OAAO;AAC3B,SAAK,qBAAqB,QAAQ,KAAK,KAAK,IAAI,QAAQ,OAAO;AAAA,EACjE;AAAA,EACA,qBAAqB;AAAA;AAAA,EAErB,YAAY,CAAC,OAAO,QAAQ,EAAE;AAAA,EAC9B,cAAc;AACZ,UAAM;AACN,UAAM,aAAa,OAAO,UAAU;AACpC,UAAM,WAAW,WAAW,cAAc,SAAS,YAAY;AAC/D,SAAK,cAAc,aAAa,yBAAyB,aAAa;AAAA,EACxE;AAAA,EACA,qBAAqB;AACnB,UAAM,mBAAmB;AACzB,SAAK,OAAO,QAAQ,CAAC;AAAA,MACnB;AAAA,MACA;AAAA,IACF,MAAM,KAAK,eAAe,IAAI,IAAI,WAAW;AAE7C,SAAK,MAAM,QAAQ,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM,KAAK,cAAc,CAAC;AAExF,SAAK,oBAAoB,KAAK,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM;AACxE,YAAM,WAAW,KAAK,sBAAsB;AAC5C,UAAI,aAAa,SAAS,aAAa,MAAM;AAC3C,aAAK,iBAAiB;AAAA,MACxB,OAAO;AACL,aAAK,aAAa,IAAI,IAAI;AAAA,MAC5B;AAAA,IACF,CAAC;AACD,SAAK,QAAQ,kBAAkB,MAAM;AACnC,UAAI,KAAK,sBAAsB,kBAAkB;AAC/C,mBAAW,MAAM;AAEf,eAAK,YAAY,cAAc,UAAU,IAAI,gCAAgC;AAE7E,eAAK,qBAAqB,KAAK,UAAU,OAAO,KAAK,YAAY,eAAe,iBAAiB,KAAK,oBAAoB;AAAA,QAC5H,GAAG,GAAG;AAAA,MACR;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,kBAAkB;AAChB,UAAM,gBAAgB;AAQtB,QAAI,OAAO,mBAAmB,YAAY;AACxC,UAAI,oBAAoB;AACxB,WAAK,oBAAoB,QAAQ,KAAK,UAAU,IAAI,GAAG,UAAU,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM,eAAe,MAAM;AAGtH,YAAI,CAAC,mBAAmB;AACtB,8BAAoB;AACpB,eAAK,cAAc,KAAK;AAAA,QAC1B;AACA,aAAK,cAAc;AAAA,MACrB,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AAAA,EACA,cAAc;AACZ,UAAM,YAAY;AAClB,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,iBAAiB,OAAO,MAAM;AAC5B,WAAO,KAAK,aAAa,KAAK,kBAAkB,SAAS,CAAC,KAAK;AAAA,EACjE;AAAA,EACA,wBAAwB;AACtB,QAAI,KAAK,sBAAsB,kBAAkB;AAC/C,aAAO;AAAA,IACT;AACA,QAAI,KAAK,mBAAmB;AAC1B,aAAO,KAAK;AAAA,IACd;AACA,WAAO,KAAK,gBAAgB,eAAe,UAAU;AAAA,EACvD;AAAA,EACA,uBAAuB,WAAS;AAC9B,UAAM,SAAS,MAAM;AACrB,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AAKA,UAAM,4BAA4B,KAAK,gBAAgB,gBAAgB,MAAM,iBAAiB,eAAe,OAAO,UAAU,SAAS,wCAAwC;AAC/K,UAAM,0BAA0B,KAAK,gBAAgB,cAAc,MAAM,iBAAiB,wBAAwB,OAAO,UAAU,SAAS,uCAAuC;AAGnL,UAAM,cAAc,6BAA6B,4BAA4B,KAAK,oBAAoB,KAAK,SAAO,IAAI,kBAAkB,MAAM;AAC9I,QAAI,YAAY;AACd,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,SAAK,aAAa,IAAI,KAAK;AAC3B,SAAK,cAAc,KAAK;AAAA,EAC1B;AAAA,EACA,OAAO,YAAO,SAAS,mBAAmB,mBAAmB;AAC3D,WAAO,KAAK,qBAAqB,aAAY;AAAA,EAC/C;AAAA,EACA,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,aAAa,GAAG,CAAC,sBAAsB,GAAG,CAAC,wBAAwB,GAAG,CAAC,IAAI,cAAc,EAAE,CAAC;AAAA,IACzG,gBAAgB,SAAS,0BAA0B,IAAI,KAAK,UAAU;AACpE,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,UAAU,SAAS,CAAC;AACtC,QAAG,yBAAe,UAAU,gBAAgB,CAAC;AAAA,MAC/C;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,SAAS;AAC1D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,SAAS;AAAA,MAC5D;AAAA,IACF;AAAA,IACA,WAAW,SAAS,iBAAiB,IAAI,KAAK;AAC5C,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,eAAe,CAAC;AAC/B,QAAG,sBAAYC,MAAK,CAAC;AAAA,MACvB;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,cAAc;AAC/D,QAAG,yBAAe,KAAQ,sBAAY,CAAC,MAAM,IAAI,sBAAsB;AAAA,MACzE;AAAA,IACF;AAAA,IACA,WAAW,CAAC,QAAQ,SAAS;AAAA,IAC7B,UAAU;AAAA,IACV,cAAc,SAAS,wBAAwB,IAAI,KAAK;AACtD,UAAI,KAAK,GAAG;AACV,QAAG,sBAAY,oBAAoB,IAAI,WAAW;AAClD,QAAG,sBAAY,oCAAoC,IAAI,sBAAsB,CAAC;AAC9E,QAAG,sBAAY,0BAA0B,IAAI,gBAAgB,YAAY,EAAE,wBAAwB,IAAI,gBAAgB,UAAU,EAAE,kCAAkC,IAAI,gBAAgB,gBAAgB,IAAI,iBAAiB,KAAK,EAAE,qCAAqC,IAAI,gBAAgB,gBAAgB,IAAI,iBAAiB,QAAQ,EAAE,sCAAsC,IAAI,mBAAmB,QAAQ,EAAE,yBAAyB,IAAI,aAAa,CAAC;AAAA,MACjc;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,eAAe;AAAA,MACf,OAAO;AAAA,MACP,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,mBAAmB;AAAA,IACrB;AAAA,IACA,SAAS;AAAA,MACP,eAAe;AAAA,IACjB;AAAA,IACA,UAAU,CAAC,cAAc,sBAAsB,sBAAsB;AAAA,IACrE,UAAU,CAAI,6BAAmB,CAAC;AAAA,MAChC,SAAS;AAAA,MACT,aAAa;AAAA,IACf,CAAC,CAAC,GAAM,oCAA0B;AAAA,IAClC,oBAAoBD;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,gBAAgB,EAAE,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,GAAG,yCAAyC,GAAG,CAAC,GAAG,kCAAkC,GAAG,CAAC,QAAQ,YAAY,GAAG,kCAAkC,GAAG,MAAM,OAAO,GAAG,CAAC,GAAG,oBAAoB,yBAAyB,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC,QAAQ,YAAY,GAAG,kCAAkC,GAAG,IAAI,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,gCAAgC,GAAG,CAAC,QAAQ,YAAY,GAAG,gCAAgC,GAAG,IAAI,GAAG,CAAC,GAAG,sBAAsB,GAAG,CAAC,GAAG,SAAS,WAAW,YAAY,MAAM,SAAS,SAAS,SAAS,YAAY,UAAU,YAAY,gBAAgB,iBAAiB,iBAAiB,OAAO,CAAC;AAAA,IACpvB,UAAU,SAAS,oBAAoB,IAAI,KAAK;AAC9C,UAAI,KAAK,GAAG;AACV,QAAG,0BAAgB;AACnB,QAAG,qBAAW,GAAG,mCAAmC,GAAG,CAAC,EAAE,GAAG,4BAA4B,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,4BAA4B,GAAG,CAAC,EAAE,GAAG,mCAAmC,GAAG,IAAI,eAAe,MAAM,GAAM,gCAAsB;AAAA,MAC9O;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,wBAAc,IAAI,YAAY,IAAI,EAAE;AACvC,QAAG,oBAAU;AACb,QAAG,yBAAe,UAAU,IAAI,iBAAiB,eAAe,IAAI,YAAY,aAAa,IAAI,EAAE;AAAA,MACrG;AAAA,IACF;AAAA,IACA,cAAc,CAAC,kBAAkB,aAAa;AAAA,IAC9C,QAAQ,CAAC,k3LAAs3L;AAAA,IAC/3L,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,YAAY,CAAC;AAAA,IACnF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,kCAAkC;AAAA,QAClC,gCAAgC;AAAA,QAChC,0CAA0C;AAAA,QAC1C,6CAA6C;AAAA,QAC7C,8CAA8C;AAAA,QAC9C,iCAAiC;AAAA,QACjC,4CAA4C;AAAA,QAC5C,2BAA2B;AAAA,QAC3B,QAAQ;AAAA,MACV;AAAA,MACA,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,aAAa;AAAA,MACf,CAAC;AAAA,MACD,eAAe,kBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,SAAS,CAAC,kBAAkB,aAAa;AAAA,MACzC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,k3LAAs3L;AAAA,IACj4L,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,aAAa;AAAA,IACtB,CAAC;AAAA,IACD,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,SAAS;AAAA,QACd,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,QACrB,aAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAGH,IAAM,iBAAN,MAAM,wBAAuB,eAAe;AAAA,EAC1C,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,uBAAuB,mBAAmB;AACxD,cAAQ,qCAAgC,mCAAiC,gCAAsB,eAAc,IAAI,qBAAqB,eAAc;AAAA,IACtJ;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,UAAU,kBAAkB,EAAE,CAAC;AAAA,IAC5C,WAAW,CAAC,GAAG,kBAAkB;AAAA,IACjC,UAAU;AAAA,IACV,cAAc,SAAS,4BAA4B,IAAI,KAAK;AAC1D,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,QAAQ,IAAI,IAAI;AAAA,MACpC;AAAA,IACF;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,gBAAgB,CAAC;AAAA,IACvF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAEH,IAAM,qBAAN,MAAM,4BAA2B,mBAAmB;AAAA,EAClD,OAAO,YAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,2BAA2B,mBAAmB;AAC5D,cAAQ,yCAAoC,uCAAqC,gCAAsB,mBAAkB,IAAI,qBAAqB,mBAAkB;AAAA,IACtK;AAAA,EACF,GAAG;AAAA,EACH,OAAO,YAAsB,gBAAG,4BAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,UAAU,sBAAsB,EAAE,CAAC;AAAA,IAChD,WAAW,CAAC,GAAG,sBAAsB;AAAA,IACrC,UAAU;AAAA,IACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,yBAAe,QAAQ,IAAI,IAAI;AAAA,MACpC;AAAA,IACF;AAAA,IACA,UAAU,CAAI,oCAA0B;AAAA,EAC1C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,OAAO,YAAO,SAAS,yBAAyB,mBAAmB;AACjE,WAAO,KAAK,qBAAqB,mBAAkB;AAAA,EACrD;AAAA,EACA,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,MAAM;AAAA,EACR,CAAC;AAAA,EACD,OAAO,YAAsB,gBAAG,2BAAiB;AAAA,IAC/C,WAAW,CAAC,2BAA2B,iBAAiB;AAAA,IACxD,SAAS,CAAC,iBAAiB,cAAc,kBAAkB,eAAe,iBAAiB,YAAY,eAAe,eAAe;AAAA,EACvI,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,iBAAiB,cAAc,kBAAkB,eAAe,iBAAiB,SAAS,cAAc,YAAY,gBAAgB,oBAAoB,eAAe,gBAAgB,cAAc;AAAA,MAC/M,SAAS,CAAC,iBAAiB,SAAS,cAAc,YAAY,gBAAgB,oBAAoB,eAAe,gBAAgB,cAAc;AAAA,MAC/I,WAAW,CAAC,2BAA2B,iBAAiB;AAAA,IAC1D,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;;;ACzhCS,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,CAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAW,IAAA,uBAAA,EAAO;;;;AADf,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,qBAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAOJ,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,mCAAA;AACF,IAAA,uBAAA;;;;;AAMA,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,kCAAA;AACF,IAAA,uBAAA;;;;;AAMA,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,yCAAA;AACF,IAAA,uBAAA;;;;;AAMI,IAAA,oBAAA,GAAA,eAAA,EAAA;;;;;AACA,IAAA,yBAAA,GAAA,MAAA;AAAyB,IAAA,iBAAA,GAAA,sBAAA;AAAoB,IAAA,uBAAA;;;;;;AAhD3D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA8C,GAAA,UAAA,EAClC,GAAA,iBAAA,EACS,GAAA,gBAAA;AAEb,IAAA,oBAAA,GAAA,WAAA,CAAA;AACA,IAAA,iBAAA,GAAA,yBAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,mBAAA;AACE,IAAA,iBAAA,GAAA,mDAAA;AACF,IAAA,uBAAA,EAAoB;AAGtB,IAAA,yBAAA,GAAA,kBAAA;AAEE,IAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,OAAA,CAAA;AAKA,IAAA,yBAAA,IAAA,QAAA,CAAA;AAA+B,IAAA,qBAAA,YAAA,SAAA,+DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,mBAAA,CAAoB;IAAA,CAAA;AAC7D,IAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA;AAC5B,IAAA,oBAAA,IAAA,SAAA,CAAA;AACA,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,aAAA,CAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AACvB,IAAA,oBAAA,IAAA,SAAA,EAAA;AACA,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,aAAA,CAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,IAAA,iBAAA,IAAA,qBAAA;AAAmB,IAAA,uBAAA;AAC9B,IAAA,oBAAA,IAAA,SAAA,EAAA;AACA,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,aAAA,CAAA;AAGF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,UAAA,EAAA,EAC4E,IAAA,OAAA,EAAA;AAEhG,IAAA,qBAAA,IAAA,mDAAA,GAAA,GAAA,eAAA,EAAA,EAA6C,IAAA,4CAAA,GAAA,GAAA,QAAA,CAAA;AAE/C,IAAA,uBAAA,EAAM,EACC,EACL,EACD,EACU,EACV;;;;;;;AAlDI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAUL,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,KAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,UAAA;AAIU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,UAAA,OAAA,WAAA,IAAA,YAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,UAAA,OAAA,WAAA,IAAA,aAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,UAAA,OAAA,WAAA,IAAA,mBAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAM4C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,aAAA,CAAA,OAAA,WAAA,KAAA;AAExB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACrB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;;;;;AAuBT,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwB,GAAA,QAAA,EAAA;AACF,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA;AACnC,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAuB,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA,EAAO;;;;AAD5B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,KAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,QAAA;;;;;AAMvB,IAAA,yBAAA,GAAA,IAAA;AAA8C,IAAA,iBAAA,CAAA;AAAY,IAAA,uBAAA;;;;AAAZ,IAAA,oBAAA;AAAA,IAAA,4BAAA,WAAA;;;;;AAI9C,IAAA,yBAAA,GAAA,IAAA;AAA+C,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA;;;;;AAdrD,IAAA,yBAAA,GAAA,UAAA;AACE,IAAA,qBAAA,GAAA,6DAAA,GAAA,GAAA,eAAA,EAAA;AAMA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0B,GAAA,IAAA;AACpB,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AACd,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,MAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AACd,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,IAAA,qDAAA,GAAA,GAAA,MAAA,EAAA;AACF,IAAA,uBAAA,EAAK,EACD;;;;AANuB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,UAAA;AAIC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,UAAA;;;;;AAuB5B,IAAA,yBAAA,GAAA,IAAA;AAAyC,IAAA,iBAAA,CAAA;AAAO,IAAA,uBAAA;;;;AAAP,IAAA,oBAAA;AAAA,IAAA,4BAAA,MAAA;;;;;AAL7C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqE,GAAA,IAAA;AAC/D,IAAA,iBAAA,CAAA;AAA8B,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAoB,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;AACpC,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA;AACjB,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,GAAA,gDAAA,GAAA,GAAA,MAAA,EAAA;AACF,IAAA,uBAAA,EAAK;;;;AALD,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,OAAA,OAAA,QAAA,OAAA,OAAA,EAAA;AACgB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,QAAA;AAGE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;;;;;AAoBpB,IAAA,yBAAA,GAAA,YAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,CAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,MAAA,GAAA;;;;;AAQF,IAAA,yBAAA,GAAA,YAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,CAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AAFW,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,MAAA,GAAA;;;;;AAeE,IAAA,yBAAA,GAAA,IAAA;AAA2C,IAAA,iBAAA,CAAA;AAAY,IAAA,uBAAA;;;;AAAZ,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA;;;;;AARjD,IAAA,yBAAA,GAAA,qBAAA,EAA+E,GAAA,4BAAA,EACjD,GAAA,iBAAA;AACT,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;AACnC,IAAA,yBAAA,GAAA,uBAAA;AAAuB,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA,EAAwB;AAEjE,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA4B,GAAA,IAAA;AACtB,IAAA,iBAAA,GAAA,wBAAA;AAAsB,IAAA,uBAAA;AAC1B,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,IAAA,iEAAA,GAAA,GAAA,MAAA,EAAA;AACF,IAAA,uBAAA,EAAK,EACD;;;;AARa,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,MAAA,IAAA;AACM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,QAAA;AAKI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,QAAA,SAAA;;;;;AA2B3B,IAAA,yBAAA,GAAA,UAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,UAAA,MAAA,GAAA;;;;;AATR,IAAA,yBAAA,GAAA,YAAA,EAAA,EAA6E,GAAA,iBAAA,EAC1D,GAAA,gBAAA;AACC,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;AAC7B,IAAA,yBAAA,GAAA,mBAAA;AAAmB,IAAA,iBAAA,CAAA;AAAiC,IAAA,uBAAA,EAAoB;AAE1E,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,GAAA;AACb,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;AACvB,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,4DAAA,GAAA,GAAA,YAAA,EAAA;AAGF,IAAA,uBAAA,EAAM,EACW;;;;AAVD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,IAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,iBAAA,SAAA,YAAA,GAAA;AAGhB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,SAAA,WAAA;AAE2B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,SAAA,cAAA;;;;;;AA1H1C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAoD,GAAA,YAAA,EAAA,EAEnB,GAAA,iBAAA,EACZ,GAAA,gBAAA;AAEb,IAAA,oBAAA,GAAA,WAAA,CAAA;AACA,IAAA,iBAAA,GAAA,wBAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,eAAA,EAAA;AAEd,IAAA,qBAAA,GAAA,+CAAA,IAAA,GAAA,YAAA,EAAA;AAkBF,IAAA,uBAAA,EAAc,EACG;AAIrB,IAAA,yBAAA,GAAA,YAAA,EAAA,EAA+B,IAAA,iBAAA,EACZ,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,iBAAA,IAAA,sBAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,OAAA,EAAA;AAEd,IAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,OAAA,EAAA;AAQF,IAAA,uBAAA,EAAM,EACW;AAIrB,IAAA,yBAAA,IAAA,YAAA,EAAA,EAA+B,IAAA,iBAAA,EACZ,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,iBAAA,IAAA,sBAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,OAAA,EAAA,EACY,IAAA,OAAA,EAAA,EACA,IAAA,IAAA;AACpB,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAClB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,YAAA,EAAA;AAIF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,IAAA;AACpB,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,YAAA,EAAA;AAIF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAgC,IAAA,IAAA;AAC1B,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA;AACpB,IAAA,qBAAA,IAAA,2DAAA,IAAA,GAAA,uBAAA,EAAA;AAYF,IAAA,uBAAA,EAAM,EACF,EACW;AAIrB,IAAA,yBAAA,IAAA,YAAA,EAAA,EAA+B,IAAA,iBAAA,EACZ,IAAA,gBAAA;AAEb,IAAA,oBAAA,IAAA,WAAA,CAAA;AACA,IAAA,iBAAA,IAAA,4BAAA;AACF,IAAA,uBAAA,EAAiB;AAEnB,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,OAAA,EAAA;AAEd,IAAA,qBAAA,IAAA,gDAAA,IAAA,GAAA,YAAA,EAAA;AAcF,IAAA,uBAAA,EAAM,EACW;AAGrB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,UAAA,EAAA;AACA,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AACzD,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA0C,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAS,EAC1F;;;;AAlIS,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAMmB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,QAAA;AA0BnB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,eAAA;AAMY,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,SAAA;AAgBZ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AASuB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,eAAA,OAAA;AAUA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,eAAA,OAAA;AASO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,eAAA,WAAA;AAqB9B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAMkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,WAAA,gBAAA;;;AAiNnC,IAAO,sBAAP,MAAO,qBAAmB;EAiBpB;EACA;EACA;EACA;;EAlBV,kBAAkB;EAClB,cAAc;EACd,cAAc;EACd,cAAc;EACd,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;EACf,wBAAwB;EAExB;EACA,aAAgC;EAChC,YAAY;EACZ,QAAuB;EAEvB,YACU,IACA,mBACA,QACA,OAAqB;AAHrB,SAAA,KAAA;AACA,SAAA,oBAAA;AACA,SAAA,SAAA;AACA,SAAA,QAAA;AAER,SAAK,aAAa,KAAK,GAAG,MAAM;MAC9B,YAAY,CAAC,IAAI,WAAW,QAAQ;MACpC,aAAa,CAAC,IAAI,WAAW,QAAQ;MACrC,mBAAmB,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,CAAC,CAAC;KAChE;EACH;EAEA,WAAQ;AAEN,SAAK,MAAM,SAAS,UAAU,YAAS;AACrC,YAAM,SAAS,OAAO,IAAI,IAAI;AAC9B,UAAI,QAAQ;AACV,aAAK,eAAe,MAAM;MAC5B;IACF,CAAC;EACH;EAEA,qBAAkB;AAChB,QAAI,KAAK,WAAW,OAAO;AACzB,WAAK,YAAY;AACjB,WAAK,QAAQ;AAEb,WAAK,kBAAkB,mBAAmB,KAAK,WAAW,KAAK,EAAE,UAAU;QACzE,MAAM,CAAC,eAAc;AACnB,eAAK,aAAa;AAClB,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,iCAAiC,KAAK;AACpD,cAAI,MAAM,WAAW,KAAK;AACxB,iBAAK,QAAQ;UACf,WAAW,MAAM,WAAW,KAAK;AAC/B,iBAAK,QAAQ;UACf,OAAO;AACL,iBAAK,QAAQ,MAAM,OAAO,WAAW;UACvC;AACA,eAAK,YAAY;QACnB;OACD;IACH;EACF;EAEA,eAAe,IAAU;AACvB,SAAK,YAAY;AACjB,SAAK,QAAQ;AAEb,SAAK,kBAAkB,cAAc,EAAE,EAAE,UAAU;MACjD,MAAM,CAAC,eAAc;AACnB,aAAK,aAAa;AAClB,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,8BAA8B,KAAK;AACjD,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEA,kBAAe;AACb,SAAK,aAAa;AAClB,SAAK,WAAW,MAAK;EACvB;EAEA,iBAAc;AACZ,QAAI,KAAK,YAAY;AACnB,WAAK,kBAAkB,eAAe,KAAK,WAAW,IAAI;QACxD,UAAU,KAAK,WAAW;QAC1B,aAAa,KAAK,WAAW;OAC9B,EAAE,UAAU;QACX,MAAM,CAAC,gBAAe;AACpB,eAAK,aAAa;QAEpB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,6BAA6B,KAAK;AAChD,eAAK,QAAQ;QACf;OACD;IACH;EACF;;qCAtGW,sBAAmB,4BAAA,WAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,CAAA;EAAA;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,uBAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,cAAA,WAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,cAAA,eAAA,0BAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,eAAA,eAAA,wBAAA,GAAA,CAAA,YAAA,IAAA,QAAA,UAAA,mBAAA,qBAAA,OAAA,GAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,UAAA,GAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,YAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,YAAA,IAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,eAAA,UAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,SAAA,aAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,cAAA,IAAA,GAAA,OAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,WAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AA/X5B,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,MAAA,qBAAA,GAAA,oCAAA,IAAA,GAAA,OAAA,CAAA,EAA8C,GAAA,oCAAA,IAAA,IAAA,OAAA,CAAA;AAmMhD,MAAA,uBAAA;;;AAnMQ,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,UAAA;AA0DA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,UAAA;;;IA1ER;IAAY;IAAA;IACZ;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IAAa;IAAA;IAAA;IAAA;IAAA;IACb;IAAkB;IAAA;IAAA;IAClB;IAAc;IACd;IAAe;IACf;IAAwB;IACxB;IAAc;IACd;IACA;IAAgB;IAAA;IAAA;IAChB;IAAkB;IAAA;IAAA;IAAA;IAClB;IAAiB;EAAA,GAAA,QAAA,CAAA,wuGAAA,EAAA,CAAA;;;sEAkYR,qBAAmB,CAAA;UAjZ/B;uBACW,mBAAiB,YACf,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAuMT,QAAA,CAAA,ioFAAA,EAAA,CAAA;;;;6EAyLU,qBAAmB,EAAA,WAAA,uBAAA,UAAA,iFAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;ACxY1B,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA,EAAI;;;;;;AAI3B,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AADjD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AA6BnB,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,MAAA,GAAA;;;;;AAWJ,IAAA,oBAAA,GAAA,oBAAA,EAAA;;;;AAGE,IAAA,qBAAA,SAAA,OAAA,cAAA;;;;;;AA2BN,IAAA,yBAAA,GAAA,YAAA,CAAA,EAA+C,GAAA,iBAAA,EAC5B,GAAA,gBAAA;AACC,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA,EAAiB;AAE7C,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EACK,GAAA,GAAA,EAChB,GAAA,QAAA;AAAQ,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AAAU,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AACrD,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,QAAA;AAAQ,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAAU,IAAA,iBAAA,EAAA;;AAA8B,IAAA,uBAAA;AAChE,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAwB,IAAA,UAAA,EAAA;AAIpB,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,WAAA,CAAY;IAAA,CAAA;AAGrB,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,eAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,oFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAGnB,IAAA,iBAAA,IAAA,aAAA;AACF,IAAA,uBAAA,EAAS,EACL,EACF,EACW;;;;AAtBgB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,UAAA,UAAA,EAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,OAAA,UAAA,SAAA,GAAA,EAAA;AAM9B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,aAAA;AAES,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA;AAOT,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,UAAA;;;;;;AAxFZ,IAAA,kCAAA,CAAA;AAEE,IAAA,yBAAA,GAAA,YAAA,CAAA,EAA6B,GAAA,iBAAA,EACV,GAAA,gBAAA;AACC,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA,EAAiB;AAE5C,IAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,EAAA,EACc,GAAA,SAAA,IAAA,CAAA;AAI1B,IAAA,qBAAA,UAAA,SAAA,qEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAHlC,IAAA,uBAAA;AAOA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,uEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,eAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,aAAA,MAAA,CAAiB;IAAA,CAAA;AAG1B,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,IAAA,eAAA;AACF,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,sDAAA,GAAA,GAAA,QAAA,EAAA;AAGA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,CAAA;AAGnB,IAAA,iBAAA,IAAA,UAAA;AACF,IAAA,uBAAA,EAAS;AAEX,IAAA,qBAAA,IAAA,kEAAA,GAAA,GAAA,oBAAA,EAAA;AAKF,IAAA,uBAAA,EAAmB;AAIrB,IAAA,yBAAA,IAAA,YAAA,CAAA,EAA6B,IAAA,iBAAA,EACV,IAAA,gBAAA;AACC,IAAA,iBAAA,IAAA,qBAAA;AAAmB,IAAA,uBAAA,EAAiB;AAEtD,IAAA,yBAAA,IAAA,kBAAA,EAAkB,IAAA,KAAA,EAAA;AAEd,IAAA,iBAAA,IAAA,iGAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAGvB,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACQ;AAIrB,IAAA,qBAAA,IAAA,0DAAA,IAAA,GAAA,YAAA,EAAA;;;;;AA/CQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,WAAA;AAES,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAGc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,YAAA;AAOvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,CAAA,OAAA,gBAAA,OAAA,WAAA;AAMD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AAoBD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,YAAA;AAEkE,IAAA,oBAAA;AAAA,IAAA,sBAAA,YAAA,OAAA,YAAA;AAAzD,IAAA,qBAAA,QAAA,OAAA,eAAA,OAAA,YAAA,OAAA,OAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,kBAAA,eAAA,GAAA;AAMwB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;;;AAyHhC,IAAO,uBAAP,MAAO,sBAAoB;EAmBrB;EACA;;EAlBV,eAAe;EACf,iBAAiB;EACjB,UAAU;EACV,YAAY;;EAGZ,YAAY;EACZ,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,QAAuB;EACvB,iBAAiB;EACjB,eAA4B;EAC5B,YAAuB;EAEvB,YACU,WACA,aAAwB;AADxB,SAAA,YAAA;AACA,SAAA,cAAA;EACP;EAEH,WAAQ;AACN,SAAK,cAAa;EACpB;EAEQ,gBAAa;AACnB,SAAK,YAAY;AACjB,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,MAAM;AACR,WAAK,UAAU,MAAM,KAAK,EAAE,EAAE,UAAU;QACtC,MAAM,CAAC,OAAM;AACX,eAAK,YAAY;AACjB,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,qBAAqB,KAAK;AACxC,eAAK,QAAQ;AACb,eAAK,YAAY;QACnB;OACD;IACH,OAAO;AACL,WAAK,YAAY;IACnB;EACF;EAEA,eAAe,OAAY;AACzB,UAAM,QAAQ,MAAM;AACpB,QAAI,MAAM,SAAS,MAAM,MAAM,SAAS,GAAG;AACzC,WAAK,eAAe,MAAM,MAAM,CAAC;IACnC;EACF;EAEA,WAAQ;AACN,QAAI,CAAC,KAAK;AAAc;AAExB,SAAK,cAAc;AACnB,SAAK,iBAAiB;AAEtB,SAAK,UAAU,SAAS,KAAK,YAAY,EAAE,UAAU;MACnD,MAAM,CAAC,UAAS;AACd,cAAM,WAAW,KAAK,UAAU,kBAAkB,KAAK;AACvD,YAAI,UAAU;AACZ,eAAK,iBAAiB;QACxB;MACF;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,uBAAuB,KAAK;AAC1C,aAAK,QAAQ;AACb,aAAK,cAAc;MACrB;MACA,UAAU,MAAK;AACb,aAAK,cAAc;AACnB,aAAK,eAAe;AACpB,aAAK,cAAa;MACpB;KACD;EACH;EAEA,eAAY;AACV,SAAK,eAAe;AACpB,SAAK,QAAQ;AAEb,SAAK,UAAU,aAAY,EAAG,UAAU;MACtC,MAAM,CAAC,aAAY;AACjB,aAAK,YAAY;UACf,IAAI,SAAS,GAAG;UAChB,UAAU,SAAS,GAAG;UACtB,UAAU,SAAS,GAAG;UACtB,iBAAiB,CAAA;UACjB,QAAQ,KAAK,YAAY,eAAc,GAAI,MAAM;UACjD,SAAS,SAAS,GAAG;UACrB,aAAa,SAAS,GAAG;UACzB,WAAW,oBAAI,KAAI;UACnB,WAAW,oBAAI,KAAI;;AAErB,aAAK,eAAe;MACtB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,wBAAwB,KAAK;AAC3C,aAAK,QAAQ;AACb,aAAK,eAAe;MACtB;KACD;EACH;EAEA,aAAU;AACR,QAAI,CAAC,KAAK;AAAW;AAErB,SAAK,gBAAgB;AACrB,SAAK,UAAU,WAAW,KAAK,UAAU,EAAE,EAAE,UAAU;MACrD,MAAM,CAAC,SAAQ;AACb,aAAK,UAAU,SAAS,MAAM,KAAK,UAAW,QAAQ;AACtD,aAAK,gBAAgB;MACvB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,yBAAyB,KAAK;AAC5C,aAAK,QAAQ;AACb,aAAK,gBAAgB;MACvB;KACD;EACH;EAEA,WAAQ;AACN,QAAI,CAAC,KAAK;AAAW;AAErB,SAAK,aAAa;AAClB,SAAK,UAAU,SAAQ,EAAG,UAAU;MAClC,MAAM,MAAK;AACT,aAAK,YAAY;AACjB,aAAK,aAAa;MACpB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,sBAAsB,KAAK;AACzC,aAAK,QAAQ;AACb,aAAK,aAAa;MACpB;KACD;EACH;EAEA,eAAY;AACV,SAAK,QAAQ;AACb,SAAK,cAAa;EACpB;;qCAhJW,uBAAoB,4BAAA,SAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAApB,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,QAAA,UAAA,wBAAA,GAAA,WAAA,QAAA,GAAA,QAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,UAAA,GAAA,SAAA,UAAA,GAAA,CAAA,QAAA,eAAA,GAAA,SAAA,GAAA,MAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,SAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,QAAA,GAAA,SAAA,UAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAzM7B,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,MAAA,qBAAA,GAAA,qCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,qCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,8CAAA,IAAA,IAAA,gBAAA,CAAA;AAuG7C,MAAA,uBAAA;;;AA7GQ,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMS,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IAvBjB;IAAY;IAAA;IACZ;IAAa;IAAA;IAAA;IAAA;IACb;IAAe;IACf;IAAoB;IACpB;IAAwB;IACxB;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,mgDAAA,EAAA,CAAA;;;sEA4MR,sBAAoB,CAAA;UAtNhC;uBACW,oBAAkB,YAChB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiHT,QAAA,CAAA,m7CAAA,EAAA,CAAA;;;;6EAyFU,sBAAoB,EAAA,WAAA,wBAAA,UAAA,mFAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;AC3K3B,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,yBAAA;AAAuB,IAAA,uBAAA,EAAI;;;;;;AAIhC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,iEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,CAAkB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AADrD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAMzB,IAAA,yBAAA,GAAA,YAAA,EAAA,EAA4E,GAAA,OAAA,EAAA,EAC1C,GAAA,OAAA,EAAA,EACR,GAAA,IAAA;AAChB,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA;AAC9B,IAAA,yBAAA,GAAA,KAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAI;AAEN,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiC,IAAA,OAAA,EAAA;AAE7B,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;;AAAyC,IAAA,uBAAA,EAAO;AAExD,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;;AAA8C,IAAA,uBAAA,EAAO,EACvD,EACF;;;;;AArBE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,eAAA,OAAA,OAAA,OAAA,eAAA,IAAA,KAAA;AAEO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,eAAA,OAAA,OAAA,OAAA,eAAA,IAAA,YAAA,OAAA,OAAA,eAAA,IAAA,SAAA,SAAA,GAAA;AAGsB,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,YAAA,CAAA;AACf,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,cAAA,eAAA,MAAA,CAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,eAAA,QAAA,GAAA;AAMS,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,aAAA,sBAAA,IAAA,IAAA,eAAA,SAAA,GAAA,EAAA;AAGG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,kBAAA,sBAAA,IAAA,IAAA,eAAA,SAAA,GAAA,EAAA;;;;;AAMZ,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+D,GAAA,GAAA;AAC1D,IAAA,iBAAA,GAAA,sCAAA;AAAoC,IAAA,uBAAA;AACvC,IAAA,yBAAA,GAAA,UAAA,EAAA;AACE,IAAA,iBAAA,GAAA,eAAA;AACF,IAAA,uBAAA,EAAS;;;;;AAjCb,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,qBAAA,GAAA,mDAAA,IAAA,IAAA,YAAA,CAAA,EAA4E,GAAA,8CAAA,GAAA,GAAA,OAAA,EAAA;AAkC9E,IAAA,uBAAA;;;;AAlCoC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,YAAA;AA4B5B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA,WAAA,CAAA;;;AAoIR,IAAO,0BAAP,MAAO,yBAAuB;EAcxB;EACA;EAdV,eAA8B,CAAA;EAC9B,YAAY;EACZ,QAAuB;;EAGvB,UAAU;EACV,UAAU;EACV,UAAU;EACV,YAAY;EACZ,aAAa;EACb,gBAAgB;EAEhB,YACU,oBACA,aAAwB;AADxB,SAAA,qBAAA;AACA,SAAA,cAAA;EACP;EAEH,WAAQ;AACN,SAAK,iBAAgB;EACvB;EAEA,mBAAgB;AACd,SAAK,YAAY;AACjB,SAAK,QAAQ;AAEb,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,CAAC,MAAM;AACT,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB;IACF;AAEA,SAAK,mBAAmB,oBAAoB,KAAK,EAAE,EAAE,UAAU;MAC7D,MAAM,CAAC,iBAAgB;AACrB,aAAK,eAAe;AACpB,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,+BAA+B,KAAK;AAClD,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEA,cAAc,QAAc;AAC1B,YAAQ,OAAO,YAAW,GAAI;MAC5B,KAAK;AACH,eAAO,KAAK;MACd,KAAK;AACH,eAAO,KAAK;MACd;AACE,eAAO,KAAK;IAChB;EACF;;qCAvDW,0BAAuB,4BAAA,kBAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAvB,0BAAuB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,wBAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,SAAA,oBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,cAAA,wBAAA,CAAA,GAAA,UAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAjLhC,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAoC,GAAA,IAAA;AAC9B,MAAA,iBAAA,GAAA,iBAAA;AAAe,MAAA,uBAAA;AAGnB,MAAA,qBAAA,GAAA,wCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,wCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,wCAAA,GAAA,GAAA,OAAA,CAAA;AA0C7C,MAAA,uBAAA;;;AAhDQ,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IA1BR;IAAY;IAAA;IAAA;IACZ;IAAY;IACZ;IAAa;IACb;IACA;IAAe;IACf;IACA;IAAwB;IACxB;IAAiB;EAAA,GAAA,QAAA,CAAA,4tEAAA,EAAA,CAAA;;;sEAoLR,yBAAuB,CAAA;UA/LnC;uBACW,uBAAqB,YACnB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsDT,QAAA,CAAA,+iEAAA,EAAA,CAAA;;;;6EA4HU,yBAAuB,EAAA,WAAA,2BAAA,UAAA,yFAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;ACpM9B,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,aAAA;AACA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,4BAAA;AAA0B,IAAA,uBAAA,EAAI;;;;;;AAInC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2C,GAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,CAAA;AAAS,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAmC,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA,EAAS;;;;AADnD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA;;;;;AAMzB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA2D,GAAA,GAAA;AACtD,IAAA,iBAAA,GAAA,8CAAA;AAA4C,IAAA,uBAAA,EAAI;;;;;AAcjD,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA,EAAO;;;;;AAD1B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,UAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,QAAA;;;;;AAQV,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqD,GAAA,GAAA;AAChD,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA,EAAI;;;;AAAvB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,KAAA;;;;;;AAGL,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAsE,GAAA,UAAA,CAAA;AACjC,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,eAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,aAAA,IAAiC,UAAU,CAAC;IAAA,CAAA;AACtF,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,GAAA,UAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgC,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,eAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,aAAA,IAAiC,UAAU,CAAC;IAAA,CAAA;AACnF,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,iBAAA,GAAA,UAAA;AACF,IAAA,uBAAA,EAAS;;;;AANE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;;;;;AA/Bf,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAiE,GAAA,OAAA,EAAA,EACjC,GAAA,IAAA;AACxB,IAAA,iBAAA,CAAA;AAAsB,IAAA,uBAAA;AAC1B,IAAA,yBAAA,GAAA,QAAA,EAAA;AAA2B,IAAA,iBAAA,CAAA;AAAyB,IAAA,uBAAA,EAAO;AAG7D,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA+B,GAAA,OAAA,EAAA;AAE3B,IAAA,oBAAA,GAAA,WAAA,EAAA;AACA,IAAA,yBAAA,GAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;;AAA2C,IAAA,uBAAA,EAAO;AAE1D,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA;AAIA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,WAAA,EAAA;AACA,IAAA,yBAAA,IAAA,MAAA;AAAM,IAAA,iBAAA,EAAA;;AAAgC,IAAA,uBAAA,EAAO,EACzC;AAGR,IAAA,qBAAA,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA,EAAqD,IAAA,iDAAA,GAAA,GAAA,OAAA,EAAA;AAcvD,IAAA,uBAAA;;;;;AAjCQ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,QAAA;AACuB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,aAAA,WAAA;AAKhB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,aAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,GAAA,aAAA,eAAA,QAAA,CAAA;AAEkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,aAAA,QAAA;AAKf,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA;AACH,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,aAAA,MAAA,CAAA;AAIoB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,aAAA,KAAA;AAIE,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,aAAA,WAAA,SAAA;;;;;AA9BpC,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,OAAA,CAAA,EAA2D,GAAA,0CAAA,IAAA,IAAA,OAAA,EAAA;AAwC7D,IAAA,uBAAA;;;;AAxCQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,WAAA,CAAA;AAIqB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,UAAA;;;AA+I7B,IAAO,sBAAP,MAAO,qBAAmB;EAapB;EACA;EACA;EAdV,aAA0B,CAAA;EAC1B,YAAY;EACZ,QAAuB;;EAGvB,UAAU;EACV,UAAU;EACV,gBAAgB;EAChB,aAAa;EACb,cAAc;EAEd,YACU,oBACA,aACA,UAAqB;AAFrB,SAAA,qBAAA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;EACP;EAEH,WAAQ;AACN,SAAK,eAAc;EACrB;EAEA,iBAAc;AACZ,SAAK,YAAY;AACjB,SAAK,QAAQ;AAEb,UAAM,OAAO,KAAK,YAAY,eAAc;AAC5C,QAAI,CAAC,MAAM;AACT,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB;IACF;AAEA,SAAK,mBAAmB,kBAAkB,KAAK,EAAE,EAAE,UAAU;MAC3D,MAAM,CAAC,eAA2B;AAChC,aAAK,aAAa;AAClB,aAAK,YAAY;MACnB;MACA,OAAO,CAAC,UAAgB;AACtB,gBAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAK,QAAQ;AACb,aAAK,YAAY;MACnB;KACD;EACH;EAEA,mBAAmB,aAAqB,UAAiC;AACvE,SAAK,mBAAmB,mBAAmB,aAAa,QAAQ,EAAE,UAAU;MAC1E,MAAM,MAAK;AACT,cAAM,UAAU,aAAa,aACzB,qCACA;AAEJ,aAAK,SAAS,KAAK,SAAS,SAAS;UACnC,UAAU;UACV,YAAY,CAAC,kBAAkB;SAChC;AAGD,cAAM,YAAY,KAAK,WAAW,KAAK,OAAK,EAAE,OAAO,WAAW;AAChE,YAAI,WAAW;AACb,oBAAU,SAAS;QACrB;MACF;MACA,OAAO,CAAC,UAAgB;AACtB,gBAAQ,MAAM,kCAAkC,KAAK;AACrD,aAAK,SAAS,KAAK,qDAAqD,SAAS;UAC/E,UAAU;UACV,YAAY,CAAC,gBAAgB;SAC9B;MACH;KACD;EACH;;qCAxEW,sBAAmB,4BAAA,kBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,cAAA,IAAA,SAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,kBAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,SAAA,mBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,cAAA,IAAA,SAAA,QAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AApK5B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAkC,GAAA,IAAA;AAC5B,MAAA,iBAAA,GAAA,iBAAA;AAAe,MAAA,uBAAA;AAGnB,MAAA,qBAAA,GAAA,oCAAA,GAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,oCAAA,GAAA,GAAA,OAAA,CAAA,EAMN,GAAA,oCAAA,GAAA,GAAA,OAAA,CAAA;AAgD7C,MAAA,uBAAA;;;AAtDQ,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,KAAA;AAMA,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,aAAA,CAAA,IAAA,KAAA;;;IA1BR;IAAwB;IACxB;IAAY;IAAA;IAAA;IAAA;IACZ;IACA;IAAe;IACf;IACA;IACA;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,g5DAAA,EAAA,CAAA;;;sEAuKR,qBAAmB,CAAA;UAlL/B;uBACW,kBAAgB,YACd,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4DT,QAAA,CAAA,kxDAAA,EAAA,CAAA;;;;6EAyGU,qBAAmB,EAAA,WAAA,uBAAA,UAAA,+EAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;;AC9KxB,IAAA,yBAAA,GAAA,OAAA,CAAA,EAEqB,GAAA,OAAA,CAAA;AACU,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA;AACzD,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA+B,IAAA,iBAAA,CAAA;AAAwC,IAAA,uBAAA,EAAM;;;;;AAH1E,IAAA,qBAAA,WAAA,0BAAA,GAAAG,MAAA,OAAA,cAAA,UAAA,GAAA,CAAA,OAAA,cAAA,UAAA,CAAA,CAAA;AAE0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,UAAA,CAAA;AACE,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,WAAA,SAAA,CAAA;;;AAsHnC,IAAO,mBAAP,MAAO,kBAAgB;EAKP;EAJpB,WAA0B,CAAA;EAC1B,UAAU;EACV,aAAa;EAEb,YAAoB,gBAA8B;AAA9B,SAAA,iBAAA;EAAiC;EAErD,WAAQ;AACN,SAAK,gBAAe;EACtB;;EAGA,kBAAe;AACb,SAAK,eAAe,eAAc,EAAG,UAAU;MAC7C,MAAM,CAAC,aAAY;AACjB,aAAK,WAAW;MAClB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,+BAA+B,KAAK;MACpD;KACD;EACH;;EAGA,eAAY;AACV,QAAI,QAAQ,kDAAkD,GAAG;AAC/D,WAAK,UAAU;AACf,WAAK,eAAe,aAAY,EAAG,UAAU;QAC3C,MAAM,MAAK;AACT,eAAK,WAAW,CAAA;AAChB,eAAK,UAAU;QACjB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,gCAAgC,KAAK;AACnD,eAAK,UAAU;QACjB;OACD;IACH;EACF;;EAGA,YAAY,SAAe;AACzB,QAAI,CAAC,QAAQ,KAAI;AAAI;AAErB,SAAK,UAAU;AACf,SAAK,eAAe,YAAY,OAAO,EAAE,UAAU;MACjD,MAAM,CAAC,aAA0B;AAC/B,aAAK,gBAAe;AACpB,aAAK,aAAa;AAClB,aAAK,UAAU;MACjB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,0BAA0B,KAAK;AAC7C,aAAK,UAAU;MACjB;KACD;EACH;;EAGA,iBAAiB,OAAa;AAC5B,SAAK,eAAe,gBAAgB,KAAK,EAAE,UAAU;MACnD,MAAM,CAAC,aAAoC;AACzC,gBAAQ,IAAI,mBAAmB,SAAS,OAAO;AAC/C,gBAAQ,IAAI,qBAAqB,SAAS,UAAU;AACpD,gBAAQ,IAAI,oBAAoB,SAAS,OAAO;MAClD;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,+BAA+B,KAAK;MACpD;KACD;EACH;;EAGA,WAAW,OAAa;AACtB,SAAK,eAAe,UAAU,KAAK,EAAE,UAAU;MAC7C,MAAM,CAAC,aAA8B;AACnC,gBAAQ,IAAI,mBAAmB,SAAS,OAAO;AAC/C,gBAAQ,IAAI,eAAe,SAAS,IAAI;AACxC,gBAAQ,IAAI,oBAAoB,SAAS,OAAO;MAClD;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,yBAAyB,KAAK;MAC9C;KACD;EACH;;EAGA,cAAc,SAAoB;AAChC,WAAO,KAAK,eAAe,cAAc,OAAO;EAClD;;EAGA,cAAc,SAAoB;AAChC,WAAO,KAAK,eAAe,cAAc,OAAO;EAClD;;EAGA,gBAAgB,WAAe;AAC7B,WAAO,KAAK,eAAe,gBAAgB,SAAS;EACtD;;EAGA,iBAAiB,OAAa;AAC5B,WAAO,KAAK,eAAe,iBAAiB,KAAK;EACnD;;qCAxGW,mBAAgB,4BAAA,cAAA,CAAA;EAAA;yEAAhB,mBAAgB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,aAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,SAAA,WAAA,GAAA,WAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,QAAA,QAAA,eAAA,wBAAA,GAAA,iBAAA,eAAA,WAAA,UAAA,GAAA,CAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,WAAA,GAAA,SAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,mBAAA,CAAA,GAAA,UAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAlIzB,MAAA,yBAAA,GAAA,OAAA,CAAA,EAA4B,GAAA,OAAA,CAAA,EACD,GAAA,IAAA;AACnB,MAAA,iBAAA,GAAA,gBAAA;AAAc,MAAA,uBAAA;AAClB,MAAA,yBAAA,GAAA,UAAA,CAAA;AAA0B,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,eAAS,IAAA,aAAA;MAAc,CAAA;AAC/C,MAAA,iBAAA,GAAA,sBAAA;AACF,MAAA,uBAAA,EAAS;AAEX,MAAA,yBAAA,GAAA,OAAA,CAAA;AACE,MAAA,qBAAA,GAAA,iCAAA,GAAA,GAAA,OAAA,CAAA;AAMF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,SAAA,CAAA;AAEpB,MAAA,2BAAA,iBAAA,SAAA,yDAAA,QAAA;AAAA,QAAA,6BAAA,IAAA,YAAA,MAAA,MAAA,IAAA,aAAA;AAAA,eAAA;MAAA,CAAA;AACA,MAAA,qBAAA,eAAA,SAAA,yDAAA;AAAA,eAAe,IAAA,YAAA,IAAA,UAAA;MAAuB,CAAA;AAF7C,MAAA,uBAAA;AAKA,MAAA,yBAAA,IAAA,UAAA,CAAA;AAAQ,MAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,eAAS,IAAA,YAAA,IAAA,UAAA;MAAuB,CAAA;AACtC,MAAA,iBAAA,IAAA,QAAA;AACF,MAAA,uBAAA,EAAS,EACL;;;AArB+C,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,OAAA;AAK1B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,QAAA;AASlB,MAAA,oBAAA,CAAA;AAAA,MAAA,2BAAA,WAAA,IAAA,UAAA;AAGA,MAAA,qBAAA,YAAA,IAAA,OAAA;AACmC,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,WAAA,CAAA,IAAA,UAAA;;oBAvBtC,cAAY,SAAA,SAAE,aAAW,sBAAA,iBAAA,OAAA,GAAA,QAAA,CAAA,m0DAAA,EAAA,CAAA;;;sEAoIxB,kBAAgB,CAAA;UAtI5B;uBACW,eAAa,SACd,CAAC,cAAc,WAAW,GAAC,UAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2BT,QAAA,CAAA,yuDAAA,EAAA,CAAA;;;;6EAwGU,kBAAgB,EAAA,WAAA,oBAAA,UAAA,yEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;ACjGf,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,4BAAA;AACF,IAAA,uBAAA;;;;;AAMA,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,wBAAA;AACF,IAAA,uBAAA;;;;;AASE,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,0BAAA;AACF,IAAA,uBAAA;;;;;AAeF,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,2BAAA;AACF,IAAA,uBAAA;;;;;AAME,IAAA,oBAAA,GAAA,eAAA,EAAA;;;;;AACA,IAAA,yBAAA,GAAA,MAAA;AAAyB,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;;;AA8ClD,IAAO,sBAAP,MAAO,qBAAmB;EAKpB;EACA;EACA;EACA;EAPV;EACA,YAAY;EAEZ,YACU,IACA,mBACA,aACA,UAAqB;AAHrB,SAAA,KAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;AAER,SAAK,iBAAiB,KAAK,GAAG,MAAM;MAClC,aAAa,CAAC,IAAI,WAAW,QAAQ;MACrC,UAAU,CAAC,IAAI,WAAW,QAAQ;MAClC,WAAW,CAAC,IAAI,WAAW,QAAQ;MACnC,SAAS,CAAC,EAAE;MACZ,aAAa,CAAC,IAAI,WAAW,QAAQ;KACtC;EACH;EAEA,WAAQ;EAER;EAEA,WAAQ;AACN,QAAI,KAAK,eAAe,OAAO;AAC7B,WAAK,YAAY;AACjB,YAAM,cAAc,KAAK,YAAY,eAAc;AAEnD,UAAI,CAAC,aAAa;AAChB,aAAK,SAAS,KAAK,0BAA0B,SAAS,EAAE,UAAU,IAAI,CAAE;AACxE,aAAK,YAAY;AACjB;MACF;AAEA,YAAM,iBAAuC;QAC3C,SAAS,KAAK,eAAe,MAAM;QACnC,OAAO,KAAK,eAAe,MAAM;QACjC,WAAW,KAAK,eAAe,MAAM;QACrC,SAAS,KAAK,eAAe,MAAM;QACnC,SAAS,CAAC,KAAK,eAAe,MAAM;QACpC,aAAa,KAAK,eAAe,MAAM;;AAGzC,WAAK,kBAAkB,iBAAiB,cAAc,EAAE,UAAU;QAChE,MAAM,CAAC,aAAY;AACjB,eAAK,SAAS,KAAK,iCAAiC,SAAS,EAAE,UAAU,IAAI,CAAE;AAC/E,eAAK,eAAe,MAAK;AACzB,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,4BAA4B,KAAK;AAC/C,eAAK,SAAS,KAAK,8CAA8C,SAAS,EAAE,UAAU,IAAI,CAAE;AAC5F,eAAK,YAAY;QACnB;OACD;IACH;EACF;;qCAxDW,sBAAmB,4BAAA,WAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,cAAA,WAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,eAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,YAAA,eAAA,qBAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,cAAA,SAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,aAAA,GAAA,eAAA,GAAA,CAAA,aAAA,IAAA,GAAA,KAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,WAAA,GAAA,eAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,eAAA,QAAA,KAAA,eAAA,iDAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,UAAA,GAAA,UAAA,GAAA,CAAA,YAAA,MAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AArG5B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAkC,GAAA,UAAA,EACtB,GAAA,iBAAA,EACS,GAAA,gBAAA;AACC,MAAA,iBAAA,GAAA,iBAAA;AAAe,MAAA,uBAAA,EAAiB;AAElD,MAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,QAAA,CAAA;AACmB,MAAA,qBAAA,YAAA,SAAA,wDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAY,IAAA,SAAA,CAAU;MAAA,CAAA;AACvD,MAAA,yBAAA,GAAA,kBAAA,CAAA,EAAwD,GAAA,WAAA;AAC3C,MAAA,iBAAA,GAAA,cAAA;AAAY,MAAA,uBAAA;AACvB,MAAA,oBAAA,IAAA,SAAA,CAAA;AACA,MAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AACnB,MAAA,oBAAA,IAAA,SAAA,CAAA;AACA,MAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,CAAA,EAAwB,IAAA,kBAAA,CAAA,EACe,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA;AACrB,MAAA,oBAAA,IAAA,SAAA,EAAA,EAA0E,IAAA,yBAAA,EAAA,EACG,IAAA,kBAAA,MAAA,CAAA;AAE7E,MAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAqC,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AACnB,MAAA,oBAAA,IAAA,SAAA,EAAA,EAAsE,IAAA,yBAAA,EAAA,EACK,IAAA,kBAAA,MAAA,CAAA;AAE7E,MAAA,uBAAA,EAAiB;AAGnB,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA;AACtB,MAAA,oBAAA,IAAA,YAAA,EAAA;AAEA,MAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,UAAA,EAAA;AAGtB,MAAA,qBAAA,IAAA,6CAAA,GAAA,GAAA,eAAA,EAAA,EAA6C,IAAA,sCAAA,GAAA,GAAA,QAAA,CAAA;AAE/C,MAAA,uBAAA,EAAS,EACL,EACD,EACU,EACV;;;;;;;;;AAtDD,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,cAAA;AAIU,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,eAAA,IAAA,aAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,eAAA,IAAA,UAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,iBAAA,cAAA;AACiB,MAAA,oBAAA;AAAA,MAAA,qBAAA,OAAA,cAAA;AAErB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,eAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAOI,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,iBAAA,YAAA;AACiB,MAAA,oBAAA;AAAA,MAAA,qBAAA,OAAA,YAAA;AASvB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,WAAA,IAAA,eAAA,IAAA,aAAA,MAAA,OAAA,OAAA,SAAA,SAAA,UAAA,CAAA;AAOV,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,CAAA,IAAA,eAAA,SAAA,IAAA,SAAA;AAC4B,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AACrB,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;;;IApEnB;IAAY;IACZ;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IAAkB;IAAA;IAAA;IAAA;IAClB;IAAc;IACd;IAAe;IACf;IAAmB;IAAA;IAAA;IACnB;IACA;IAAa;IAAA;IAAA;IAAA;IACb;IACA;IAAwB;IACxB;EAAiB,GAAA,QAAA,CAAA,2rBAAA,EAAA,CAAA;;;sEAwGR,qBAAmB,CAAA;UAtH/B;uBACW,kBAAgB,YACd,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA+DT,QAAA,CAAA,wuBAAA,EAAA,CAAA;;;;6EAuCU,qBAAmB,EAAA,WAAA,uBAAA,UAAA,+EAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;AC3FlB,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,gCAAA;AACF,IAAA,uBAAA;;;;;AAMA,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,sBAAA;AACF,IAAA,uBAAA;;;;;AAMA,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,8BAAA;AACF,IAAA,uBAAA;;;;;AASE,IAAA,yBAAA,GAAA,WAAA;AACE,IAAA,iBAAA,GAAA,0BAAA;AACF,IAAA,uBAAA;;;;;AAyBA,IAAA,oBAAA,GAAA,eAAA,EAAA;;;;;AACA,IAAA,yBAAA,GAAA,MAAA;AAAyB,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA;;;AA8CjD,IAAO,qBAAP,MAAO,oBAAkB;EAKnB;EACA;EACA;EACA;EAPV;EACA,YAAY;EAEZ,YACU,IACA,kBACA,aACA,UAAqB;AAHrB,SAAA,KAAA;AACA,SAAA,mBAAA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;AAER,SAAK,gBAAgB,KAAK,GAAG,MAAM;MACjC,iBAAiB,CAAC,IAAI,WAAW,QAAQ;MACzC,QAAQ,CAAC,IAAI,WAAW,QAAQ;MAChC,cAAc,CAAC,IAAI,WAAW,QAAQ;MACtC,WAAW,CAAC,IAAI,WAAW,QAAQ;MACnC,SAAS,CAAC,EAAE;MACZ,OAAO,CAAC,EAAE;MACV,aAAa,CAAC,EAAE;KACjB;EACH;EAEA,WAAQ;EAER;EAEA,WAAQ;AACN,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,YAAY;AACjB,YAAM,cAAc,KAAK,YAAY,eAAc;AAEnD,UAAI,CAAC,aAAa;AAChB,aAAK,SAAS,KAAK,0BAA0B,SAAS,EAAE,UAAU,IAAI,CAAE;AACxE,aAAK,YAAY;AACjB;MACF;AAEA,YAAM,gBAAqC;QACzC,aAAa,KAAK,cAAc,MAAM;QACtC,QAAQ,KAAK,cAAc,MAAM;QACjC,cAAc,KAAK,cAAc,MAAM;QACvC,WAAW,KAAK,cAAc,MAAM;QACpC,SAAS,KAAK,cAAc,MAAM;QAClC,SAAS,CAAC,KAAK,cAAc,MAAM;QACnC,aAAa,KAAK,cAAc,MAAM;;AAGxC,WAAK,iBAAiB,gBAAgB,aAAa,EAAE,UAAU;QAC7D,MAAM,CAAC,aAAY;AACjB,eAAK,SAAS,KAAK,gCAAgC,SAAS,EAAE,UAAU,IAAI,CAAE;AAC9E,eAAK,cAAc,MAAK;AACxB,eAAK,YAAY;QACnB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,2BAA2B,KAAK;AAC9C,eAAK,SAAS,KAAK,6CAA6C,SAAS,EAAE,UAAU,IAAI,CAAE;AAC3F,eAAK,YAAY;QACnB;OACD;IACH;EACF;;qCA3DW,qBAAkB,4BAAA,WAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,cAAA,WAAA,GAAA,YAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,mBAAA,eAAA,wBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,UAAA,eAAA,kCAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,gBAAA,eAAA,2BAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,cAAA,SAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,aAAA,GAAA,eAAA,GAAA,CAAA,aAAA,IAAA,GAAA,KAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,WAAA,GAAA,eAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,SAAA,eAAA,yBAAA,GAAA,CAAA,YAAA,IAAA,mBAAA,eAAA,QAAA,KAAA,eAAA,oDAAA,GAAA,CAAA,GAAA,cAAA,GAAA,CAAA,qBAAA,IAAA,SAAA,WAAA,QAAA,UAAA,GAAA,UAAA,GAAA,CAAA,YAAA,MAAA,GAAA,MAAA,GAAA,CAAA,YAAA,IAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AA/G3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAiC,GAAA,UAAA,EACrB,GAAA,iBAAA,EACS,GAAA,gBAAA;AACC,MAAA,iBAAA,GAAA,WAAA;AAAS,MAAA,uBAAA,EAAiB;AAE5C,MAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,QAAA,CAAA;AACkB,MAAA,qBAAA,YAAA,SAAA,uDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAY,IAAA,SAAA,CAAU;MAAA,CAAA;AACtD,MAAA,yBAAA,GAAA,kBAAA,CAAA,EAAwD,GAAA,WAAA;AAC3C,MAAA,iBAAA,GAAA,kBAAA;AAAgB,MAAA,uBAAA;AAC3B,MAAA,oBAAA,IAAA,SAAA,CAAA;AACA,MAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,oBAAA;AAAkB,MAAA,uBAAA;AAC7B,MAAA,oBAAA,IAAA,SAAA,CAAA;AACA,MAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,gBAAA;AAAc,MAAA,uBAAA;AACzB,MAAA,oBAAA,IAAA,SAAA,CAAA;AACA,MAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,CAAA,EAAwB,IAAA,kBAAA,EAAA,EACe,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA;AACrB,MAAA,oBAAA,IAAA,SAAA,EAAA,EAA0E,IAAA,yBAAA,EAAA,EACG,IAAA,kBAAA,MAAA,CAAA;AAE7E,MAAA,qBAAA,IAAA,0CAAA,GAAA,GAAA,aAAA,CAAA;AAGF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,EAAA,EAAqC,IAAA,WAAA;AACxB,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AACnB,MAAA,oBAAA,IAAA,SAAA,EAAA,EAAsE,IAAA,yBAAA,EAAA,EACK,IAAA,kBAAA,MAAA,CAAA;AAE7E,MAAA,uBAAA,EAAiB;AAGnB,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,WAAA;AAAS,MAAA,uBAAA;AACpB,MAAA,oBAAA,IAAA,SAAA,EAAA;AACF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAwD,IAAA,WAAA;AAC3C,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA;AACtB,MAAA,oBAAA,IAAA,YAAA,EAAA;AAEF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,UAAA,EAAA;AAGtB,MAAA,qBAAA,IAAA,4CAAA,GAAA,GAAA,eAAA,EAAA,EAA6C,IAAA,qCAAA,GAAA,GAAA,QAAA,CAAA;AAE/C,MAAA,uBAAA,EAAS,EACL,EACD,EACU,EACV;;;;;;;;;AAhED,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,aAAA;AAIU,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,cAAA,IAAA,iBAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,cAAA,IAAA,QAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,cAAA,IAAA,cAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAQM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,iBAAA,cAAA;AACiB,MAAA,oBAAA;AAAA,MAAA,qBAAA,OAAA,cAAA;AAErB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,UAAA,IAAA,cAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,SAAA,UAAA,CAAA;AAOI,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,iBAAA,YAAA;AACiB,MAAA,oBAAA;AAAA,MAAA,qBAAA,OAAA,YAAA;AAkBjC,MAAA,oBAAA,EAAA;AAAA,MAAA,qBAAA,YAAA,CAAA,IAAA,cAAA,SAAA,IAAA,SAAA;AAC4B,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AACrB,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,CAAA,IAAA,SAAA;;;IA9EnB;IAAY;IACZ;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IAAkB;IAAA;IAAA;IAAA;IAClB;IAAc;IACd;IAAe;IACf;IAAmB;IAAA;IAAA;IACnB;IACA;IAAa;IAAA;IAAA;IAAA;IACb;IACA;IAAwB;IACxB;EAAiB,GAAA,QAAA,CAAA,yrBAAA,EAAA,CAAA;;;sEAkHR,oBAAkB,CAAA;UAhI9B;uBACW,iBAAe,YACb,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyET,QAAA,CAAA,ouBAAA,EAAA,CAAA;;;;6EAuCU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,6EAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;AChIxB,IAAM,oBAA4B;EACvC;IACE,MAAM;IACN,WAAW;IACX,UAAU;MACR,EAAE,MAAM,IAAI,YAAY,WAAW,WAAW,OAAM;MACpD,EAAE,MAAM,WAAW,WAAW,iBAAgB;MAC9C,EAAE,MAAM,kBAAkB,WAAW,uBAAsB;MAC3D,EAAE,MAAM,gBAAgB,WAAW,qBAAoB;MACvD,EAAE,MAAM,cAAc,WAAW,mBAAkB;MACnD,EAAE,MAAM,eAAe,WAAW,oBAAmB;MACrD,EAAE,MAAM,gBAAgB,WAAW,qBAAoB;MACvD,EAAE,MAAM,gBAAgB,WAAW,wBAAuB;MAC1D,EAAE,MAAM,cAAc,WAAW,oBAAmB;;MAEpD,EAAE,MAAM,WAAW,WAAW,iBAAgB;MAC9C,EAAE,MAAM,cAAc,WAAW,oBAAmB;MACpD,EAAE,MAAM,aAAa,WAAW,mBAAkB;;;;;;AC5BjD,IAAM,YAA2B,CAAC,OAAO,UAAS;AACvD,QAAM,cAAc,OAAO,WAAW;AACtC,QAAM,SAAS,OAAO,MAAM;AAE5B,MAAI,CAAC,YAAY,gBAAe,GAAI;AAClC,WAAO,SAAS,CAAC,QAAQ,CAAC;AAC1B,WAAO;EACT;AAEA,QAAM,eAAe,MAAM,KAAK,MAAM;AACtC,MAAI,gBAAgB,CAAC,YAAY,QAAQ,YAAY,GAAG;AACtD,WAAO,SAAS,CAAC,GAAG,CAAC;AACrB,WAAO;EACT;AAEA,SAAO;AACT;;;;AC4NM,IAAOC,sBAAP,MAAO,oBAAkB;EAgBT;;EAdpB,SAAS;EACT,SAAS;EACT,SAAS;EACT,cAAc;EACd,UAAU;EACV,UAAU;EACV,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,aAAa;EAEb,WAAmB;EAEnB,YAAoB,aAAwB;AAAxB,SAAA,cAAA;EAA2B;EAE/C,WAAQ;AACN,UAAM,cAAc,KAAK,YAAY,eAAc;AACnD,QAAI,aAAa;AACf,WAAK,WAAW,YAAY;IAC9B;EACF;EAEA,gBAAa;EAEb;EAEA,SAAM;AACJ,SAAK,YAAY,OAAM,EAAG,UAAU;MAClC,MAAM,MAAK;MAEX;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,wBAAwB,KAAK;AAE3C,aAAK,YAAY,mBAAkB;MACrC;KACD;EACH;;qCAxCW,qBAAkB,4BAAA,WAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,wBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,WAAA,EAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,SAAA,WAAA,GAAA,kBAAA,GAAA,CAAA,mBAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,mBAAA,IAAA,cAAA,UAAA,SAAA,UAAA,GAAA,iBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,QAAA,QAAA,UAAA,IAAA,GAAA,SAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,eAAA,oBAAA,QAAA,GAAA,CAAA,GAAA,YAAA,GAAA,MAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,eAAA,oBAAA,UAAA,GAAA,aAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,kBAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,cAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,gBAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,WAAA,oBAAA,QAAA,GAAA,CAAA,iBAAA,IAAA,cAAA,sBAAA,oBAAA,QAAA,GAAA,CAAA,GAAA,cAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AAxM3B,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAiC,GAAA,eAAA,CAAA,EAEuB,GAAA,UAAA,CAAA;AAC5B,MAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAS,IAAA,cAAA,CAAe;MAAA,CAAA;AAC9C,MAAA,oBAAA,GAAA,WAAA,CAAA;AACF,MAAA,uBAAA;AACA,MAAA,yBAAA,GAAA,QAAA,CAAA;AAAyB,MAAA,iBAAA,GAAA,cAAA;AAAY,MAAA,uBAAA;AACrC,MAAA,oBAAA,GAAA,QAAA,CAAA;AACA,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,QAAA,CAAA;AACG,MAAA,iBAAA,CAAA;AAAY,MAAA,uBAAA;AACpC,MAAA,yBAAA,IAAA,QAAA,CAAA;AAAwB,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA,EAAO;AAEzC,MAAA,yBAAA,IAAA,UAAA,EAAA;AAA8C,MAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAS,IAAA,OAAA,CAAQ;MAAA,CAAA;AAC7D,MAAA,oBAAA,IAAA,WAAA,CAAA;AACF,MAAA,uBAAA,EAAS;AAIX,MAAA,yBAAA,IAAA,yBAAA,EAAA,EAAiD,IAAA,eAAA,IAAA,CAAA,EACU,IAAA,cAAA,EACzC,IAAA,OAAA,EAAA,EAiBa,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,gBAAA;AAAc,MAAA,uBAAA;AAC5C,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA,EAAO;AAG1B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,aAAA;AAAW,MAAA,uBAAA,EAAO;AAE1B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,gBAAA;AAAc,MAAA,uBAAA,EAAO,EACzB;AAIN,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,YAAA;AAAU,MAAA,uBAAA;AACxC,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,iBAAA;AAAe,MAAA,uBAAA,EAAO;AAE9B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA,EAAO,EACvB;AAIN,MAAA,yBAAA,IAAA,OAAA,EAAA,EAAyB,IAAA,MAAA,EAAA;AACO,MAAA,iBAAA,IAAA,OAAA;AAAK,MAAA,uBAAA;AACnC,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,cAAA;AAAY,MAAA,uBAAA,EAAO;AAE3B,MAAA,yBAAA,IAAA,KAAA,EAAA;AACE,MAAA,oBAAA,IAAA,WAAA,EAAA;AACA,MAAA,yBAAA,IAAA,MAAA;AAAM,MAAA,iBAAA,IAAA,8BAAA;AAA4B,MAAA,uBAAA,EAAO,EACvC,EACA,EACO;AAIjB,MAAA,yBAAA,IAAA,uBAAA,EAAA;AACE,MAAA,oBAAA,IAAA,eAAA;AACF,MAAA,uBAAA,EAAsB,EACA;;;AAlFX,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,MAAA;AAKe,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,IAAA,QAAA;AAIf,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,YAAA;AA2BM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,WAAA;AAI+B,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,eAAA,0BAAA,IAAAC,IAAA,CAAA;AAC/B,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,MAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,cAAA;AASA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AASA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,UAAA;AAIA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;;;IAtFrB;IACA;IAAY;IAAA;IAAA;IACZ;IAAgB;IAAA;IAAA;IAChB;IAAgB;IAChB;IAAe;IACf;IAAa;IAAA;IACb;IACA;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,iqEAAA,EAAA,CAAA;;;sEA2MRD,qBAAkB,CAAA;UAvN9B;uBACW,0BAAwB,YACtB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyFT,QAAA,CAAA,2/DAAA,EAAA,CAAA;;;;6EAgHUA,qBAAkB,EAAA,WAAA,sBAAA,UAAA,2EAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;AC7OxB,IAAM,kBAA0B;EACrC;IACE,MAAM;IACN,WAAWE;IACX,UAAU;MACR;QACE,MAAM;QACN,YAAY;QACZ,WAAW;;MAEb;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAA+B,EAAE,KAAK,OAAK,EAAE,gBAAgB;;MAE3F;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAA6B,EAAE,KAAK,OAAK,EAAE,gBAAgB;;MAEzF;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAA2C,EAAE,KAAK,OAAK,EAAE,sBAAsB;;MAE7G;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAAqC,EAAE,KAAK,OAAK,EAAE,mBAAmB;;MAEpG;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAAqC,EAAE,KAAK,OAAK,EAAE,mBAAmB;;MAEpG;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAA2C,EAAE,KAAK,OAAK,EAAE,sBAAsB;;MAE7G;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAAmC,EAAE,KAAK,OAAK,EAAE,mBAAmB;;MAElG;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAAuC,EAAE,KAAK,OAAK,EAAE,qBAAqB;;MAExG;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAA6B,EAAE,KAAK,OAAK,EAAE,gBAAgB;;MAEzF;QACE,MAAM;QACN,eAAe,MAAM,OAAO,qBAAmD,EAAE,KAAK,OAAK,EAAE,0BAA0B;;;;;;;AC3CxH,IAAM,SAAiB;EAC5B,EAAE,MAAM,IAAI,WAAW,qBAAoB;EAC3C,EAAE,MAAM,SAAS,WAAW,eAAc;EAC1C,EAAE,MAAM,UAAU,WAAW,gBAAe;EAC5C;IACE,MAAM;IACN,UAAU;IACV,aAAa,CAAC,SAAS;IACvB,MAAM,EAAE,MAAM,aAAY;;EAE5B;IACE,MAAM;IACN,UAAU;IACV,aAAa,CAAC,SAAS;IACvB,MAAM,EAAE,MAAM,WAAU;;EAE1B,EAAE,MAAM,MAAM,YAAY,GAAE;;;;ACpBvB,IAAM,kBAAqC,CAAC,KAAK,SAAQ;AAC9D,QAAM,cAAc,OAAO,WAAW;AACtC,QAAM,QAAQ,YAAY,SAAQ;AAElC,MAAI,OAAO;AACT,UAAM,IAAI,MAAM;MACd,YAAY;QACV,eAAe,UAAU,KAAK;;KAEjC;EACH;AAEA,SAAO,KAAK,GAAG;AACjB;;;ACXO,IAAM,YAA+B;EAC1C,WAAW;IACT,cAAc,MAAM;IACpB,kBACE,iBAAiB,CAAC,eAAe,CAAC,CAAC;;;;;ACAnC,IAAO,eAAP,MAAO,cAAY;EACvB,QAAQ;;qCADG,eAAY;EAAA;yEAAZ,eAAY,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,sBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAFZ,MAAA,oBAAA,GAAA,eAAA;;oBADD,cAAc,YAAY,GAAA,eAAA,EAAA,CAAA;;;sEAGzB,cAAY,CAAA;UANxB;WAAU;MACT,UAAU;MACV,YAAY;MACZ,SAAS,CAAC,cAAc,YAAY;MACpC,UAAU;KACX;;;;6EACY,cAAY,EAAA,WAAA,gBAAA,UAAA,4BAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;ACNzB,qBAAqB,cAAc,SAAS,EACzC,MAAM,CAAC,QAAQ,QAAQ,MAAM,GAAG,CAAC;","names":["_c0","_c0","_c0","_c1","MatDialogState","_c0","_c1","_c2","_c3","_MatThumb","_MatTickMark","_c0","_c1","_c2","_c3","_c0","_c0","_c0","_c1","_c2","_c0","DashboardComponent","_c0","DashboardComponent"],"x_google_ignoreList":[6,7,9,18,19,22,24,25]}