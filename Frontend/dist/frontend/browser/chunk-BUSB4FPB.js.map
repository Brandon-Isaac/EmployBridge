{
  "version": 3,
  "sources": ["src/app/components/employer-components/chatbot/chatbot.component.ts"],
  "sourcesContent": ["import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { \r\n  faPaperPlane, \r\n  faTrash,\r\n  faUser,\r\n  faRobot\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ChatbotService, ChatMessage, ChatResponse } from '../../../services/chatbot.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-employer-chatbot',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    FontAwesomeModule\r\n  ],\r\n  template: `\r\n    <div class=\"chatbot-container\">\r\n      <mat-card class=\"chatbot-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>AI Assistant</mat-card-title>\r\n          <button mat-icon-button (click)=\"clearChat()\" class=\"clear-button\">\r\n            <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n          </button>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div class=\"chatbot-content\">\r\n            <div class=\"chat-messages\" #chatMessages>\r\n              <div *ngFor=\"let message of messages\" \r\n                   [ngClass]=\"{'message': true, 'user-message': message.isFromUser, 'bot-message': !message.isFromUser}\">\r\n                <div class=\"message-icon\">\r\n                  <fa-icon [icon]=\"message.isFromUser ? faUser : faRobot\"></fa-icon>\r\n                </div>\r\n                <div class=\"message-content\">\r\n                  <div class=\"message-text\">{{message.content}}</div>\r\n                  <div class=\"message-timestamp\">{{chatbotService.formatTimestamp(message.timestamp)}}</div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"isLoading\" class=\"message bot-message\">\r\n                <div class=\"message-icon\">\r\n                  <fa-icon [icon]=\"faRobot\"></fa-icon>\r\n                </div>\r\n                <div class=\"message-content\">\r\n                  <div class=\"message-text typing-indicator\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <form [formGroup]=\"chatForm\" (ngSubmit)=\"sendMessage()\" class=\"chat-input\">\r\n              <mat-form-field class=\"message-input\">\r\n                <input matInput \r\n                       formControlName=\"message\" \r\n                       placeholder=\"Type your message...\"\r\n                       (keyup.enter)=\"sendMessage()\">\r\n              </mat-form-field>\r\n              <button mat-raised-button \r\n                      color=\"primary\" \r\n                      type=\"submit\"\r\n                      [disabled]=\"!chatForm.valid || isLoading\">\r\n                <fa-icon [icon]=\"faPaperPlane\"></fa-icon>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .chatbot-container {\r\n      padding: 20px;\r\n    }\r\n    .chatbot-card {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      height: 600px;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .chatbot-content {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n    }\r\n    .chat-messages {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      padding: 20px;\r\n      background: #f5f5f5;\r\n      border-radius: 4px;\r\n      margin-bottom: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n    .message {\r\n      display: flex;\r\n      gap: 12px;\r\n      max-width: 80%;\r\n    }\r\n    .user-message {\r\n      align-self: flex-end;\r\n      flex-direction: row-reverse;\r\n    }\r\n    .bot-message {\r\n      align-self: flex-start;\r\n    }\r\n    .message-icon {\r\n      width: 32px;\r\n      height: 32px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background: #e0e0e0;\r\n    }\r\n    .user-message .message-icon {\r\n      background: #1976d2;\r\n      color: white;\r\n    }\r\n    .bot-message .message-icon {\r\n      background: #424242;\r\n      color: white;\r\n    }\r\n    .message-content {\r\n      background: white;\r\n      padding: 12px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n    .user-message .message-content {\r\n      background: #e3f2fd;\r\n    }\r\n    .message-text {\r\n      margin-bottom: 4px;\r\n    }\r\n    .message-timestamp {\r\n      font-size: 0.75rem;\r\n      color: #666;\r\n    }\r\n    .chat-input {\r\n      display: flex;\r\n      gap: 10px;\r\n      padding: 10px 0;\r\n    }\r\n    .message-input {\r\n      flex: 1;\r\n    }\r\n    .clear-button {\r\n      margin-left: auto;\r\n    }\r\n    .typing-indicator {\r\n      display: flex;\r\n      gap: 4px;\r\n      padding: 8px 0;\r\n    }\r\n    .typing-indicator span {\r\n      width: 8px;\r\n      height: 8px;\r\n      background: #666;\r\n      border-radius: 50%;\r\n      animation: typing 1s infinite ease-in-out;\r\n    }\r\n    .typing-indicator span:nth-child(2) {\r\n      animation-delay: 0.2s;\r\n    }\r\n    .typing-indicator span:nth-child(3) {\r\n      animation-delay: 0.4s;\r\n    }\r\n    @keyframes typing {\r\n      0%, 100% { transform: translateY(0); }\r\n      50% { transform: translateY(-4px); }\r\n    }\r\n  `]\r\n})\r\nexport class ChatbotComponent implements OnInit, AfterViewChecked {\r\n  messages: ChatMessage[] = [];\r\n  chatForm: FormGroup;\r\n  isLoading = false;\r\n\r\n  // Font Awesome icons\r\n  faPaperPlane = faPaperPlane;\r\n  faTrash = faTrash;\r\n  faUser = faUser;\r\n  faRobot = faRobot;\r\n\r\n  @ViewChild('chatMessages') private chatMessages!: ElementRef;\r\n\r\n  constructor(\r\n    public chatbotService: ChatbotService,\r\n    private formBuilder: FormBuilder,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.chatForm = this.formBuilder.group({\r\n      message: ['', [Validators.required, Validators.minLength(1)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadChatHistory();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  loadChatHistory() {\r\n    this.chatbotService.getChatHistory().subscribe({\r\n      next: (messages) => {\r\n        this.messages = messages;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading chat history:', error);\r\n        this.snackBar.open(\r\n          'Failed to load chat history. Please try again.',\r\n          'Close',\r\n          {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'bottom'\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n    if (this.chatForm.valid && !this.isLoading) {\r\n      const message = this.chatForm.get('message')?.value;\r\n      this.isLoading = true;\r\n      this.chatForm.disable();\r\n\r\n      this.chatbotService.sendMessage(message).subscribe({\r\n        next: (response) => {\r\n          // Add user message\r\n          this.messages.push({\r\n            id: Date.now().toString(),\r\n            content: message,\r\n            isFromUser: true,\r\n            timestamp: new Date(),\r\n            userId: 'current-user'\r\n          });\r\n\r\n          // Add bot response\r\n          this.messages.push({\r\n            id: (Date.now() + 1).toString(),\r\n            content: response.response,\r\n            isFromUser: false,\r\n            timestamp: new Date(),\r\n            userId: 'bot'\r\n          });\r\n\r\n          this.chatForm.reset();\r\n          this.isLoading = false;\r\n          this.chatForm.enable();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error sending message:', error);\r\n          this.snackBar.open(\r\n            'Failed to send message. Please try again.',\r\n            'Close',\r\n            {\r\n              duration: 5000,\r\n              horizontalPosition: 'center',\r\n              verticalPosition: 'bottom'\r\n            }\r\n          );\r\n          this.isLoading = false;\r\n          this.chatForm.enable();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  clearChat() {\r\n    this.chatbotService.clearHistory().subscribe({\r\n      next: () => {\r\n        this.messages = [];\r\n        this.snackBar.open(\r\n          'Chat history cleared.',\r\n          'Close',\r\n          {\r\n            duration: 3000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'bottom'\r\n          }\r\n        );\r\n      },\r\n      error: (error) => {\r\n        console.error('Error clearing chat history:', error);\r\n        this.snackBar.open(\r\n          'Failed to clear chat history. Please try again.',\r\n          'Close',\r\n          {\r\n            duration: 5000,\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'bottom'\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    try {\r\n      this.chatMessages.nativeElement.scrollTop = this.chatMessages.nativeElement.scrollHeight;\r\n    } catch (err) {}\r\n  }\r\n} "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Cc,IAAA,yBAAA,GAAA,OAAA,EAAA,EAC2G,GAAA,OAAA,EAAA;AAEvG,IAAA,oBAAA,GAAA,WAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6B,GAAA,OAAA,EAAA;AACD,IAAA,iBAAA,CAAA;AAAmB,IAAA,uBAAA;AAC7C,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA+B,IAAA,iBAAA,CAAA;AAAqD,IAAA,uBAAA,EAAM,EACtF;;;;;AAPH,IAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,WAAA,YAAA,CAAA,WAAA,UAAA,CAAA;AAEQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,WAAA,aAAA,OAAA,SAAA,OAAA,OAAA;AAGiB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,OAAA;AACK,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,eAAA,gBAAA,WAAA,SAAA,CAAA;;;;;AAGnC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAmD,GAAA,OAAA,EAAA;AAE/C,IAAA,oBAAA,GAAA,WAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA6B,GAAA,OAAA,EAAA;AAEzB,IAAA,oBAAA,GAAA,MAAA,EAAa,GAAA,MAAA,EACA,GAAA,MAAA;AAEf,IAAA,uBAAA,EAAM,EACF;;;;AARK,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,OAAA;;;AAyIrB,IAAO,mBAAP,MAAO,kBAAgB;EAclB;EACC;EACA;EAfV,WAA0B,CAAA;EAC1B;EACA,YAAY;;EAGZ,eAAe;EACf,UAAU;EACV,SAAS;EACT,UAAU;EAEyB;EAEnC,YACS,gBACC,aACA,UAAqB;AAFtB,SAAA,iBAAA;AACC,SAAA,cAAA;AACA,SAAA,WAAA;AAER,SAAK,WAAW,KAAK,YAAY,MAAM;MACrC,SAAS,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,CAAC,CAAC,CAAC;KAC7D;EACH;EAEA,WAAQ;AACN,SAAK,gBAAe;EACtB;EAEA,qBAAkB;AAChB,SAAK,eAAc;EACrB;EAEA,kBAAe;AACb,SAAK,eAAe,eAAc,EAAG,UAAU;MAC7C,MAAM,CAAC,aAAY;AACjB,aAAK,WAAW;MAClB;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,+BAA+B,KAAK;AAClD,aAAK,SAAS,KACZ,kDACA,SACA;UACE,UAAU;UACV,oBAAoB;UACpB,kBAAkB;SACnB;MAEL;KACD;EACH;EAEA,cAAW;AACT,QAAI,KAAK,SAAS,SAAS,CAAC,KAAK,WAAW;AAC1C,YAAM,UAAU,KAAK,SAAS,IAAI,SAAS,GAAG;AAC9C,WAAK,YAAY;AACjB,WAAK,SAAS,QAAO;AAErB,WAAK,eAAe,YAAY,OAAO,EAAE,UAAU;QACjD,MAAM,CAAC,aAAY;AAEjB,eAAK,SAAS,KAAK;YACjB,IAAI,KAAK,IAAG,EAAG,SAAQ;YACvB,SAAS;YACT,YAAY;YACZ,WAAW,oBAAI,KAAI;YACnB,QAAQ;WACT;AAGD,eAAK,SAAS,KAAK;YACjB,KAAK,KAAK,IAAG,IAAK,GAAG,SAAQ;YAC7B,SAAS,SAAS;YAClB,YAAY;YACZ,WAAW,oBAAI,KAAI;YACnB,QAAQ;WACT;AAED,eAAK,SAAS,MAAK;AACnB,eAAK,YAAY;AACjB,eAAK,SAAS,OAAM;QACtB;QACA,OAAO,CAAC,UAAS;AACf,kBAAQ,MAAM,0BAA0B,KAAK;AAC7C,eAAK,SAAS,KACZ,6CACA,SACA;YACE,UAAU;YACV,oBAAoB;YACpB,kBAAkB;WACnB;AAEH,eAAK,YAAY;AACjB,eAAK,SAAS,OAAM;QACtB;OACD;IACH;EACF;EAEA,YAAS;AACP,SAAK,eAAe,aAAY,EAAG,UAAU;MAC3C,MAAM,MAAK;AACT,aAAK,WAAW,CAAA;AAChB,aAAK,SAAS,KACZ,yBACA,SACA;UACE,UAAU;UACV,oBAAoB;UACpB,kBAAkB;SACnB;MAEL;MACA,OAAO,CAAC,UAAS;AACf,gBAAQ,MAAM,gCAAgC,KAAK;AACnD,aAAK,SAAS,KACZ,mDACA,SACA;UACE,UAAU;UACV,oBAAoB;UACpB,kBAAkB;SACnB;MAEL;KACD;EACH;EAEQ,iBAAc;AACpB,QAAI;AACF,WAAK,aAAa,cAAc,YAAY,KAAK,aAAa,cAAc;IAC9E,SAAS,KAAK;IAAC;EACjB;;qCApIW,mBAAgB,4BAAA,cAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,WAAA,CAAA;EAAA;yEAAhB,mBAAgB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,WAAA,SAAA,uBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;;;;;;;;;AAhKzB,MAAA,yBAAA,GAAA,OAAA,CAAA,EAA+B,GAAA,YAAA,CAAA,EACE,GAAA,iBAAA,EACZ,GAAA,gBAAA;AACC,MAAA,iBAAA,GAAA,cAAA;AAAY,MAAA,uBAAA;AAC5B,MAAA,yBAAA,GAAA,UAAA,CAAA;AAAwB,MAAA,qBAAA,SAAA,SAAA,oDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAS,IAAA,UAAA,CAAW;MAAA,CAAA;AAC1C,MAAA,oBAAA,GAAA,WAAA,CAAA;AACF,MAAA,uBAAA,EAAS;AAEX,MAAA,yBAAA,GAAA,kBAAA,EAAkB,GAAA,OAAA,CAAA,EACa,GAAA,OAAA,GAAA,CAAA;AAEzB,MAAA,qBAAA,IAAA,kCAAA,GAAA,GAAA,OAAA,CAAA,EAC2G,IAAA,kCAAA,GAAA,GAAA,OAAA,CAAA;AAqB7G,MAAA,uBAAA;AACA,MAAA,yBAAA,IAAA,QAAA,CAAA;AAA6B,MAAA,qBAAA,YAAA,SAAA,sDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAY,IAAA,YAAA,CAAa;MAAA,CAAA;AACpD,MAAA,yBAAA,IAAA,kBAAA,EAAA,EAAsC,IAAA,SAAA,EAAA;AAI7B,MAAA,qBAAA,eAAA,SAAA,0DAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAe,IAAA,YAAA,CAAa;MAAA,CAAA;AAHnC,MAAA,uBAAA,EAGqC;AAEvC,MAAA,yBAAA,IAAA,UAAA,EAAA;AAIE,MAAA,oBAAA,IAAA,WAAA,CAAA;AACF,MAAA,uBAAA,EAAS,EACJ,EACH,EACW,EACV;;;AA7CI,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,OAAA;AAMkB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,QAAA;AAUnB,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,SAAA;AAaF,MAAA,oBAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,QAAA;AAUI,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,CAAA,IAAA,SAAA,SAAA,IAAA,SAAA;AACG,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,YAAA;;;IAvDrB;IAAY;IAAA;IAAA;IACZ;IAAa;IAAA;IAAA;IAAA;IACb;IAAe;IAAA;IACf;IAAkB;IAClB;IAAc;IACd;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IACA;IAAiB;EAAA,GAAA,QAAA,CAAA,u8EAAA,EAAA,CAAA;;;sEAmKR,kBAAgB,CAAA;UA9K5B;uBACW,wBAAsB,YACpB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAqDT,QAAA,CAAA,0mEAAA,EAAA,CAAA;wFAuHkC,cAAY,CAAA;UAA9C;WAAU,cAAc;;;;6EAXd,kBAAgB,EAAA,WAAA,oBAAA,UAAA,uEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": []
}
