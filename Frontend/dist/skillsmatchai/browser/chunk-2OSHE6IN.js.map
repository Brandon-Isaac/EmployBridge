{
  "version": 3,
  "sources": ["src/app/admin/components/user-management/user-management.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'JOB_SEEKER' | 'EMPLOYER' | 'ADMIN';\r\n  status: 'active' | 'inactive' | 'suspended';\r\n  createdAt: Date;\r\n  lastLogin: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatMenuModule,\r\n  ],\r\n  template: `\r\n    <div class=\"user-management-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>User Management</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <table mat-table [dataSource]=\"users\" class=\"users-table\">\r\n            <ng-container matColumnDef=\"email\">\r\n              <th mat-header-cell *matHeaderCellDef>Email</th>\r\n              <td mat-cell *matCellDef=\"let user\">{{ user.email }}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"role\">\r\n              <th mat-header-cell *matHeaderCellDef>Role</th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <mat-chip [color]=\"getRoleColor(user.role)\">\r\n                  {{ user.role }}\r\n                </mat-chip>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"status\">\r\n              <th mat-header-cell *matHeaderCellDef>Status</th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <mat-chip [color]=\"getStatusColor(user.status)\">\r\n                  {{ user.status }}\r\n                </mat-chip>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"createdAt\">\r\n              <th mat-header-cell *matHeaderCellDef>Created At</th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                {{ user.createdAt | date }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"lastLogin\">\r\n              <th mat-header-cell *matHeaderCellDef>Last Login</th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                {{ user.lastLogin | date }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n              <td mat-cell *matCellDef=\"let user\">\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                  <i class=\"\tfas fa-ellipsis-v\"></i>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\">\r\n                  <button mat-menu-item (click)=\"editUser(user)\">\r\n                    <span>Edit</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"suspendUser(user)\">\r\n                    <span>Suspend</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteUser(user)\">\r\n                    <span>Delete</span>\r\n                  </button>\r\n                </mat-menu>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n          </table>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .user-management-container {\r\n        padding: 20px;\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n      }\r\n      .users-table {\r\n        width: 100%;\r\n      }\r\n      mat-card {\r\n        padding: 20px;\r\n        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n      }\r\n      .users-table {\r\n        width: 100%;\r\n        overflow-x: auto;\r\n        margin-top: 20px;\r\n      }\r\n      mat-header-cell,\r\n      mat-cell {\r\n        padding: 10px;\r\n        text-align: left;\r\n      }\r\n\r\n      mat-header-row,\r\n      mat-row {\r\n        display: table-row;\r\n      }\r\n\r\n      mat-header-cell {\r\n        font-weight: bold;\r\n        background-color: #f4f4f4;\r\n      }\r\n\r\n      /* Make the actions menu button smaller for mobile */\r\n      button[mat-icon-button] i {\r\n        font-size: 18px;\r\n      }\r\n\r\n      /* Responsive design for small screens */\r\n      @media screen and (max-width: 768px) {\r\n        .users-table {\r\n          display: block;\r\n          overflow-x: auto;\r\n        }\r\n\r\n        .users-table mat-header-cell,\r\n        .users-table mat-cell {\r\n          font-size: 14px;\r\n        }\r\n\r\n        mat-card {\r\n          padding: 10px;\r\n        }\r\n\r\n        .user-management-container {\r\n          padding: 15px;\r\n        }\r\n\r\n        /* Stacking the table for small screens (Mobile-first approach) */\r\n        .users-table {\r\n          display: block;\r\n        }\r\n\r\n        .users-table mat-row {\r\n          display: block;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .users-table mat-header-row {\r\n          display: none; /* Hide headers in mobile */\r\n        }\r\n\r\n        .users-table mat-row mat-cell {\r\n          display: flex;\r\n          flex-direction: column;\r\n          padding: 10px;\r\n          border: 1px solid #ddd;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .users-table mat-row mat-cell .mat-chip {\r\n          margin-top: 10px;\r\n        }\r\n\r\n        /* Hide some columns for smaller screens */\r\n        .users-table mat-column-createdAt,\r\n        .users-table mat-column-lastLogin {\r\n          display: none;\r\n        }\r\n      }\r\n\r\n      /* Further adjustments for smaller mobile screens */\r\n      @media screen and (max-width: 480px) {\r\n        .users-table mat-row mat-cell {\r\n          font-size: 12px;\r\n        }\r\n\r\n        /* Icon size adjustment for small screens */\r\n        button[mat-icon-button] i {\r\n          font-size: 16px;\r\n        }\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'email',\r\n    'role',\r\n    'status',\r\n    'createdAt',\r\n    'lastLogin',\r\n    'actions',\r\n  ];\r\n  users: User[] = [\r\n    {\r\n      id: '1',\r\n      email: 'jobseeker@example.com',\r\n      role: 'JOB_SEEKER',\r\n      status: 'active',\r\n      createdAt: new Date('2024-01-01'),\r\n      lastLogin: new Date('2024-03-20'),\r\n    },\r\n    {\r\n      id: '2',\r\n      email: 'employer@example.com',\r\n      role: 'EMPLOYER',\r\n      status: 'active',\r\n      createdAt: new Date('2024-01-15'),\r\n      lastLogin: new Date('2024-03-19'),\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // Load users from backend\r\n  }\r\n\r\n  getRoleColor(role: string): string {\r\n    switch (role) {\r\n      case 'ADMIN':\r\n        return 'primary';\r\n      case 'EMPLOYER':\r\n        return 'accent';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'primary';\r\n      case 'suspended':\r\n        return 'warn';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  editUser(user: User): void {\r\n    console.log('Edit user:', user);\r\n    // Implement edit functionality\r\n  }\r\n\r\n  suspendUser(user: User): void {\r\n    console.log('Suspend user:', user);\r\n    // Implement suspend functionality\r\n  }\r\n\r\n  deleteUser(user: User): void {\r\n    console.log('Delete user:', user);\r\n    // Implement delete functionality\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
