{
  "version": 3,
  "sources": ["src/app/admin/components/system-monitoring/system-monitoring.component.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\ninterface SystemMetric {\r\n  name: string;\r\n  value: number;\r\n  unit: string;\r\n  status: 'normal' | 'warning' | 'critical';\r\n  trend: 'up' | 'down' | 'stable';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-system-monitoring',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n  ],\r\n  template: `\r\n    <div class=\"system-monitoring-container\">\r\n      <mat-grid-list cols=\"2\" rowHeight=\"200px\" gutterSize=\"16\">\r\n        <mat-grid-tile *ngFor=\"let metric of metrics\">\r\n          <mat-card class=\"metric-card\">\r\n            <mat-card-header>\r\n              <mat-card-title>{{ metric.name }}</mat-card-title>\r\n              <mat-card-subtitle>\r\n                <mat-icon [class]=\"getTrendClass(metric.trend)\">\r\n                  {{ getTrendIcon(metric.trend) }}\r\n                </mat-icon>\r\n                {{ metric.value }} {{ metric.unit }}\r\n              </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <mat-progress-bar\r\n                [mode]=\"'determinate'\"\r\n                [value]=\"metric.value\"\r\n                [color]=\"getStatusColor(metric.status)\"\r\n              >\r\n              </mat-progress-bar>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n              <button mat-button color=\"primary\" (click)=\"viewDetails(metric)\">\r\n                View Details\r\n              </button>\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .system-monitoring-container {\r\n        padding: 20px;\r\n      }\r\n      .metric-card {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      .trend-up {\r\n        color: #4caf50;\r\n      }\r\n      .trend-down {\r\n        color: #f44336;\r\n      }\r\n      .trend-stable {\r\n        color: #2196f3;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class SystemMonitoringComponent implements OnInit {\r\n  metrics: SystemMetric[] = [\r\n    {\r\n      name: 'CPU Usage',\r\n      value: 75,\r\n      unit: '%',\r\n      status: 'warning',\r\n      trend: 'up',\r\n    },\r\n    {\r\n      name: 'Memory Usage',\r\n      value: 60,\r\n      unit: '%',\r\n      status: 'normal',\r\n      trend: 'stable',\r\n    },\r\n    {\r\n      name: 'Disk Space',\r\n      value: 85,\r\n      unit: '%',\r\n      status: 'warning',\r\n      trend: 'up',\r\n    },\r\n    {\r\n      name: 'Network Traffic',\r\n      value: 45,\r\n      unit: 'Mbps',\r\n      status: 'normal',\r\n      trend: 'down',\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // Load system metrics from backend\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'normal':\r\n        return 'primary';\r\n      case 'warning':\r\n        return 'accent';\r\n      case 'critical':\r\n        return 'warn';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  getTrendIcon(trend: string): string {\r\n    switch (trend) {\r\n      case 'up':\r\n        return 'trending_up';\r\n      case 'down':\r\n        return 'trending_down';\r\n      default:\r\n        return 'trending_flat';\r\n    }\r\n  }\r\n\r\n  getTrendClass(trend: string): string {\r\n    return `trend-${trend}`;\r\n  }\r\n\r\n  viewDetails(metric: SystemMetric): void {\r\n    console.log('View details for:', metric);\r\n    // Implement detailed view functionality\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
